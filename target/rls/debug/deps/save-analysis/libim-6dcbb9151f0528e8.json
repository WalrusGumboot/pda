{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0","program":"/home/simeon/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","im","--edition=2018","/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"rayon\"","--cfg","feature=\"serde\"","-C","metadata=6dcbb9151f0528e8","-C","extra-filename=-6dcbb9151f0528e8","--out-dir","/home/simeon/dev/rust/anchor/pda/target/rls/debug/deps","-L","dependency=/home/simeon/dev/rust/anchor/pda/target/rls/debug/deps","--extern","bitmaps=/home/simeon/dev/rust/anchor/pda/target/rls/debug/deps/libbitmaps-ffa308c7219a32ab.rmeta","--extern","rand_core=/home/simeon/dev/rust/anchor/pda/target/rls/debug/deps/librand_core-deb1104a78cfcdda.rmeta","--extern","rand_xoshiro=/home/simeon/dev/rust/anchor/pda/target/rls/debug/deps/librand_xoshiro-1cf13f70f6487ba3.rmeta","--extern","rayon=/home/simeon/dev/rust/anchor/pda/target/rls/debug/deps/librayon-080ddb46d5070f02.rmeta","--extern","serde=/home/simeon/dev/rust/anchor/pda/target/rls/debug/deps/libserde-e445950fae3d83a2.rmeta","--extern","sized_chunks=/home/simeon/dev/rust/anchor/pda/target/rls/debug/deps/libsized_chunks-fd59caffa9b0ed99.rmeta","--extern","typenum=/home/simeon/dev/rust/anchor/pda/target/rls/debug/deps/libtypenum-481c0d2510c79ba0.rmeta","--cap-lints","allow","--cfg","threadsafe","--error-format=json","--sysroot","/home/simeon/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/simeon/dev/rust/anchor/pda/target/rls/debug/deps/libim-6dcbb9151f0528e8.rmeta"},"prelude":{"crate_id":{"name":"im","disambiguator":[2181665621108343354,0]},"crate_root":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src","external_crates":[{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14026078687029744792,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5443730852259234579,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4162025702538114948,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17612152343462746361,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5560808256873132085,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[135160560163186024,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5800521777261530329,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7095478770525139037,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17225897750877482818,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15613653607383163471,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[12428323400248712701,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11893279639181573711,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[13583305032161054644,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16609837797022023111,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","num":15,"id":{"name":"object","disambiguator":[18098459435141129808,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15244551393771456017,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[6576340271055396708,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[15284510821186066958,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12982807908830018159,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/config.rs","num":20,"id":{"name":"typenum","disambiguator":[9280503260711882713,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","num":21,"id":{"name":"sized_chunks","disambiguator":[8289181883488035362,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","num":22,"id":{"name":"bitmaps","disambiguator":[11659166298805718372,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/sort.rs","num":23,"id":{"name":"rand_core","disambiguator":[18418966477224911104,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/sort.rs","num":24,"id":{"name":"getrandom","disambiguator":[739867570589179591,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/sort.rs","num":25,"id":{"name":"cfg_if","disambiguator":[1004283514336169005,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/sort.rs","num":26,"id":{"name":"libc","disambiguator":[4287381645232922677,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","num":27,"id":{"name":"rayon","disambiguator":[5297046102595607856,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","num":28,"id":{"name":"either","disambiguator":[4415802574558717629,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","num":29,"id":{"name":"rayon_core","disambiguator":[5379425280069620577,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","num":30,"id":{"name":"crossbeam_channel","disambiguator":[7776731432217755517,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","num":31,"id":{"name":"crossbeam_utils","disambiguator":[6443536939578642150,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","num":32,"id":{"name":"lazy_static","disambiguator":[9708727071027780738,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","num":33,"id":{"name":"crossbeam_deque","disambiguator":[8156582553416666305,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","num":34,"id":{"name":"crossbeam_epoch","disambiguator":[7571158957769905963,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","num":35,"id":{"name":"scopeguard","disambiguator":[6845241270465700697,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","num":36,"id":{"name":"memoffset","disambiguator":[18135763014048367315,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","num":37,"id":{"name":"num_cpus","disambiguator":[2842463826126538116,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","num":38,"id":{"name":"serde","disambiguator":[9751978528663759475,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","num":39,"id":{"name":"serde_derive","disambiguator":[4903821469875023658,0]}},{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/sort.rs","num":40,"id":{"name":"rand_xoshiro","disambiguator":[17173268755052277390,0]}}],"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":203,"byte_end":24179,"line_start":5,"line_end":507,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":230},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":149892,"byte_end":149905,"line_start":36,"line_end":36,"column_start":5,"column_end":18},"alias_span":null,"name":"ConsumingIter","value":"","parent":{"krate":0,"index":753}},{"kind":"Use","ref_id":{"krate":0,"index":3537},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":149907,"byte_end":149915,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"alias_span":null,"name":"NodeDiffItem","value":"","parent":{"krate":0,"index":753}},{"kind":"Use","ref_id":{"krate":0,"index":255},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":149933,"byte_end":149941,"line_start":36,"line_end":36,"column_start":46,"column_end":54},"alias_span":null,"name":"NodeDiffIter","value":"","parent":{"krate":0,"index":753}},{"kind":"Use","ref_id":{"krate":0,"index":197},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":149959,"byte_end":149963,"line_start":36,"line_end":36,"column_start":72,"column_end":76},"alias_span":null,"name":"RangedIter","value":"","parent":{"krate":0,"index":753}},{"kind":"Use","ref_id":{"krate":0,"index":3537},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":223802,"byte_end":223810,"line_start":37,"line_end":37,"column_start":30,"column_end":38},"alias_span":null,"name":"DiffItem","value":"","parent":{"krate":0,"index":1314}},{"kind":"Use","ref_id":{"krate":0,"index":753},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":19856,"byte_end":19859,"line_start":357,"line_end":357,"column_start":21,"column_end":24},"alias_span":null,"name":"ordmap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1314},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":19891,"byte_end":19894,"line_start":358,"line_end":358,"column_start":21,"column_end":24},"alias_span":null,"name":"ordset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1643},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":19951,"byte_end":19954,"line_start":362,"line_end":362,"column_start":22,"column_end":25},"alias_span":null,"name":"hashmap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2192},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":19988,"byte_end":19991,"line_start":363,"line_end":363,"column_start":22,"column_end":25},"alias_span":null,"name":"hashset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2696},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":353034,"byte_end":353039,"line_start":66,"line_end":66,"column_start":23,"column_end":28},"alias_span":null,"name":"Focus","value":"","parent":{"krate":0,"index":2514}},{"kind":"Use","ref_id":{"krate":0,"index":2755},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":353041,"byte_end":353049,"line_start":66,"line_end":66,"column_start":30,"column_end":38},"alias_span":null,"name":"FocusMut","value":"","parent":{"krate":0,"index":2514}},{"kind":"Use","ref_id":{"krate":0,"index":2842},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":353083,"byte_end":353090,"line_start":69,"line_end":69,"column_start":21,"column_end":28},"alias_span":null,"name":"RRBPool","value":"","parent":{"krate":0,"index":2514}},{"kind":"Use","ref_id":{"krate":0,"index":1732},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":20570,"byte_end":20577,"line_start":393,"line_end":393,"column_start":25,"column_end":32},"alias_span":null,"name":"HashMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2282},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":20603,"byte_end":20610,"line_start":394,"line_end":394,"column_start":25,"column_end":32},"alias_span":null,"name":"HashSet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":859},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":20635,"byte_end":20641,"line_start":395,"line_end":395,"column_start":24,"column_end":30},"alias_span":null,"name":"OrdMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1419},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":20666,"byte_end":20672,"line_start":396,"line_end":396,"column_start":24,"column_end":30},"alias_span":null,"name":"OrdSet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2966},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":20712,"byte_end":20718,"line_start":398,"line_end":398,"column_start":24,"column_end":30},"alias_span":null,"name":"Vector","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":203,"byte_end":24179,"line_start":5,"line_end":507,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":9},{"krate":0,"index":653},{"krate":0,"index":679},{"krate":0,"index":704},{"krate":0,"index":752},{"krate":0,"index":1636},{"krate":0,"index":1639},{"krate":0,"index":1642},{"krate":0,"index":2508},{"krate":0,"index":2511},{"krate":0,"index":2514},{"krate":0,"index":3270},{"krate":0,"index":3278},{"krate":0,"index":3436},{"krate":0,"index":3520},{"krate":0,"index":3523},{"krate":0,"index":3526},{"krate":0,"index":3529},{"krate":0,"index":3532},{"krate":0,"index":3535},{"krate":0,"index":3536}],"decl_id":null,"docs":" # Immutable Data Structures for Rust","sig":null,"attributes":[{"value":"/ # Immutable Data Structures for Rust","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":203,"byte_end":243,"line_start":5,"line_end":5,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":244,"byte_end":247,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This library implements several of the more commonly useful immutable data","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":248,"byte_end":326,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ structures for Rust.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":327,"byte_end":351,"line_start":8,"line_end":8,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":352,"byte_end":355,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ## What are immutable data structures?","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":356,"byte_end":398,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":399,"byte_end":402,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Immutable data structures are data structures which can be copied and","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":403,"byte_end":476,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ modified efficiently without altering the original. The most uncomplicated","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":477,"byte_end":555,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ example of this is the venerable [cons list][cons-list]. This crate offers a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":556,"byte_end":636,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ selection of more modern and flexible data structures with similar","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":637,"byte_end":707,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ properties, tuned for the needs of Rust developers.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":708,"byte_end":763,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":764,"byte_end":767,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Briefly, the following data structures are provided:","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":768,"byte_end":824,"line_start":18,"line_end":18,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":825,"byte_end":828,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * [Vectors][vector::Vector] based on [RRB trees][rrb-tree]","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":829,"byte_end":891,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/ * [Hash maps][hashmap::HashMap]/[sets][hashset::HashSet] based on [hash","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":892,"byte_end":967,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/   array mapped tries][hamt]","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":968,"byte_end":999,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/ * [Ordered maps][ordmap::OrdMap]/[sets][ordset::OrdSet] based on","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":1000,"byte_end":1068,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/   [B-trees][b-tree]","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":1069,"byte_end":1092,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":1093,"byte_end":1096,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ## Why Would I Want This?","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":1097,"byte_end":1126,"line_start":26,"line_end":26,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":1127,"byte_end":1130,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ While immutable data structures can be a game changer for other","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":1131,"byte_end":1198,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/ programming languages, the most obvious benefit - avoiding the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":1199,"byte_end":1265,"line_start":29,"line_end":29,"column_start":1,"column_end":67}},{"value":"/ accidental mutation of data - is already handled so well by Rust's","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":1266,"byte_end":1336,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ type system that it's just not something a Rust programmer needs","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":1337,"byte_end":1405,"line_start":31,"line_end":31,"column_start":1,"column_end":69}},{"value":"/ to worry about even when using data structures that would send a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":1406,"byte_end":1474,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"/ conscientious Clojure programmer into a panic.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":1475,"byte_end":1525,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":1526,"byte_end":1529,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Immutable data structures offer other benefits, though, some of","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":1530,"byte_end":1597,"line_start":35,"line_end":35,"column_start":1,"column_end":68}},{"value":"/ which are useful even in a language like Rust. The most prominent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":1598,"byte_end":1667,"line_start":36,"line_end":36,"column_start":1,"column_end":70}},{"value":"/ is *structural sharing*, which means that if two data structures","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":1668,"byte_end":1736,"line_start":37,"line_end":37,"column_start":1,"column_end":69}},{"value":"/ are mostly copies of each other, most of the memory they take up","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":1737,"byte_end":1805,"line_start":38,"line_end":38,"column_start":1,"column_end":69}},{"value":"/ will be shared between them. This implies that making copies of an","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":1806,"byte_end":1876,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/ immutable data structure is cheap: it's really only a matter of","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":1877,"byte_end":1944,"line_start":40,"line_end":40,"column_start":1,"column_end":68}},{"value":"/ copying a pointer and increasing a reference counter, where in the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":1945,"byte_end":2015,"line_start":41,"line_end":41,"column_start":1,"column_end":71}},{"value":"/ case of [`Vec`][std::vec::Vec] you have to allocate the same","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":2016,"byte_end":2080,"line_start":42,"line_end":42,"column_start":1,"column_end":65}},{"value":"/ amount of memory all over again and make a copy of every element","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":2081,"byte_end":2149,"line_start":43,"line_end":43,"column_start":1,"column_end":69}},{"value":"/ it contains. For immutable data structures, extra memory isn't","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":2150,"byte_end":2216,"line_start":44,"line_end":44,"column_start":1,"column_end":67}},{"value":"/ allocated until you modify either the copy or the original, and","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":2217,"byte_end":2284,"line_start":45,"line_end":45,"column_start":1,"column_end":68}},{"value":"/ then only the memory needed to record the difference.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":2285,"byte_end":2342,"line_start":46,"line_end":46,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":2343,"byte_end":2346,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Another goal of this library has been the idea that you shouldn't","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":2347,"byte_end":2416,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ even have to think about what data structure to use in any given","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":2417,"byte_end":2485,"line_start":49,"line_end":49,"column_start":1,"column_end":69}},{"value":"/ situation, until the point where you need to start worrying about","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":2486,"byte_end":2555,"line_start":50,"line_end":50,"column_start":1,"column_end":70}},{"value":"/ optimisation - which, in practice, often never comes. Beyond the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":2556,"byte_end":2624,"line_start":51,"line_end":51,"column_start":1,"column_end":69}},{"value":"/ shape of your data (ie. whether to use a list or a map), it should","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":2625,"byte_end":2695,"line_start":52,"line_end":52,"column_start":1,"column_end":71}},{"value":"/ be fine not to think too carefully about data structures - you can","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":2696,"byte_end":2766,"line_start":53,"line_end":53,"column_start":1,"column_end":71}},{"value":"/ just pick the one that has the right shape and it should have","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":2767,"byte_end":2832,"line_start":54,"line_end":54,"column_start":1,"column_end":66}},{"value":"/ acceptable performance characteristics for every operation you","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":2833,"byte_end":2899,"line_start":55,"line_end":55,"column_start":1,"column_end":67}},{"value":"/ might need. Specialised data structures will always be faster at","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":2900,"byte_end":2968,"line_start":56,"line_end":56,"column_start":1,"column_end":69}},{"value":"/ what they've been specialised for, but `im` aims to provide the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":2969,"byte_end":3036,"line_start":57,"line_end":57,"column_start":1,"column_end":68}},{"value":"/ data structures which deliver the least chance of accidentally","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":3037,"byte_end":3103,"line_start":58,"line_end":58,"column_start":1,"column_end":67}},{"value":"/ using them for the wrong thing.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":3104,"byte_end":3139,"line_start":59,"line_end":59,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":3140,"byte_end":3143,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ For instance, [`Vec`][std::vec::Vec] beats everything at memory","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":3144,"byte_end":3211,"line_start":61,"line_end":61,"column_start":1,"column_end":68}},{"value":"/ usage, indexing and operations that happen at the back of the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":3212,"byte_end":3277,"line_start":62,"line_end":62,"column_start":1,"column_end":66}},{"value":"/ list, but is terrible at insertion and removal, and gets worse the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":3278,"byte_end":3348,"line_start":63,"line_end":63,"column_start":1,"column_end":71}},{"value":"/ closer to the front of the list you get.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":3349,"byte_end":3393,"line_start":64,"line_end":64,"column_start":1,"column_end":45}},{"value":"/ [`VecDeque`][std::collections::VecDeque] adds a little bit of","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":3394,"byte_end":3459,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ complexity in order to make operations at the front as efficient","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":3460,"byte_end":3528,"line_start":66,"line_end":66,"column_start":1,"column_end":69}},{"value":"/ as operations at the back, but is still bad at insertion and","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":3529,"byte_end":3593,"line_start":67,"line_end":67,"column_start":1,"column_end":65}},{"value":"/ especially concatenation. [`Vector`][vector::Vector] adds another","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":3594,"byte_end":3663,"line_start":68,"line_end":68,"column_start":1,"column_end":70}},{"value":"/ bit of complexity, and could never match [`Vec`][std::vec::Vec] at","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":3664,"byte_end":3734,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ what it's best at, but in return every operation you can throw at","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":3735,"byte_end":3804,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/ it can be completed in a reasonable amount of time - even normally","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":3805,"byte_end":3875,"line_start":71,"line_end":71,"column_start":1,"column_end":71}},{"value":"/ expensive operations like copying and especially concatenation are","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":3876,"byte_end":3946,"line_start":72,"line_end":72,"column_start":1,"column_end":71}},{"value":"/ reasonably cheap when using a [`Vector`][vector::Vector].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":3947,"byte_end":4008,"line_start":73,"line_end":73,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":4009,"byte_end":4012,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ It should be noted, however, that because of its simplicity,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":4013,"byte_end":4077,"line_start":75,"line_end":75,"column_start":1,"column_end":65}},{"value":"/ [`Vec`][std::vec::Vec] actually beats [`Vector`][vector::Vector] even at its","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":4078,"byte_end":4158,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ strongest operations at small sizes, just because modern CPUs are","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":4159,"byte_end":4228,"line_start":77,"line_end":77,"column_start":1,"column_end":70}},{"value":"/ hyperoptimised for things like copying small chunks of contiguous memory -","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":4229,"byte_end":4307,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/ you actually need to go past a certain size (usually in the vicinity of","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":4308,"byte_end":4383,"line_start":79,"line_end":79,"column_start":1,"column_end":76}},{"value":"/ several hundred elements) before you get to the point where","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":4384,"byte_end":4447,"line_start":80,"line_end":80,"column_start":1,"column_end":64}},{"value":"/ [`Vec`][std::vec::Vec] isn't always going to be the fastest choice.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":4448,"byte_end":4519,"line_start":81,"line_end":81,"column_start":1,"column_end":72}},{"value":"/ [`Vector`][vector::Vector] attempts to overcome this by actually just being","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":4520,"byte_end":4599,"line_start":82,"line_end":82,"column_start":1,"column_end":80}},{"value":"/ an array at very small sizes, and being able to switch efficiently to the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":4600,"byte_end":4677,"line_start":83,"line_end":83,"column_start":1,"column_end":78}},{"value":"/ full data structure when it grows large enough. Thus,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":4678,"byte_end":4735,"line_start":84,"line_end":84,"column_start":1,"column_end":58}},{"value":"/ [`Vector`][vector::Vector] will actually be equivalent to","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":4736,"byte_end":4797,"line_start":85,"line_end":85,"column_start":1,"column_end":62}},{"value":"/ [Vec][std::vec::Vec] until it grows past the size of a single chunk.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":4798,"byte_end":4870,"line_start":86,"line_end":86,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":4871,"byte_end":4874,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ The maps - [`HashMap`][hashmap::HashMap] and","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":4875,"byte_end":4923,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/ [`OrdMap`][ordmap::OrdMap] - generally perform similarly to their","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":4924,"byte_end":4993,"line_start":89,"line_end":89,"column_start":1,"column_end":70}},{"value":"/ equivalents in the standard library, but tend to run a bit slower","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":4994,"byte_end":5063,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"/ on the basic operations ([`HashMap`][hashmap::HashMap] is almost","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":5064,"byte_end":5132,"line_start":91,"line_end":91,"column_start":1,"column_end":69}},{"value":"/ neck and neck with its counterpart, while","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":5133,"byte_end":5178,"line_start":92,"line_end":92,"column_start":1,"column_end":46}},{"value":"/ [`OrdMap`][ordmap::OrdMap] currently tends to run 2-3x slower). On","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":5179,"byte_end":5249,"line_start":93,"line_end":93,"column_start":1,"column_end":71}},{"value":"/ the other hand, they offer the cheap copy and structural sharing","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":5250,"byte_end":5318,"line_start":94,"line_end":94,"column_start":1,"column_end":69}},{"value":"/ between copies that you'd expect from immutable data structures.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":5319,"byte_end":5387,"line_start":95,"line_end":95,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":5388,"byte_end":5391,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ In conclusion, the aim of this library is to provide a safe","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":5392,"byte_end":5455,"line_start":97,"line_end":97,"column_start":1,"column_end":64}},{"value":"/ default choice for the most common kinds of data structures,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":5456,"byte_end":5520,"line_start":98,"line_end":98,"column_start":1,"column_end":65}},{"value":"/ allowing you to defer careful thinking about the right data","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":5521,"byte_end":5584,"line_start":99,"line_end":99,"column_start":1,"column_end":64}},{"value":"/ structure for the job until you need to start looking for","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":5585,"byte_end":5646,"line_start":100,"line_end":100,"column_start":1,"column_end":62}},{"value":"/ optimisations - and you may find, especially for larger data sets,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":5647,"byte_end":5717,"line_start":101,"line_end":101,"column_start":1,"column_end":71}},{"value":"/ that immutable data structures are still the right choice.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":5718,"byte_end":5780,"line_start":102,"line_end":102,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":5781,"byte_end":5784,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ## Values","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":5785,"byte_end":5798,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":5799,"byte_end":5802,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ Because we need to make copies of shared nodes in these data structures","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":5803,"byte_end":5878,"line_start":106,"line_end":106,"column_start":1,"column_end":76}},{"value":"/ before updating them, the values you store in them must implement","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":5879,"byte_end":5948,"line_start":107,"line_end":107,"column_start":1,"column_end":70}},{"value":"/ [`Clone`][std::clone::Clone].  For primitive values that implement","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":5949,"byte_end":6019,"line_start":108,"line_end":108,"column_start":1,"column_end":71}},{"value":"/ [`Copy`][std::marker::Copy], such as numbers, everything is fine: this is","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":6020,"byte_end":6097,"line_start":109,"line_end":109,"column_start":1,"column_end":78}},{"value":"/ the case for which the data structures are optimised, and performance is","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":6098,"byte_end":6174,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ going to be great.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":6175,"byte_end":6197,"line_start":111,"line_end":111,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":6198,"byte_end":6201,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ On the other hand, if you want to store values for which cloning is","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":6202,"byte_end":6273,"line_start":113,"line_end":113,"column_start":1,"column_end":72}},{"value":"/ expensive, or values that don't implement [`Clone`][std::clone::Clone], you","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":6274,"byte_end":6353,"line_start":114,"line_end":114,"column_start":1,"column_end":80}},{"value":"/ need to wrap them in [`Rc`][std::rc::Rc] or [`Arc`][std::sync::Arc]. Thus,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":6354,"byte_end":6432,"line_start":115,"line_end":115,"column_start":1,"column_end":79}},{"value":"/ if you have a complex structure `BigBlobOfData` and you want to store a list","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":6433,"byte_end":6513,"line_start":116,"line_end":116,"column_start":1,"column_end":81}},{"value":"/ of them as a `Vector<BigBlobOfData>`, you should instead use a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":6514,"byte_end":6580,"line_start":117,"line_end":117,"column_start":1,"column_end":67}},{"value":"/ `Vector<Rc<BigBlobOfData>>`, which is going to save you not only the time","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":6581,"byte_end":6658,"line_start":118,"line_end":118,"column_start":1,"column_end":78}},{"value":"/ spent cloning the big blobs of data, but also the memory spent keeping","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":6659,"byte_end":6733,"line_start":119,"line_end":119,"column_start":1,"column_end":75}},{"value":"/ multiple copies of it around, as [`Rc`][std::rc::Rc] keeps a single","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":6734,"byte_end":6805,"line_start":120,"line_end":120,"column_start":1,"column_end":72}},{"value":"/ reference counted copy around instead.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":6806,"byte_end":6848,"line_start":121,"line_end":121,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":6849,"byte_end":6852,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ If you're storing smaller values that aren't","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":6853,"byte_end":6901,"line_start":123,"line_end":123,"column_start":1,"column_end":49}},{"value":"/ [`Copy`][std::marker::Copy]able, you'll need to exercise judgement: if your","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":6902,"byte_end":6981,"line_start":124,"line_end":124,"column_start":1,"column_end":80}},{"value":"/ values are going to be very cheap to clone, as would be the case for short","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":6982,"byte_end":7060,"line_start":125,"line_end":125,"column_start":1,"column_end":79}},{"value":"/ [`String`][std::string::String]s or small [`Vec`][std::vec::Vec]s, you're","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":7061,"byte_end":7138,"line_start":126,"line_end":126,"column_start":1,"column_end":78}},{"value":"/ probably better off storing them directly without wrapping them in an","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":7139,"byte_end":7212,"line_start":127,"line_end":127,"column_start":1,"column_end":74}},{"value":"/ [`Rc`][std::rc::Rc], because, like the [`Rc`][std::rc::Rc], they're just","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":7213,"byte_end":7289,"line_start":128,"line_end":128,"column_start":1,"column_end":77}},{"value":"/ pointers to some data on the heap, and that data isn't expensive to clone -","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":7290,"byte_end":7369,"line_start":129,"line_end":129,"column_start":1,"column_end":80}},{"value":"/ you might actually lose more performance from the extra redirection of","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":7370,"byte_end":7444,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ wrapping them in an [`Rc`][std::rc::Rc] than you would from occasionally","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":7445,"byte_end":7521,"line_start":131,"line_end":131,"column_start":1,"column_end":77}},{"value":"/ cloning them.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":7522,"byte_end":7539,"line_start":132,"line_end":132,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":7540,"byte_end":7543,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ ### When does cloning happen?","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":7544,"byte_end":7577,"line_start":134,"line_end":134,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":7578,"byte_end":7581,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ So when will your values actually be cloned? The easy answer is only if you","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":7582,"byte_end":7661,"line_start":136,"line_end":136,"column_start":1,"column_end":80}},{"value":"/ [`clone`][std::clone::Clone::clone] the data structure itself, and then only","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":7662,"byte_end":7742,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ lazily as you change it. Values are stored in tree nodes inside the data","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":7743,"byte_end":7819,"line_start":138,"line_end":138,"column_start":1,"column_end":77}},{"value":"/ structure, each node of which contains up to 64 values. When you","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":7820,"byte_end":7888,"line_start":139,"line_end":139,"column_start":1,"column_end":69}},{"value":"/ [`clone`][std::clone::Clone::clone] a data structure, nothing is actually","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":7889,"byte_end":7966,"line_start":140,"line_end":140,"column_start":1,"column_end":78}},{"value":"/ copied - it's just the reference count on the root node that's incremented,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":7967,"byte_end":8046,"line_start":141,"line_end":141,"column_start":1,"column_end":80}},{"value":"/ to indicate that it's shared between two data structures. It's only when you","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":8047,"byte_end":8127,"line_start":142,"line_end":142,"column_start":1,"column_end":81}},{"value":"/ actually modify one of the shared data structures that nodes are cloned:","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":8128,"byte_end":8204,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ when you make a change somewhere in the tree, the node containing the change","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":8205,"byte_end":8285,"line_start":144,"line_end":144,"column_start":1,"column_end":81}},{"value":"/ needs to be cloned, and then its parent nodes need to be updated to contain","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":8286,"byte_end":8365,"line_start":145,"line_end":145,"column_start":1,"column_end":80}},{"value":"/ the new child node instead of the old version, and so they're cloned as","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":8366,"byte_end":8441,"line_start":146,"line_end":146,"column_start":1,"column_end":76}},{"value":"/ well.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":8442,"byte_end":8451,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":8452,"byte_end":8455,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ We can call this \"lazy\" cloning - if you make two copies of a data structure","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":8456,"byte_end":8536,"line_start":149,"line_end":149,"column_start":1,"column_end":81}},{"value":"/ and you never change either of them, there's never any need to clone the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":8537,"byte_end":8613,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/ data they contain. It's only when you start making changes that cloning","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":8614,"byte_end":8689,"line_start":151,"line_end":151,"column_start":1,"column_end":76}},{"value":"/ starts to happen, and then only on the specific tree nodes that are part of","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":8690,"byte_end":8769,"line_start":152,"line_end":152,"column_start":1,"column_end":80}},{"value":"/ the change. Note that the implications of lazily cloning the data structure","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":8770,"byte_end":8849,"line_start":153,"line_end":153,"column_start":1,"column_end":80}},{"value":"/ extend to memory usage as well as the CPU workload of copying the data","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":8850,"byte_end":8924,"line_start":154,"line_end":154,"column_start":1,"column_end":75}},{"value":"/ around - cloning an immutable data structure means both copies share the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":8925,"byte_end":9001,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ same allocated memory, until you start making changes.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":9002,"byte_end":9060,"line_start":156,"line_end":156,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":9061,"byte_end":9064,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ Most crucially, if you never clone the data structure, the data inside it is","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":9065,"byte_end":9145,"line_start":158,"line_end":158,"column_start":1,"column_end":81}},{"value":"/ also never cloned, and in this case it acts just like a mutable data","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":9146,"byte_end":9218,"line_start":159,"line_end":159,"column_start":1,"column_end":73}},{"value":"/ structure, with minimal performance differences (but still non-zero, as we","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":9219,"byte_end":9297,"line_start":160,"line_end":160,"column_start":1,"column_end":79}},{"value":"/ still have to check for shared nodes).","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":9298,"byte_end":9340,"line_start":161,"line_end":161,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":9341,"byte_end":9344,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ## Data Structures","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":9345,"byte_end":9367,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":9368,"byte_end":9371,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ We'll attempt to provide a comprehensive guide to the available","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":9372,"byte_end":9439,"line_start":165,"line_end":165,"column_start":1,"column_end":68}},{"value":"/ data structures below.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":9440,"byte_end":9466,"line_start":166,"line_end":166,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":9467,"byte_end":9470,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ ### Performance Notes","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":9471,"byte_end":9496,"line_start":168,"line_end":168,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":9497,"byte_end":9500,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ \"Big O notation\" is the standard way of talking about the time","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":9501,"byte_end":9567,"line_start":170,"line_end":170,"column_start":1,"column_end":67}},{"value":"/ complexity of data structure operations. If you're not familiar","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":9568,"byte_end":9635,"line_start":171,"line_end":171,"column_start":1,"column_end":68}},{"value":"/ with big O notation, here's a quick cheat sheet:","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":9636,"byte_end":9688,"line_start":172,"line_end":172,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":9689,"byte_end":9692,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ *O(1)* means an operation runs in constant time: it will take the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":9693,"byte_end":9762,"line_start":174,"line_end":174,"column_start":1,"column_end":70}},{"value":"/ same time to complete regardless of the size of the data","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":9763,"byte_end":9823,"line_start":175,"line_end":175,"column_start":1,"column_end":61}},{"value":"/ structure.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":9824,"byte_end":9838,"line_start":176,"line_end":176,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":9839,"byte_end":9842,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ *O(n)* means an operation runs in linear time: if you double the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":9843,"byte_end":9911,"line_start":178,"line_end":178,"column_start":1,"column_end":69}},{"value":"/ size of your data structure, the operation will take twice as long","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":9912,"byte_end":9982,"line_start":179,"line_end":179,"column_start":1,"column_end":71}},{"value":"/ to complete; if you quadruple the size, it will take four times as","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":9983,"byte_end":10053,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"/ long, etc.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":10054,"byte_end":10068,"line_start":181,"line_end":181,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":10069,"byte_end":10072,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ *O(log n)* means an operation runs in logarithmic time: for","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":10073,"byte_end":10136,"line_start":183,"line_end":183,"column_start":1,"column_end":64}},{"value":"/ *log<sub>2</sub>*, if you double the size of your data structure,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":10137,"byte_end":10206,"line_start":184,"line_end":184,"column_start":1,"column_end":70}},{"value":"/ the operation will take one step longer to complete; if you","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":10207,"byte_end":10270,"line_start":185,"line_end":185,"column_start":1,"column_end":64}},{"value":"/ quadruple the size, it will need two steps more; and so on.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":10271,"byte_end":10334,"line_start":186,"line_end":186,"column_start":1,"column_end":64}},{"value":"/ However, the data structures in this library generally run in","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":10335,"byte_end":10400,"line_start":187,"line_end":187,"column_start":1,"column_end":66}},{"value":"/ *log<sub>64</sub>* time, meaning you have to make your data","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":10401,"byte_end":10464,"line_start":188,"line_end":188,"column_start":1,"column_end":64}},{"value":"/ structure 64 times bigger to need one extra step, and 4096 times","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":10465,"byte_end":10533,"line_start":189,"line_end":189,"column_start":1,"column_end":69}},{"value":"/ bigger to need two steps. This means that, while they still count","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":10534,"byte_end":10603,"line_start":190,"line_end":190,"column_start":1,"column_end":70}},{"value":"/ as O(log n), operations on all but really large data sets will run","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":10604,"byte_end":10674,"line_start":191,"line_end":191,"column_start":1,"column_end":71}},{"value":"/ at near enough to O(1) that you won't usually notice.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":10675,"byte_end":10732,"line_start":192,"line_end":192,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":10733,"byte_end":10736,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ *O(n log n)* is the most expensive operation you'll see in this","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":10737,"byte_end":10804,"line_start":194,"line_end":194,"column_start":1,"column_end":68}},{"value":"/ library: it means that for every one of the *n* elements in your","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":10805,"byte_end":10873,"line_start":195,"line_end":195,"column_start":1,"column_end":69}},{"value":"/ data structure, you have to perform *log n* operations. In our","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":10874,"byte_end":10940,"line_start":196,"line_end":196,"column_start":1,"column_end":67}},{"value":"/ case, as noted above, this is often close enough to O(n) that it's","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":10941,"byte_end":11011,"line_start":197,"line_end":197,"column_start":1,"column_end":71}},{"value":"/ not usually as bad as it sounds, but even O(n) isn't cheap and the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":11012,"byte_end":11082,"line_start":198,"line_end":198,"column_start":1,"column_end":71}},{"value":"/ cost still increases logarithmically, if slowly, as the size of","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":11083,"byte_end":11150,"line_start":199,"line_end":199,"column_start":1,"column_end":68}},{"value":"/ your data increases. O(n log n) basically means \"are you sure you","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":11151,"byte_end":11220,"line_start":200,"line_end":200,"column_start":1,"column_end":70}},{"value":"/ need to do this?\"","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":11221,"byte_end":11242,"line_start":201,"line_end":201,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":11243,"byte_end":11246,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ *O(1)** means 'amortised O(1),' which means that an operation","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":11247,"byte_end":11312,"line_start":203,"line_end":203,"column_start":1,"column_end":66}},{"value":"/ usually runs in constant time but will occasionally be more","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":11313,"byte_end":11376,"line_start":204,"line_end":204,"column_start":1,"column_end":64}},{"value":"/ expensive: for instance,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":11377,"byte_end":11405,"line_start":205,"line_end":205,"column_start":1,"column_end":29}},{"value":"/ [`Vector::push_back`][vector::Vector::push_back], if called in","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":11406,"byte_end":11472,"line_start":206,"line_end":206,"column_start":1,"column_end":67}},{"value":"/ sequence, will be O(1) most of the time but every 64th time it","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":11473,"byte_end":11539,"line_start":207,"line_end":207,"column_start":1,"column_end":67}},{"value":"/ will be O(log n), as it fills up its tail chunk and needs to","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":11540,"byte_end":11604,"line_start":208,"line_end":208,"column_start":1,"column_end":65}},{"value":"/ insert it into the tree. Please note that the O(1) with the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":11605,"byte_end":11668,"line_start":209,"line_end":209,"column_start":1,"column_end":64}},{"value":"/ asterisk attached is not a common notation; it's just a convention","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":11669,"byte_end":11739,"line_start":210,"line_end":210,"column_start":1,"column_end":71}},{"value":"/ I've used in these docs to save myself from having to type","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":11740,"byte_end":11802,"line_start":211,"line_end":211,"column_start":1,"column_end":63}},{"value":"/ 'amortised' everywhere.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":11803,"byte_end":11830,"line_start":212,"line_end":212,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":11831,"byte_end":11834,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ ### Lists","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":11835,"byte_end":11848,"line_start":214,"line_end":214,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":11849,"byte_end":11852,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ Lists are sequences of single elements which maintain the order in","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":11853,"byte_end":11923,"line_start":216,"line_end":216,"column_start":1,"column_end":71}},{"value":"/ which you inserted them. The only list in this library is","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":11924,"byte_end":11985,"line_start":217,"line_end":217,"column_start":1,"column_end":62}},{"value":"/ [`Vector`][vector::Vector], which offers the best all round","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":11986,"byte_end":12049,"line_start":218,"line_end":218,"column_start":1,"column_end":64}},{"value":"/ performance characteristics: it's pretty good at everything, even","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":12050,"byte_end":12119,"line_start":219,"line_end":219,"column_start":1,"column_end":70}},{"value":"/ if there's always another kind of list that's better at something.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":12120,"byte_end":12190,"line_start":220,"line_end":220,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":12191,"byte_end":12194,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ | Type | Algorithm | Constraints | Order | Push | Pop | Split | Append | Lookup |","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":12195,"byte_end":12280,"line_start":222,"line_end":222,"column_start":1,"column_end":86}},{"value":"/ | --- | --- | --- | --- | --- | --- | --- | --- | --- |","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":12281,"byte_end":12340,"line_start":223,"line_end":223,"column_start":1,"column_end":60}},{"value":"/ | [`Vector<A>`][vector::Vector] | [RRB tree][rrb-tree] | [`Clone`][std::clone::Clone] | insertion | O(1)\\* | O(1)\\* | O(log n) | O(log n) | O(log n) |","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":12341,"byte_end":12495,"line_start":224,"line_end":224,"column_start":1,"column_end":155}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":12496,"byte_end":12499,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ ### Maps","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":12500,"byte_end":12512,"line_start":226,"line_end":226,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":12513,"byte_end":12516,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ Maps are mappings of keys to values, where the most common read","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":12517,"byte_end":12584,"line_start":228,"line_end":228,"column_start":1,"column_end":68}},{"value":"/ operation is to find the value associated with a given key. Maps","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":12585,"byte_end":12653,"line_start":229,"line_end":229,"column_start":1,"column_end":69}},{"value":"/ may or may not have a defined order. Any given key can only occur","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":12654,"byte_end":12723,"line_start":230,"line_end":230,"column_start":1,"column_end":70}},{"value":"/ once inside a map, and setting a key to a different value will","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":12724,"byte_end":12790,"line_start":231,"line_end":231,"column_start":1,"column_end":67}},{"value":"/ overwrite the previous value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":12791,"byte_end":12824,"line_start":232,"line_end":232,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":12825,"byte_end":12828,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ | Type | Algorithm | Key Constraints | Order | Insert | Remove | Lookup |","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":12829,"byte_end":12906,"line_start":234,"line_end":234,"column_start":1,"column_end":78}},{"value":"/ | --- | --- | --- | --- | --- | --- | --- |","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":12907,"byte_end":12954,"line_start":235,"line_end":235,"column_start":1,"column_end":48}},{"value":"/ | [`HashMap<K, V>`][hashmap::HashMap] | [HAMT][hamt] | [`Clone`][std::clone::Clone] + [`Hash`][std::hash::Hash] + [`Eq`][std::cmp::Eq] | undefined | O(log n) | O(log n) | O(log n) |","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":12955,"byte_end":13140,"line_start":236,"line_end":236,"column_start":1,"column_end":186}},{"value":"/ | [`OrdMap<K, V>`][ordmap::OrdMap] | [B-tree][b-tree] | [`Clone`][std::clone::Clone] + [`Ord`][std::cmp::Ord] | sorted | O(log n) | O(log n) | O(log n) |","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":13141,"byte_end":13298,"line_start":237,"line_end":237,"column_start":1,"column_end":158}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":13299,"byte_end":13302,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ ### Sets","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":13303,"byte_end":13315,"line_start":239,"line_end":239,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":13316,"byte_end":13319,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ Sets are collections of unique values, and may or may not have a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":13320,"byte_end":13388,"line_start":241,"line_end":241,"column_start":1,"column_end":69}},{"value":"/ defined order. Their crucial property is that any given value can","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":13389,"byte_end":13458,"line_start":242,"line_end":242,"column_start":1,"column_end":70}},{"value":"/ only exist once in a given set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":13459,"byte_end":13494,"line_start":243,"line_end":243,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":13495,"byte_end":13498,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ | Type | Algorithm | Constraints | Order | Insert | Remove | Lookup |","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":13499,"byte_end":13572,"line_start":245,"line_end":245,"column_start":1,"column_end":74}},{"value":"/ | --- | --- | --- | --- | --- | --- | --- |","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":13573,"byte_end":13620,"line_start":246,"line_end":246,"column_start":1,"column_end":48}},{"value":"/ | [`HashSet<A>`][hashset::HashSet] | [HAMT][hamt] | [`Clone`][std::clone::Clone] + [`Hash`][std::hash::Hash] + [`Eq`][std::cmp::Eq] | undefined | O(log n) | O(log n) | O(log n) |","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":13621,"byte_end":13803,"line_start":247,"line_end":247,"column_start":1,"column_end":183}},{"value":"/ | [`OrdSet<A>`][ordset::OrdSet] | [B-tree][b-tree] | [`Clone`][std::clone::Clone] + [`Ord`][std::cmp::Ord] | sorted | O(log n) | O(log n) | O(log n) |","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":13804,"byte_end":13958,"line_start":248,"line_end":248,"column_start":1,"column_end":155}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":13959,"byte_end":13962,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ ## In-place Mutation","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":13963,"byte_end":13987,"line_start":250,"line_end":250,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":13988,"byte_end":13991,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ All of these data structures support in-place copy-on-write","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":13992,"byte_end":14055,"line_start":252,"line_end":252,"column_start":1,"column_end":64}},{"value":"/ mutation, which means that if you're the sole user of a data","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":14056,"byte_end":14120,"line_start":253,"line_end":253,"column_start":1,"column_end":65}},{"value":"/ structure, you can update it in place without taking the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":14121,"byte_end":14181,"line_start":254,"line_end":254,"column_start":1,"column_end":61}},{"value":"/ performance hit of making a copy of the data structure before","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":14182,"byte_end":14247,"line_start":255,"line_end":255,"column_start":1,"column_end":66}},{"value":"/ modifying it (this is about an order of magnitude faster than","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":14248,"byte_end":14313,"line_start":256,"line_end":256,"column_start":1,"column_end":66}},{"value":"/ immutable operations, almost as fast as","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":14314,"byte_end":14357,"line_start":257,"line_end":257,"column_start":1,"column_end":44}},{"value":"/ [`std::collections`][std::collections]'s mutable data structures).","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":14358,"byte_end":14428,"line_start":258,"line_end":258,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":14429,"byte_end":14432,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ Thanks to [`Rc`][std::rc::Rc]'s reference counting, we are able to","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":14433,"byte_end":14503,"line_start":260,"line_end":260,"column_start":1,"column_end":71}},{"value":"/ determine whether a node in a data structure is being shared with","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":14504,"byte_end":14573,"line_start":261,"line_end":261,"column_start":1,"column_end":70}},{"value":"/ other data structures, or whether it's safe to mutate it in place.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":14574,"byte_end":14644,"line_start":262,"line_end":262,"column_start":1,"column_end":71}},{"value":"/ When it's shared, we'll automatically make a copy of the node","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":14645,"byte_end":14710,"line_start":263,"line_end":263,"column_start":1,"column_end":66}},{"value":"/ before modifying it. The consequence of this is that cloning a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":14711,"byte_end":14777,"line_start":264,"line_end":264,"column_start":1,"column_end":67}},{"value":"/ data structure becomes a lazy operation: the initial clone is","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":14778,"byte_end":14843,"line_start":265,"line_end":265,"column_start":1,"column_end":66}},{"value":"/ instant, and as you modify the cloned data structure it will clone","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":14844,"byte_end":14914,"line_start":266,"line_end":266,"column_start":1,"column_end":71}},{"value":"/ chunks only where you change them, so that if you change the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":14915,"byte_end":14979,"line_start":267,"line_end":267,"column_start":1,"column_end":65}},{"value":"/ entire thing you will eventually have performed a full clone.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":14980,"byte_end":15045,"line_start":268,"line_end":268,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":15046,"byte_end":15049,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ This also gives us a couple of other optimisations for free:","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":15050,"byte_end":15114,"line_start":270,"line_end":270,"column_start":1,"column_end":65}},{"value":"/ implementations of immutable data structures in other languages","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":15115,"byte_end":15182,"line_start":271,"line_end":271,"column_start":1,"column_end":68}},{"value":"/ often have the idea of local mutation, like Clojure's transients","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":15183,"byte_end":15251,"line_start":272,"line_end":272,"column_start":1,"column_end":69}},{"value":"/ or Haskell's `ST` monad - a managed scope where you can treat an","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":15252,"byte_end":15320,"line_start":273,"line_end":273,"column_start":1,"column_end":69}},{"value":"/ immutable data structure like a mutable one, gaining a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":15321,"byte_end":15379,"line_start":274,"line_end":274,"column_start":1,"column_end":59}},{"value":"/ considerable amount of performance because you no longer need to","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":15380,"byte_end":15448,"line_start":275,"line_end":275,"column_start":1,"column_end":69}},{"value":"/ copy your changed nodes for every operation, just the first time","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":15449,"byte_end":15517,"line_start":276,"line_end":276,"column_start":1,"column_end":69}},{"value":"/ you hit a node that's sharing structure. In Rust, we don't need to","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":15518,"byte_end":15588,"line_start":277,"line_end":277,"column_start":1,"column_end":71}},{"value":"/ think about this kind of managed scope, it's all taken care of","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":15589,"byte_end":15655,"line_start":278,"line_end":278,"column_start":1,"column_end":67}},{"value":"/ behind the scenes because of our low level access to the garbage","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":15656,"byte_end":15724,"line_start":279,"line_end":279,"column_start":1,"column_end":69}},{"value":"/ collector (which, in our case, is just a simple","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":15725,"byte_end":15776,"line_start":280,"line_end":280,"column_start":1,"column_end":52}},{"value":"/ [`Rc`][std::rc::Rc]).","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":15777,"byte_end":15802,"line_start":281,"line_end":281,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":15803,"byte_end":15806,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ ## Thread Safety","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":15807,"byte_end":15827,"line_start":283,"line_end":283,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":15828,"byte_end":15831,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ The data structures in the `im` crate are thread safe, through","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":15832,"byte_end":15898,"line_start":285,"line_end":285,"column_start":1,"column_end":67}},{"value":"/ [`Arc`][std::sync::Arc]. This comes with a slight performance impact, so","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":15899,"byte_end":15975,"line_start":286,"line_end":286,"column_start":1,"column_end":77}},{"value":"/ that if you prioritise speed over thread safety, you may want to use the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":15976,"byte_end":16052,"line_start":287,"line_end":287,"column_start":1,"column_end":77}},{"value":"/ `im-rc` crate instead, which is identical to `im` except that it uses","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":16053,"byte_end":16126,"line_start":288,"line_end":288,"column_start":1,"column_end":74}},{"value":"/ [`Rc`][std::rc::Rc] instead of [`Arc`][std::sync::Arc], implying that the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":16127,"byte_end":16204,"line_start":289,"line_end":289,"column_start":1,"column_end":78}},{"value":"/ data structures in `im-rc` do not implement [`Send`][std::marker::Send] and","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":16205,"byte_end":16284,"line_start":290,"line_end":290,"column_start":1,"column_end":80}},{"value":"/ [`Sync`][std::marker::Sync]. This yields approximately a 20-25% increase in","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":16285,"byte_end":16364,"line_start":291,"line_end":291,"column_start":1,"column_end":80}},{"value":"/ general performance.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":16365,"byte_end":16389,"line_start":292,"line_end":292,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":16390,"byte_end":16393,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ ## Feature Flags","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":16394,"byte_end":16414,"line_start":294,"line_end":294,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":16415,"byte_end":16418,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ `im` comes with optional support for the following crates through Cargo","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":16419,"byte_end":16494,"line_start":296,"line_end":296,"column_start":1,"column_end":76}},{"value":"/ feature flags. You can enable them in your `Cargo.toml` file like this:","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":16495,"byte_end":16570,"line_start":297,"line_end":297,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":16571,"byte_end":16574,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ ```no_compile","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":16575,"byte_end":16592,"line_start":299,"line_end":299,"column_start":1,"column_end":18}},{"value":"/ [dependencies]","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":16593,"byte_end":16611,"line_start":300,"line_end":300,"column_start":1,"column_end":19}},{"value":"/ im = { version = \"*\", features = [\"proptest\", \"serde\"] }","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":16612,"byte_end":16672,"line_start":301,"line_end":301,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":16673,"byte_end":16680,"line_start":302,"line_end":302,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":16681,"byte_end":16684,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ | Feature | Description |","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":16685,"byte_end":16714,"line_start":304,"line_end":304,"column_start":1,"column_end":30}},{"value":"/ | ------- | ----------- |","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":16715,"byte_end":16744,"line_start":305,"line_end":305,"column_start":1,"column_end":30}},{"value":"/ | [`pool`](https://crates.io/crates/refpool) | Constructors and pool types for [`refpool`](https://crates.io/crates/refpool) memory pools (only available in `im-rc`) |","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":16745,"byte_end":16916,"line_start":306,"line_end":306,"column_start":1,"column_end":172}},{"value":"/ | [`proptest`](https://crates.io/crates/proptest) | Strategies for all `im` datatypes under a `proptest` namespace, eg. `im::vector::proptest::vector()` |","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":16917,"byte_end":17075,"line_start":307,"line_end":307,"column_start":1,"column_end":159}},{"value":"/ | [`quickcheck`](https://crates.io/crates/quickcheck) | [`quickcheck::Arbitrary`](https://docs.rs/quickcheck/latest/quickcheck/trait.Arbitrary.html) implementations for all `im` datatypes (not available in `im-rc`) |","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":17076,"byte_end":17296,"line_start":308,"line_end":308,"column_start":1,"column_end":221}},{"value":"/ | [`rayon`](https://crates.io/crates/rayon) | parallel iterator implementations for [`Vector`][vector::Vector] (not available in `im-rc`) |","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":17297,"byte_end":17440,"line_start":309,"line_end":309,"column_start":1,"column_end":144}},{"value":"/ | [`serde`](https://crates.io/crates/serde) | [`Serialize`](https://docs.rs/serde/latest/serde/trait.Serialize.html) and [`Deserialize`](https://docs.rs/serde/latest/serde/trait.Deserialize.html) implementations for all `im` datatypes |","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":17441,"byte_end":17681,"line_start":310,"line_end":310,"column_start":1,"column_end":241}},{"value":"/ | [`arbitrary`](https://crates.io/crates/arbitrary/) | [`arbitrary::Arbitrary`](https://docs.rs/arbitrary/latest/arbitrary/trait.Arbitrary.html) implementations for all `im` datatypes |","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":17682,"byte_end":17871,"line_start":311,"line_end":311,"column_start":1,"column_end":190}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":17872,"byte_end":17875,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ [std::collections]: https://doc.rust-lang.org/std/collections/index.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":17876,"byte_end":17952,"line_start":313,"line_end":313,"column_start":1,"column_end":77}},{"value":"/ [std::collections::VecDeque]: https://doc.rust-lang.org/std/collections/struct.VecDeque.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":17953,"byte_end":18049,"line_start":314,"line_end":314,"column_start":1,"column_end":97}},{"value":"/ [std::vec::Vec]: https://doc.rust-lang.org/std/vec/struct.Vec.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":18050,"byte_end":18120,"line_start":315,"line_end":315,"column_start":1,"column_end":71}},{"value":"/ [std::string::String]: https://doc.rust-lang.org/std/string/struct.String.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":18121,"byte_end":18203,"line_start":316,"line_end":316,"column_start":1,"column_end":83}},{"value":"/ [std::rc::Rc]: https://doc.rust-lang.org/std/rc/struct.Rc.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":18204,"byte_end":18270,"line_start":317,"line_end":317,"column_start":1,"column_end":67}},{"value":"/ [std::sync::Arc]: https://doc.rust-lang.org/std/sync/struct.Arc.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":18271,"byte_end":18343,"line_start":318,"line_end":318,"column_start":1,"column_end":73}},{"value":"/ [std::cmp::Eq]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":18344,"byte_end":18411,"line_start":319,"line_end":319,"column_start":1,"column_end":68}},{"value":"/ [std::cmp::Ord]: https://doc.rust-lang.org/std/cmp/trait.Ord.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":18412,"byte_end":18481,"line_start":320,"line_end":320,"column_start":1,"column_end":70}},{"value":"/ [std::clone::Clone]: https://doc.rust-lang.org/std/clone/trait.Clone.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":18482,"byte_end":18559,"line_start":321,"line_end":321,"column_start":1,"column_end":78}},{"value":"/ [std::clone::Clone::clone]: https://doc.rust-lang.org/std/clone/trait.Clone.html#tymethod.clone","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":18560,"byte_end":18659,"line_start":322,"line_end":322,"column_start":1,"column_end":100}},{"value":"/ [std::marker::Copy]: https://doc.rust-lang.org/std/marker/trait.Copy.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":18660,"byte_end":18737,"line_start":323,"line_end":323,"column_start":1,"column_end":78}},{"value":"/ [std::hash::Hash]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":18738,"byte_end":18811,"line_start":324,"line_end":324,"column_start":1,"column_end":74}},{"value":"/ [std::marker::Send]: https://doc.rust-lang.org/std/marker/trait.Send.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":18812,"byte_end":18889,"line_start":325,"line_end":325,"column_start":1,"column_end":78}},{"value":"/ [std::marker::Sync]: https://doc.rust-lang.org/std/marker/trait.Sync.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":18890,"byte_end":18967,"line_start":326,"line_end":326,"column_start":1,"column_end":78}},{"value":"/ [hashmap::HashMap]: ./struct.HashMap.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":18968,"byte_end":19013,"line_start":327,"line_end":327,"column_start":1,"column_end":46}},{"value":"/ [hashset::HashSet]: ./struct.HashSet.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":19014,"byte_end":19059,"line_start":328,"line_end":328,"column_start":1,"column_end":46}},{"value":"/ [ordmap::OrdMap]: ./struct.OrdMap.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":19060,"byte_end":19102,"line_start":329,"line_end":329,"column_start":1,"column_end":43}},{"value":"/ [ordset::OrdSet]: ./struct.OrdSet.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":19103,"byte_end":19145,"line_start":330,"line_end":330,"column_start":1,"column_end":43}},{"value":"/ [vector::Vector]: ./struct.Vector.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":19146,"byte_end":19188,"line_start":331,"line_end":331,"column_start":1,"column_end":43}},{"value":"/ [vector::Vector::push_back]: ./vector/enum.Vector.html#method.push_back","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":19189,"byte_end":19264,"line_start":332,"line_end":332,"column_start":1,"column_end":76}},{"value":"/ [rrb-tree]: https://infoscience.epfl.ch/record/213452/files/rrbvector.pdf","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":19265,"byte_end":19342,"line_start":333,"line_end":333,"column_start":1,"column_end":78}},{"value":"/ [hamt]: https://en.wikipedia.org/wiki/Hash_array_mapped_trie","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":19343,"byte_end":19407,"line_start":334,"line_end":334,"column_start":1,"column_end":65}},{"value":"/ [b-tree]: https://en.wikipedia.org/wiki/B-tree","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":19408,"byte_end":19458,"line_start":335,"line_end":335,"column_start":1,"column_end":51}},{"value":"/ [cons-list]: https://en.wikipedia.org/wiki/Cons#Lists","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":19459,"byte_end":19516,"line_start":336,"line_end":336,"column_start":1,"column_end":58}},{"value":"forbid(rust_2018_idioms)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":19518,"byte_end":19546,"line_start":338,"line_end":338,"column_start":1,"column_end":29}},{"value":"deny(unsafe_code, nonstandard_style)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":19547,"byte_end":19587,"line_start":339,"line_end":339,"column_start":1,"column_end":41}},{"value":"warn(unreachable_pub, missing_docs)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":19588,"byte_end":19627,"line_start":340,"line_end":340,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":57},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":26110,"byte_end":26120,"line_start":22,"line_end":22,"column_start":11,"column_end":21},"name":"BTreeValue","qualname":"::nodes::btree::BTreeValue","value":"BTreeValue","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":65}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":58},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":26132,"byte_end":26135,"line_start":23,"line_end":23,"column_start":10,"column_end":13},"name":"Key","qualname":"::nodes::btree::BTreeValue::Key","value":"type Key;","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":26144,"byte_end":26150,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"ptr_eq","qualname":"::nodes::btree::BTreeValue::ptr_eq","value":"pub fn ptr_eq(&Self, &Self) -> bool","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":26188,"byte_end":26198,"line_start":25,"line_end":25,"column_start":8,"column_end":18},"name":"search_key","qualname":"::nodes::btree::BTreeValue::search_key","value":"pub fn search_key<BK>(&[Self], &BK) -> Result<usize, usize> where BK: Ord +\n?Sized, Self: Sized, Self::Key: Borrow<BK>","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":26348,"byte_end":26360,"line_start":30,"line_end":30,"column_start":8,"column_end":20},"name":"search_value","qualname":"::nodes::btree::BTreeValue::search_value","value":"pub fn search_value(&[Self], &Self) -> Result<usize, usize> where Self: Sized","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":26453,"byte_end":26461,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"cmp_keys","qualname":"::nodes::btree::BTreeValue::cmp_keys","value":"pub fn cmp_keys<BK>(&Self, &BK) -> Ordering where BK: Ord + ?Sized,\nSelf::Key: Borrow<BK>","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":26571,"byte_end":26581,"line_start":37,"line_end":37,"column_start":8,"column_end":18},"name":"cmp_values","qualname":"::nodes::btree::BTreeValue::cmp_values","value":"pub fn cmp_values(&Self, &Self) -> Ordering","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":197},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":57575,"byte_end":57579,"line_start":911,"line_end":911,"column_start":12,"column_end":16},"name":"Iter","qualname":"::nodes::btree::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202}],"decl_id":null,"docs":" An iterator over an ordered set.\n","sig":null,"attributes":[{"value":"/ An iterator over an ordered set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":57527,"byte_end":57563,"line_start":910,"line_end":910,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":230},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":64217,"byte_end":64230,"line_start":1099,"line_end":1099,"column_start":12,"column_end":25},"name":"ConsumingIter","qualname":"::nodes::btree::ConsumingIter","value":"ConsumingIter {  }","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"decl_id":null,"docs":" A consuming iterator over an ordered set.\n","sig":null,"attributes":[{"value":"/ A consuming iterator over an ordered set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":64160,"byte_end":64205,"line_start":1098,"line_end":1098,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":255},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":68305,"byte_end":68313,"line_start":1224,"line_end":1224,"column_start":12,"column_end":20},"name":"DiffIter","qualname":"::nodes::btree::DiffIter","value":"DiffIter {  }","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259}],"decl_id":null,"docs":" An iterator over the differences between two ordered sets.\n","sig":null,"attributes":[{"value":"/ An iterator over the differences between two ordered sets.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":68231,"byte_end":68293,"line_start":1223,"line_end":1223,"column_start":1,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3540},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":68573,"byte_end":68576,"line_start":1233,"line_end":1233,"column_start":5,"column_end":8},"name":"Add","qualname":"::nodes::btree::DiffItem::Add","value":"DiffItem::Add(&'a A)","parent":{"krate":0,"index":3537},"children":[],"decl_id":null,"docs":" This value has been added to the new set.\n","sig":null,"attributes":[{"value":"/ This value has been added to the new set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":68523,"byte_end":68568,"line_start":1232,"line_end":1232,"column_start":5,"column_end":50}}]},{"kind":"StructVariant","id":{"krate":0,"index":3543},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":68647,"byte_end":68653,"line_start":1235,"line_end":1235,"column_start":5,"column_end":11},"name":"Update","qualname":"::nodes::btree::DiffItem::Update","value":"DiffItem::Update { old, new }","parent":{"krate":0,"index":3537},"children":[],"decl_id":null,"docs":" This value has been changed between the two sets.\n","sig":null,"attributes":[{"value":"/ This value has been changed between the two sets.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":68589,"byte_end":68642,"line_start":1234,"line_end":1234,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3546},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":68815,"byte_end":68821,"line_start":1242,"line_end":1242,"column_start":5,"column_end":11},"name":"Remove","qualname":"::nodes::btree::DiffItem::Remove","value":"DiffItem::Remove(&'a A)","parent":{"krate":0,"index":3537},"children":[],"decl_id":null,"docs":" This value has been removed from the new set.\n","sig":null,"attributes":[{"value":"/ This value has been removed from the new set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":68761,"byte_end":68810,"line_start":1241,"line_end":1241,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":3537},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":68501,"byte_end":68509,"line_start":1231,"line_end":1231,"column_start":10,"column_end":18},"name":"DiffItem","qualname":"::nodes::btree::DiffItem","value":"pub enum DiffItem<'a, A> {\n    Add(&'a A),\n    Update {\n        old: &'a A,\n        new: &'a A,\n    },\n    Remove(&'a A),\n}","parent":null,"children":[{"krate":0,"index":3540},{"krate":0,"index":3543},{"krate":0,"index":3546}],"decl_id":null,"docs":" A description of a difference between two ordered sets.\n","sig":null,"attributes":[{"value":"/ A description of a difference between two ordered sets.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":68400,"byte_end":68459,"line_start":1229,"line_end":1229,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":368},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":74251,"byte_end":74260,"line_start":36,"line_end":36,"column_start":11,"column_end":20},"name":"HashValue","qualname":"::nodes::hamt::HashValue","value":"HashValue","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":369},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":74272,"byte_end":74275,"line_start":37,"line_end":37,"column_start":10,"column_end":13},"name":"Key","qualname":"::nodes::hamt::HashValue::Key","value":"type Key: Eq;","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":74289,"byte_end":74300,"line_start":39,"line_end":39,"column_start":8,"column_end":19},"name":"extract_key","qualname":"::nodes::hamt::HashValue::extract_key","value":"pub fn extract_key(&Self) -> &Self::Key","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":74330,"byte_end":74336,"line_start":40,"line_end":40,"column_start":8,"column_end":14},"name":"ptr_eq","qualname":"::nodes::hamt::HashValue::ptr_eq","value":"pub fn ptr_eq(&Self, &Self) -> bool","parent":{"krate":0,"index":368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":753},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"map","qualname":"::ord::map","value":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":757},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":770},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":787},{"krate":0,"index":790},{"krate":0,"index":793},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":800},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":816},{"krate":0,"index":819},{"krate":0,"index":822},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":829},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":836},{"krate":0,"index":839},{"krate":0,"index":842},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":3606},{"krate":0,"index":3611},{"krate":0,"index":3617},{"krate":0,"index":3621},{"krate":0,"index":859},{"krate":0,"index":865},{"krate":0,"index":874},{"krate":0,"index":915},{"krate":0,"index":1010},{"krate":0,"index":1020},{"krate":0,"index":1032},{"krate":0,"index":1038},{"krate":0,"index":1049},{"krate":0,"index":1055},{"krate":0,"index":1062},{"krate":0,"index":1066},{"krate":0,"index":1070},{"krate":0,"index":1073},{"krate":0,"index":1077},{"krate":0,"index":1081},{"krate":0,"index":1086},{"krate":0,"index":1090},{"krate":0,"index":1096},{"krate":0,"index":1101},{"krate":0,"index":1107},{"krate":0,"index":1114},{"krate":0,"index":1121},{"krate":0,"index":1127},{"krate":0,"index":1131},{"krate":0,"index":1136},{"krate":0,"index":1144},{"krate":0,"index":1150},{"krate":0,"index":1154},{"krate":0,"index":3625},{"krate":0,"index":3640},{"krate":0,"index":3644},{"krate":0,"index":3650},{"krate":0,"index":3654},{"krate":0,"index":3659},{"krate":0,"index":1159},{"krate":0,"index":1166},{"krate":0,"index":1171},{"krate":0,"index":1179},{"krate":0,"index":1184},{"krate":0,"index":1188},{"krate":0,"index":1193},{"krate":0,"index":1201},{"krate":0,"index":1206},{"krate":0,"index":1210},{"krate":0,"index":1217},{"krate":0,"index":1224},{"krate":0,"index":1230},{"krate":0,"index":1234},{"krate":0,"index":1244},{"krate":0,"index":1254},{"krate":0,"index":1260},{"krate":0,"index":1270},{"krate":0,"index":1276},{"krate":0,"index":1286},{"krate":0,"index":1292},{"krate":0,"index":1302},{"krate":0,"index":1307}],"decl_id":null,"docs":" An ordered map.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/mod.rs","byte_start":148489,"byte_end":148501,"line_start":5,"line_end":5,"column_start":1,"column_end":13}},{"value":"/ An ordered map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":148745,"byte_end":148764,"line_start":5,"line_end":5,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":148765,"byte_end":148768,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ An immutable ordered map implemented as a [B-tree] [1].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":148769,"byte_end":148828,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":148829,"byte_end":148832,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Most operations on this type of map are O(log n). A","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":148833,"byte_end":148888,"line_start":9,"line_end":9,"column_start":1,"column_end":56}},{"value":"/ [`HashMap`][hashmap::HashMap] is usually a better choice for","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":148889,"byte_end":148953,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/ performance, but the `OrdMap` has the advantage of only requiring","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":148954,"byte_end":149023,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ an [`Ord`][std::cmp::Ord] constraint on the key, and of being","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":149024,"byte_end":149089,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ ordered, so that keys always come out from lowest to highest,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":149090,"byte_end":149155,"line_start":13,"line_end":13,"column_start":1,"column_end":66}},{"value":"/ where a [`HashMap`][hashmap::HashMap] has no guaranteed ordering.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":149156,"byte_end":149225,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":149226,"byte_end":149229,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/B-tree","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":149230,"byte_end":149275,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ [hashmap::HashMap]: ../hashmap/struct.HashMap.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":149276,"byte_end":149330,"line_start":17,"line_end":17,"column_start":1,"column_end":55}},{"value":"/ [std::cmp::Ord]: https://doc.rust-lang.org/std/cmp/trait.Ord.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":149331,"byte_end":149400,"line_start":18,"line_end":18,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":3606},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":152649,"byte_end":152659,"line_start":151,"line_end":151,"column_start":11,"column_end":21},"name":"OrdMapPool","qualname":"::ord::map::OrdMapPool","value":"","parent":null,"children":[],"decl_id":null,"docs":" A memory pool for the appropriate node type.\n","sig":null,"attributes":[{"value":"/ A memory pool for the appropriate node type.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/util.rs","byte_start":147360,"byte_end":147408,"line_start":110,"line_end":110,"column_start":9,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":859},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":153298,"byte_end":153304,"line_start":166,"line_end":166,"column_start":12,"column_end":18},"name":"OrdMap","qualname":"::ord::map::OrdMap","value":"OrdMap {  }","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864}],"decl_id":null,"docs":" An ordered map.","sig":null,"attributes":[{"value":"/ An ordered map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":152683,"byte_end":152702,"line_start":153,"line_end":153,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":152703,"byte_end":152706,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ An immutable ordered map implemented as a B-tree.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":152707,"byte_end":152760,"line_start":155,"line_end":155,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":152761,"byte_end":152764,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ Most operations on this type of map are O(log n). A","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":152765,"byte_end":152820,"line_start":157,"line_end":157,"column_start":1,"column_end":56}},{"value":"/ [`HashMap`][hashmap::HashMap] is usually a better choice for","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":152821,"byte_end":152885,"line_start":158,"line_end":158,"column_start":1,"column_end":65}},{"value":"/ performance, but the `OrdMap` has the advantage of only requiring","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":152886,"byte_end":152955,"line_start":159,"line_end":159,"column_start":1,"column_end":70}},{"value":"/ an [`Ord`][std::cmp::Ord] constraint on the key, and of being","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":152956,"byte_end":153021,"line_start":160,"line_end":160,"column_start":1,"column_end":66}},{"value":"/ ordered, so that keys always come out from lowest to highest,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":153022,"byte_end":153087,"line_start":161,"line_end":161,"column_start":1,"column_end":66}},{"value":"/ where a [`HashMap`][hashmap::HashMap] has no guaranteed ordering.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":153088,"byte_end":153157,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":153158,"byte_end":153161,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ [hashmap::HashMap]: ../hashmap/struct.HashMap.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":153162,"byte_end":153216,"line_start":164,"line_end":164,"column_start":1,"column_end":55}},{"value":"/ [std::cmp::Ord]: https://doc.rust-lang.org/std/cmp/trait.Ord.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":153217,"byte_end":153286,"line_start":165,"line_end":165,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":153479,"byte_end":153482,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"new","qualname":"<OrdMap<K, V>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty map.\n","sig":null,"attributes":[{"value":"/ Construct an empty map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":153424,"byte_end":153451,"line_start":173,"line_end":173,"column_start":5,"column_end":32}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":153456,"byte_end":153467,"line_start":174,"line_end":174,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154347,"byte_end":154351,"line_start":212,"line_end":212,"column_start":12,"column_end":16},"name":"unit","qualname":"<OrdMap<K, V>>::unit","value":"pub fn unit(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a map with a single mapping.","sig":null,"attributes":[{"value":"/ Construct a map with a single mapping.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":153991,"byte_end":154033,"line_start":197,"line_end":197,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154038,"byte_end":154041,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154046,"byte_end":154060,"line_start":199,"line_end":199,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154065,"byte_end":154068,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154073,"byte_end":154080,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154085,"byte_end":154120,"line_start":202,"line_end":202,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154125,"byte_end":154154,"line_start":203,"line_end":203,"column_start":5,"column_end":34}},{"value":"/ let map = OrdMap::unit(123, \"onetwothree\");","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154159,"byte_end":154206,"line_start":204,"line_end":204,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154211,"byte_end":154226,"line_start":205,"line_end":205,"column_start":5,"column_end":20}},{"value":"/   map.get(&123),","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154231,"byte_end":154251,"line_start":206,"line_end":206,"column_start":5,"column_end":25}},{"value":"/   Some(&\"onetwothree\")","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154256,"byte_end":154282,"line_start":207,"line_end":207,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154287,"byte_end":154293,"line_start":208,"line_end":208,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154298,"byte_end":154305,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154310,"byte_end":154319,"line_start":210,"line_end":210,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154324,"byte_end":154335,"line_start":211,"line_end":211,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154960,"byte_end":154968,"line_start":240,"line_end":240,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<OrdMap<K, V>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether a map is empty.","sig":null,"attributes":[{"value":"/ Test whether a map is empty.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154585,"byte_end":154617,"line_start":222,"line_end":222,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154622,"byte_end":154625,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154630,"byte_end":154644,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154649,"byte_end":154652,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154657,"byte_end":154671,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154676,"byte_end":154679,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154684,"byte_end":154691,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154696,"byte_end":154731,"line_start":229,"line_end":229,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154736,"byte_end":154765,"line_start":230,"line_end":230,"column_start":5,"column_end":34}},{"value":"/ assert!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154770,"byte_end":154782,"line_start":231,"line_end":231,"column_start":5,"column_end":17}},{"value":"/   !ordmap!{1 => 2}.is_empty()","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154787,"byte_end":154820,"line_start":232,"line_end":232,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154825,"byte_end":154831,"line_start":233,"line_end":233,"column_start":5,"column_end":11}},{"value":"/ assert!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154836,"byte_end":154848,"line_start":234,"line_end":234,"column_start":5,"column_end":17}},{"value":"/   OrdMap::<i32, i32>::new().is_empty()","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154853,"byte_end":154895,"line_start":235,"line_end":235,"column_start":5,"column_end":47}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154900,"byte_end":154906,"line_start":236,"line_end":236,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154911,"byte_end":154918,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154923,"byte_end":154932,"line_start":238,"line_end":238,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":154937,"byte_end":154948,"line_start":239,"line_end":239,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155397,"byte_end":155403,"line_start":253,"line_end":253,"column_start":12,"column_end":18},"name":"ptr_eq","qualname":"<OrdMap<K, V>>::ptr_eq","value":"pub fn ptr_eq(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether two maps refer to the same content in memory.","sig":null,"attributes":[{"value":"/ Test whether two maps refer to the same content in memory.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155021,"byte_end":155083,"line_start":244,"line_end":244,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155088,"byte_end":155091,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ This is true if the two sides are references to the same map,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155096,"byte_end":155161,"line_start":246,"line_end":246,"column_start":5,"column_end":70}},{"value":"/ or if the two maps refer to the same root node.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155166,"byte_end":155217,"line_start":247,"line_end":247,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155222,"byte_end":155225,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This would return true if you're comparing a map to itself, or","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155230,"byte_end":155296,"line_start":249,"line_end":249,"column_start":5,"column_end":71}},{"value":"/ if you're comparing a map to a fresh clone of itself.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155301,"byte_end":155358,"line_start":250,"line_end":250,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155363,"byte_end":155366,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155371,"byte_end":155385,"line_start":252,"line_end":252,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155857,"byte_end":155860,"line_start":274,"line_end":274,"column_start":12,"column_end":15},"name":"len","qualname":"<OrdMap<K, V>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the size of a map.","sig":null,"attributes":[{"value":"/ Get the size of a map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155524,"byte_end":155550,"line_start":257,"line_end":257,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155555,"byte_end":155558,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155563,"byte_end":155577,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155582,"byte_end":155585,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155590,"byte_end":155604,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155609,"byte_end":155612,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155617,"byte_end":155624,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155629,"byte_end":155664,"line_start":264,"line_end":264,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155669,"byte_end":155698,"line_start":265,"line_end":265,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(3, ordmap!{","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155703,"byte_end":155729,"line_start":266,"line_end":266,"column_start":5,"column_end":31}},{"value":"/   1 => 11,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155734,"byte_end":155748,"line_start":267,"line_end":267,"column_start":5,"column_end":19}},{"value":"/   2 => 22,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155753,"byte_end":155767,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/   3 => 33","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155772,"byte_end":155785,"line_start":269,"line_end":269,"column_start":5,"column_end":18}},{"value":"/ }.len());","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155790,"byte_end":155803,"line_start":270,"line_end":270,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155808,"byte_end":155815,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155820,"byte_end":155829,"line_start":272,"line_end":272,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":155834,"byte_end":155845,"line_start":273,"line_end":273,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":156631,"byte_end":156636,"line_start":303,"line_end":303,"column_start":12,"column_end":17},"name":"clear","qualname":"<OrdMap<K, V>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Discard all elements from the map.","sig":null,"attributes":[{"value":"/ Discard all elements from the map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":156206,"byte_end":156244,"line_start":287,"line_end":287,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":156249,"byte_end":156252,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ This leaves you with an empty map, and all elements that","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":156257,"byte_end":156317,"line_start":289,"line_end":289,"column_start":5,"column_end":65}},{"value":"/ were previously inside it are dropped.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":156322,"byte_end":156364,"line_start":290,"line_end":290,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":156369,"byte_end":156372,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":156377,"byte_end":156391,"line_start":292,"line_end":292,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":156396,"byte_end":156399,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":156404,"byte_end":156418,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":156423,"byte_end":156426,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":156431,"byte_end":156438,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":156443,"byte_end":156478,"line_start":297,"line_end":297,"column_start":5,"column_end":40}},{"value":"/ # use im::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":156483,"byte_end":156504,"line_start":298,"line_end":298,"column_start":5,"column_end":26}},{"value":"/ let mut map = ordmap![1=>1, 2=>2, 3=>3];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":156509,"byte_end":156553,"line_start":299,"line_end":299,"column_start":5,"column_end":49}},{"value":"/ map.clear();","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":156558,"byte_end":156574,"line_start":300,"line_end":300,"column_start":5,"column_end":21}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":156579,"byte_end":156607,"line_start":301,"line_end":301,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":156612,"byte_end":156619,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157243,"byte_end":157250,"line_start":332,"line_end":332,"column_start":12,"column_end":19},"name":"get_max","qualname":"<OrdMap<K, V>>::get_max","value":"pub fn get_max(&Self) -> Option<&(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Get the largest key in a map, along with its value. If the map\n is empty, return `None`.","sig":null,"attributes":[{"value":"/ Get the largest key in a map, along with its value. If the map","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":156830,"byte_end":156896,"line_start":315,"line_end":315,"column_start":5,"column_end":71}},{"value":"/ is empty, return `None`.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":156901,"byte_end":156929,"line_start":316,"line_end":316,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":156934,"byte_end":156937,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":156942,"byte_end":156960,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":156965,"byte_end":156968,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":156973,"byte_end":156987,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":156992,"byte_end":156995,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157000,"byte_end":157007,"line_start":322,"line_end":322,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157012,"byte_end":157047,"line_start":323,"line_end":323,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157052,"byte_end":157081,"line_start":324,"line_end":324,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(Some(&(3, 33)), ordmap!{","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157086,"byte_end":157125,"line_start":325,"line_end":325,"column_start":5,"column_end":44}},{"value":"/   1 => 11,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157130,"byte_end":157144,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/   2 => 22,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157149,"byte_end":157163,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/   3 => 33","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157168,"byte_end":157181,"line_start":328,"line_end":328,"column_start":5,"column_end":18}},{"value":"/ }.get_max());","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157186,"byte_end":157203,"line_start":329,"line_end":329,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157208,"byte_end":157215,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157220,"byte_end":157231,"line_start":331,"line_end":331,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157728,"byte_end":157735,"line_start":353,"line_end":353,"column_start":12,"column_end":19},"name":"get_min","qualname":"<OrdMap<K, V>>::get_min","value":"pub fn get_min(&Self) -> Option<&(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Get the smallest key in a map, along with its value. If the\n map is empty, return `None`.","sig":null,"attributes":[{"value":"/ Get the smallest key in a map, along with its value. If the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157314,"byte_end":157377,"line_start":336,"line_end":336,"column_start":5,"column_end":68}},{"value":"/ map is empty, return `None`.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157382,"byte_end":157414,"line_start":337,"line_end":337,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157419,"byte_end":157422,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157427,"byte_end":157445,"line_start":339,"line_end":339,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157450,"byte_end":157453,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157458,"byte_end":157472,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157477,"byte_end":157480,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157485,"byte_end":157492,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157497,"byte_end":157532,"line_start":344,"line_end":344,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157537,"byte_end":157566,"line_start":345,"line_end":345,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(Some(&(1, 11)), ordmap!{","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157571,"byte_end":157610,"line_start":346,"line_end":346,"column_start":5,"column_end":44}},{"value":"/   1 => 11,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157615,"byte_end":157629,"line_start":347,"line_end":347,"column_start":5,"column_end":19}},{"value":"/   2 => 22,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157634,"byte_end":157648,"line_start":348,"line_end":348,"column_start":5,"column_end":19}},{"value":"/   3 => 33","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157653,"byte_end":157666,"line_start":349,"line_end":349,"column_start":5,"column_end":18}},{"value":"/ }.get_min());","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157671,"byte_end":157688,"line_start":350,"line_end":350,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157693,"byte_end":157700,"line_start":351,"line_end":351,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157705,"byte_end":157716,"line_start":352,"line_end":352,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157881,"byte_end":157885,"line_start":359,"line_end":359,"column_start":12,"column_end":16},"name":"iter","qualname":"<OrdMap<K, V>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the key/value pairs of a map.\n","sig":null,"attributes":[{"value":"/ Get an iterator over the key/value pairs of a map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157799,"byte_end":157853,"line_start":357,"line_end":357,"column_start":5,"column_end":59}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":157858,"byte_end":157869,"line_start":358,"line_end":358,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":158092,"byte_end":158097,"line_start":367,"line_end":367,"column_start":12,"column_end":17},"name":"range","qualname":"<OrdMap<K, V>>::range","value":"pub fn range<R, BK>(&Self, R) -> Iter<, K, V> where R: RangeBounds<BK>,\nK: Borrow<BK>, BK: Ord + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator over a range of key/value pairs.\n","sig":null,"attributes":[{"value":"/ Create an iterator over a range of key/value pairs.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":158009,"byte_end":158064,"line_start":365,"line_end":365,"column_start":5,"column_end":60}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":158069,"byte_end":158080,"line_start":366,"line_end":366,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":158398,"byte_end":158402,"line_start":380,"line_end":380,"column_start":12,"column_end":16},"name":"keys","qualname":"<OrdMap<K, V>>::keys","value":"pub fn keys(&Self) -> Keys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over a map's keys.\n","sig":null,"attributes":[{"value":"/ Get an iterator over a map's keys.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":158332,"byte_end":158370,"line_start":378,"line_end":378,"column_start":5,"column_end":43}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":158375,"byte_end":158386,"line_start":379,"line_end":379,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":158542,"byte_end":158548,"line_start":386,"line_end":386,"column_start":12,"column_end":18},"name":"values","qualname":"<OrdMap<K, V>>::values","value":"pub fn values(&Self) -> Values<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over a map's values.\n","sig":null,"attributes":[{"value":"/ Get an iterator over a map's values.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":158474,"byte_end":158514,"line_start":384,"line_end":384,"column_start":5,"column_end":45}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":158519,"byte_end":158530,"line_start":385,"line_end":385,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159226,"byte_end":159230,"line_start":402,"line_end":402,"column_start":12,"column_end":16},"name":"diff","qualname":"<OrdMap<K, V>>::diff","value":"pub fn diff<'a>(&'a Self, &'a Self) -> DiffIter","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the differences between this map and\n another, i.e. the set of entries to add, update, or remove to\n this map in order to make it equal to the other map.","sig":null,"attributes":[{"value":"/ Get an iterator over the differences between this map and","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":158624,"byte_end":158685,"line_start":390,"line_end":390,"column_start":5,"column_end":66}},{"value":"/ another, i.e. the set of entries to add, update, or remove to","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":158690,"byte_end":158755,"line_start":391,"line_end":391,"column_start":5,"column_end":70}},{"value":"/ this map in order to make it equal to the other map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":158760,"byte_end":158816,"line_start":392,"line_end":392,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":158821,"byte_end":158824,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This function will avoid visiting nodes which are shared","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":158829,"byte_end":158889,"line_start":394,"line_end":394,"column_start":5,"column_end":65}},{"value":"/ between the two maps, meaning that even very large maps can be","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":158894,"byte_end":158960,"line_start":395,"line_end":395,"column_start":5,"column_end":71}},{"value":"/ compared quickly if most of their structure is shared.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":158965,"byte_end":159023,"line_start":396,"line_end":396,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159028,"byte_end":159031,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ Time: O(n) (where n is the number of unique elements across","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159036,"byte_end":159099,"line_start":398,"line_end":398,"column_start":5,"column_end":68}},{"value":"/ the two maps, minus the number of elements belonging to nodes","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159104,"byte_end":159169,"line_start":399,"line_end":399,"column_start":5,"column_end":70}},{"value":"/ shared between them)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159174,"byte_end":159198,"line_start":400,"line_end":400,"column_start":5,"column_end":29}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159203,"byte_end":159214,"line_start":401,"line_end":401,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159737,"byte_end":159740,"line_start":424,"line_end":424,"column_start":12,"column_end":15},"name":"get","qualname":"<OrdMap<K, V>>::get","value":"pub fn get<BK>(&Self, &BK) -> Option<&V> where BK: Ord + ?Sized, K: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Get the value for a key from a map.","sig":null,"attributes":[{"value":"/ Get the value for a key from a map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159386,"byte_end":159425,"line_start":408,"line_end":408,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159430,"byte_end":159433,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159438,"byte_end":159456,"line_start":410,"line_end":410,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159461,"byte_end":159464,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159469,"byte_end":159483,"line_start":412,"line_end":412,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159488,"byte_end":159491,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159496,"byte_end":159503,"line_start":414,"line_end":414,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159508,"byte_end":159543,"line_start":415,"line_end":415,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159548,"byte_end":159577,"line_start":416,"line_end":416,"column_start":5,"column_end":34}},{"value":"/ let map = ordmap!{123 => \"lol\"};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159582,"byte_end":159618,"line_start":417,"line_end":417,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159623,"byte_end":159638,"line_start":418,"line_end":418,"column_start":5,"column_end":20}},{"value":"/   map.get(&123),","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159643,"byte_end":159663,"line_start":419,"line_end":419,"column_start":5,"column_end":25}},{"value":"/   Some(&\"lol\")","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159668,"byte_end":159686,"line_start":420,"line_end":420,"column_start":5,"column_end":23}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159691,"byte_end":159697,"line_start":421,"line_end":421,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159702,"byte_end":159709,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159714,"byte_end":159725,"line_start":423,"line_end":423,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160276,"byte_end":160289,"line_start":448,"line_end":448,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<OrdMap<K, V>>::get_key_value","value":"pub fn get_key_value<BK>(&Self, &BK) -> Option<(&K, &V)> where BK: Ord +\n?Sized, K: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Get the key/value pair for a key from a map.","sig":null,"attributes":[{"value":"/ Get the key/value pair for a key from a map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159898,"byte_end":159946,"line_start":432,"line_end":432,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159951,"byte_end":159954,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159959,"byte_end":159977,"line_start":434,"line_end":434,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159982,"byte_end":159985,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":159990,"byte_end":160004,"line_start":436,"line_end":436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160009,"byte_end":160012,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160017,"byte_end":160024,"line_start":438,"line_end":438,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160029,"byte_end":160064,"line_start":439,"line_end":439,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160069,"byte_end":160098,"line_start":440,"line_end":440,"column_start":5,"column_end":34}},{"value":"/ let map = ordmap!{123 => \"lol\"};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160103,"byte_end":160139,"line_start":441,"line_end":441,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160144,"byte_end":160159,"line_start":442,"line_end":442,"column_start":5,"column_end":20}},{"value":"/   map.get_key_value(&123),","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160164,"byte_end":160194,"line_start":443,"line_end":443,"column_start":5,"column_end":35}},{"value":"/   Some((&123, &\"lol\"))","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160199,"byte_end":160225,"line_start":444,"line_end":444,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160230,"byte_end":160236,"line_start":445,"line_end":445,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160241,"byte_end":160248,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160253,"byte_end":160264,"line_start":447,"line_end":447,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":161072,"byte_end":161080,"line_start":473,"line_end":473,"column_start":12,"column_end":20},"name":"get_prev","qualname":"<OrdMap<K, V>>::get_prev","value":"pub fn get_prev<BK>(&Self, &BK) -> Option<(&K, &V)> where BK: Ord + ?Sized,\nK: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Get the closest smaller entry in a map to a given key\n as a mutable reference.","sig":null,"attributes":[{"value":"/ Get the closest smaller entry in a map to a given key","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160467,"byte_end":160524,"line_start":456,"line_end":456,"column_start":5,"column_end":62}},{"value":"/ as a mutable reference.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160529,"byte_end":160556,"line_start":457,"line_end":457,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160561,"byte_end":160564,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ If the map contains the given key, this is returned.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160569,"byte_end":160625,"line_start":459,"line_end":459,"column_start":5,"column_end":61}},{"value":"/ Otherwise, the closest key in the map smaller than the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160630,"byte_end":160688,"line_start":460,"line_end":460,"column_start":5,"column_end":63}},{"value":"/ given value is returned. If the smallest key in the map","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160693,"byte_end":160752,"line_start":461,"line_end":461,"column_start":5,"column_end":64}},{"value":"/ is larger than the given key, `None` is returned.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160757,"byte_end":160810,"line_start":462,"line_end":462,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160815,"byte_end":160818,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160823,"byte_end":160837,"line_start":464,"line_end":464,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160842,"byte_end":160845,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160850,"byte_end":160861,"line_start":466,"line_end":466,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160866,"byte_end":160901,"line_start":467,"line_end":467,"column_start":5,"column_end":40}},{"value":"/ # use im::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160906,"byte_end":160927,"line_start":468,"line_end":468,"column_start":5,"column_end":26}},{"value":"/ let map = ordmap![1 => 1, 3 => 3, 5 => 5];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160932,"byte_end":160978,"line_start":469,"line_end":469,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(Some((&3, &3)), map.get_prev(&4));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":160983,"byte_end":161032,"line_start":470,"line_end":470,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":161037,"byte_end":161044,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":161049,"byte_end":161060,"line_start":472,"line_end":472,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":161865,"byte_end":161873,"line_start":498,"line_end":498,"column_start":12,"column_end":20},"name":"get_next","qualname":"<OrdMap<K, V>>::get_next","value":"pub fn get_next<BK>(&Self, &BK) -> Option<(&K, &V)> where BK: Ord + ?Sized,\nK: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Get the closest larger entry in a map to a given key\n as a mutable reference.","sig":null,"attributes":[{"value":"/ Get the closest larger entry in a map to a given key","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":161254,"byte_end":161310,"line_start":481,"line_end":481,"column_start":5,"column_end":61}},{"value":"/ as a mutable reference.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":161315,"byte_end":161342,"line_start":482,"line_end":482,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":161347,"byte_end":161350,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ If the set contains the given value, this is returned.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":161355,"byte_end":161413,"line_start":484,"line_end":484,"column_start":5,"column_end":63}},{"value":"/ Otherwise, the closest value in the set larger than the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":161418,"byte_end":161477,"line_start":485,"line_end":485,"column_start":5,"column_end":64}},{"value":"/ given value is returned. If the largest value in the set","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":161482,"byte_end":161542,"line_start":486,"line_end":486,"column_start":5,"column_end":65}},{"value":"/ is smaller than the given value, `None` is returned.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":161547,"byte_end":161603,"line_start":487,"line_end":487,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":161608,"byte_end":161611,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":161616,"byte_end":161630,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":161635,"byte_end":161638,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":161643,"byte_end":161654,"line_start":491,"line_end":491,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":161659,"byte_end":161694,"line_start":492,"line_end":492,"column_start":5,"column_end":40}},{"value":"/ # use im::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":161699,"byte_end":161720,"line_start":493,"line_end":493,"column_start":5,"column_end":26}},{"value":"/ let map = ordmap![1 => 1, 3 => 3, 5 => 5];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":161725,"byte_end":161771,"line_start":494,"line_end":494,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(Some((&5, &5)), map.get_next(&4));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":161776,"byte_end":161825,"line_start":495,"line_end":495,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":161830,"byte_end":161837,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":161842,"byte_end":161853,"line_start":497,"line_end":497,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162447,"byte_end":162459,"line_start":524,"line_end":524,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<OrdMap<K, V>>::contains_key","value":"pub fn contains_key<BK>(&Self, &BK) -> bool where BK: Ord + ?Sized,\nK: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Test for the presence of a key in a map.","sig":null,"attributes":[{"value":"/ Test for the presence of a key in a map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162047,"byte_end":162091,"line_start":506,"line_end":506,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162096,"byte_end":162099,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162104,"byte_end":162122,"line_start":508,"line_end":508,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162127,"byte_end":162130,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162135,"byte_end":162149,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162154,"byte_end":162157,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162162,"byte_end":162169,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162174,"byte_end":162209,"line_start":513,"line_end":513,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162214,"byte_end":162243,"line_start":514,"line_end":514,"column_start":5,"column_end":34}},{"value":"/ let map = ordmap!{123 => \"lol\"};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162248,"byte_end":162284,"line_start":515,"line_end":515,"column_start":5,"column_end":41}},{"value":"/ assert!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162289,"byte_end":162301,"line_start":516,"line_end":516,"column_start":5,"column_end":17}},{"value":"/   map.contains_key(&123)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162306,"byte_end":162334,"line_start":517,"line_end":517,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162339,"byte_end":162345,"line_start":518,"line_end":518,"column_start":5,"column_end":11}},{"value":"/ assert!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162350,"byte_end":162362,"line_start":519,"line_end":519,"column_start":5,"column_end":17}},{"value":"/   !map.contains_key(&321)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162367,"byte_end":162396,"line_start":520,"line_end":520,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162401,"byte_end":162407,"line_start":521,"line_end":521,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162412,"byte_end":162419,"line_start":522,"line_end":522,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162424,"byte_end":162435,"line_start":523,"line_end":523,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162884,"byte_end":162896,"line_start":540,"line_end":540,"column_start":12,"column_end":24},"name":"is_submap_by","qualname":"<OrdMap<K, V>>::is_submap_by","value":"pub fn is_submap_by<B, RM, F>(&Self, RM, F) -> bool where F: FnMut(&V, &B) ->\nbool, RM: Borrow<OrdMap<K, B>>","parent":null,"children":[],"decl_id":null,"docs":" Test whether a map is a submap of another map, meaning that\n all keys in our map must also be in the other map, with the\n same values.","sig":null,"attributes":[{"value":"/ Test whether a map is a submap of another map, meaning that","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162593,"byte_end":162656,"line_start":532,"line_end":532,"column_start":5,"column_end":68}},{"value":"/ all keys in our map must also be in the other map, with the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162661,"byte_end":162724,"line_start":533,"line_end":533,"column_start":5,"column_end":68}},{"value":"/ same values.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162729,"byte_end":162745,"line_start":534,"line_end":534,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162750,"byte_end":162753,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Use the provided function to decide whether values are equal.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162758,"byte_end":162823,"line_start":536,"line_end":536,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162828,"byte_end":162831,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162836,"byte_end":162856,"line_start":538,"line_end":538,"column_start":5,"column_end":25}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":162861,"byte_end":162872,"line_start":539,"line_end":539,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":163530,"byte_end":163549,"line_start":558,"line_end":558,"column_start":12,"column_end":31},"name":"is_proper_submap_by","qualname":"<OrdMap<K, V>>::is_proper_submap_by","value":"pub fn is_proper_submap_by<B, RM, F>(&Self, RM, F) -> bool where\nF: FnMut(&V, &B) -> bool, RM: Borrow<OrdMap<K, B>>","parent":null,"children":[],"decl_id":null,"docs":" Test whether a map is a proper submap of another map, meaning\n that all keys in our map must also be in the other map, with\n the same values. To be a proper submap, ours must also contain\n fewer keys than the other map.","sig":null,"attributes":[{"value":"/ Test whether a map is a proper submap of another map, meaning","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":163147,"byte_end":163212,"line_start":549,"line_end":549,"column_start":5,"column_end":70}},{"value":"/ that all keys in our map must also be in the other map, with","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":163217,"byte_end":163281,"line_start":550,"line_end":550,"column_start":5,"column_end":69}},{"value":"/ the same values. To be a proper submap, ours must also contain","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":163286,"byte_end":163352,"line_start":551,"line_end":551,"column_start":5,"column_end":71}},{"value":"/ fewer keys than the other map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":163357,"byte_end":163391,"line_start":552,"line_end":552,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":163396,"byte_end":163399,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ Use the provided function to decide whether values are equal.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":163404,"byte_end":163469,"line_start":554,"line_end":554,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":163474,"byte_end":163477,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":163482,"byte_end":163502,"line_start":556,"line_end":556,"column_start":5,"column_end":25}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":163507,"byte_end":163518,"line_start":557,"line_end":557,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":164246,"byte_end":164255,"line_start":582,"line_end":582,"column_start":12,"column_end":21},"name":"is_submap","qualname":"<OrdMap<K, V>>::is_submap","value":"pub fn is_submap<RM>(&Self, RM) -> bool where V: PartialEq, RM: Borrow<Self>","parent":null,"children":[],"decl_id":null,"docs":" Test whether a map is a submap of another map, meaning that\n all keys in our map must also be in the other map, with the\n same values.","sig":null,"attributes":[{"value":"/ Test whether a map is a submap of another map, meaning that","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":163765,"byte_end":163828,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/ all keys in our map must also be in the other map, with the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":163833,"byte_end":163896,"line_start":567,"line_end":567,"column_start":5,"column_end":68}},{"value":"/ same values.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":163901,"byte_end":163917,"line_start":568,"line_end":568,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":163922,"byte_end":163925,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":163930,"byte_end":163950,"line_start":570,"line_end":570,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":163955,"byte_end":163958,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":163963,"byte_end":163977,"line_start":572,"line_end":572,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":163982,"byte_end":163985,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":163990,"byte_end":163997,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":164002,"byte_end":164037,"line_start":575,"line_end":575,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":164042,"byte_end":164071,"line_start":576,"line_end":576,"column_start":5,"column_end":34}},{"value":"/ let map1 = ordmap!{1 => 1, 2 => 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":164076,"byte_end":164115,"line_start":577,"line_end":577,"column_start":5,"column_end":44}},{"value":"/ let map2 = ordmap!{1 => 1, 2 => 2, 3 => 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":164120,"byte_end":164167,"line_start":578,"line_end":578,"column_start":5,"column_end":52}},{"value":"/ assert!(map1.is_submap(map2));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":164172,"byte_end":164206,"line_start":579,"line_end":579,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":164211,"byte_end":164218,"line_start":580,"line_end":580,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":164223,"byte_end":164234,"line_start":581,"line_end":581,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165141,"byte_end":165157,"line_start":611,"line_end":611,"column_start":12,"column_end":28},"name":"is_proper_submap","qualname":"<OrdMap<K, V>>::is_proper_submap","value":"pub fn is_proper_submap<RM>(&Self, RM) -> bool where V: PartialEq,\nRM: Borrow<Self>","parent":null,"children":[],"decl_id":null,"docs":" Test whether a map is a proper submap of another map, meaning\n that all keys in our map must also be in the other map, with\n the same values. To be a proper submap, ours must also contain\n fewer keys than the other map.","sig":null,"attributes":[{"value":"/ Test whether a map is a proper submap of another map, meaning","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":164418,"byte_end":164483,"line_start":590,"line_end":590,"column_start":5,"column_end":70}},{"value":"/ that all keys in our map must also be in the other map, with","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":164488,"byte_end":164552,"line_start":591,"line_end":591,"column_start":5,"column_end":69}},{"value":"/ the same values. To be a proper submap, ours must also contain","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":164557,"byte_end":164623,"line_start":592,"line_end":592,"column_start":5,"column_end":71}},{"value":"/ fewer keys than the other map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":164628,"byte_end":164662,"line_start":593,"line_end":593,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":164667,"byte_end":164670,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":164675,"byte_end":164695,"line_start":595,"line_end":595,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":164700,"byte_end":164703,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":164708,"byte_end":164722,"line_start":597,"line_end":597,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":164727,"byte_end":164730,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":164735,"byte_end":164742,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":164747,"byte_end":164782,"line_start":600,"line_end":600,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":164787,"byte_end":164816,"line_start":601,"line_end":601,"column_start":5,"column_end":34}},{"value":"/ let map1 = ordmap!{1 => 1, 2 => 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":164821,"byte_end":164860,"line_start":602,"line_end":602,"column_start":5,"column_end":44}},{"value":"/ let map2 = ordmap!{1 => 1, 2 => 2, 3 => 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":164865,"byte_end":164912,"line_start":603,"line_end":603,"column_start":5,"column_end":52}},{"value":"/ assert!(map1.is_proper_submap(map2));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":164917,"byte_end":164958,"line_start":604,"line_end":604,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":164963,"byte_end":164966,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ let map3 = ordmap!{1 => 1, 2 => 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":164971,"byte_end":165010,"line_start":606,"line_end":606,"column_start":5,"column_end":44}},{"value":"/ let map4 = ordmap!{1 => 1, 2 => 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165015,"byte_end":165054,"line_start":607,"line_end":607,"column_start":5,"column_end":44}},{"value":"/ assert!(!map3.is_proper_submap(map4));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165059,"byte_end":165101,"line_start":608,"line_end":608,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165106,"byte_end":165113,"line_start":609,"line_end":609,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165118,"byte_end":165129,"line_start":610,"line_end":610,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165860,"byte_end":165867,"line_start":644,"line_end":644,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OrdMap<K, V>>::get_mut","value":"pub fn get_mut<BK>(&mut Self, &BK) -> Option<&mut V> where BK: Ord + ?Sized,\nK: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the value for a key from a map.","sig":null,"attributes":[{"value":"/ Get a mutable reference to the value for a key from a map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165395,"byte_end":165457,"line_start":625,"line_end":625,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165462,"byte_end":165465,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165470,"byte_end":165488,"line_start":627,"line_end":627,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165493,"byte_end":165496,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165501,"byte_end":165515,"line_start":629,"line_end":629,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165520,"byte_end":165523,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165528,"byte_end":165535,"line_start":631,"line_end":631,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165540,"byte_end":165575,"line_start":632,"line_end":632,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165580,"byte_end":165609,"line_start":633,"line_end":633,"column_start":5,"column_end":34}},{"value":"/ let mut map = ordmap!{123 => \"lol\"};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165614,"byte_end":165654,"line_start":634,"line_end":634,"column_start":5,"column_end":45}},{"value":"/ if let Some(value) = map.get_mut(&123) {","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165659,"byte_end":165703,"line_start":635,"line_end":635,"column_start":5,"column_end":49}},{"value":"/     *value = \"omg\";","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165708,"byte_end":165731,"line_start":636,"line_end":636,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165736,"byte_end":165741,"line_start":637,"line_end":637,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165746,"byte_end":165761,"line_start":638,"line_end":638,"column_start":5,"column_end":20}},{"value":"/   map.get(&123),","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165766,"byte_end":165786,"line_start":639,"line_end":639,"column_start":5,"column_end":25}},{"value":"/   Some(&\"omg\")","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165791,"byte_end":165809,"line_start":640,"line_end":640,"column_start":5,"column_end":23}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165814,"byte_end":165820,"line_start":641,"line_end":641,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165825,"byte_end":165832,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165837,"byte_end":165848,"line_start":643,"line_end":643,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":166820,"byte_end":166832,"line_start":673,"line_end":673,"column_start":12,"column_end":24},"name":"get_prev_mut","qualname":"<OrdMap<K, V>>::get_prev_mut","value":"pub fn get_prev_mut<BK>(&mut Self, &BK) -> Option<(&K, &mut V)> where\nBK: Ord + ?Sized, K: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Get the closest smaller entry in a map to a given key\n as a mutable reference.","sig":null,"attributes":[{"value":"/ Get the closest smaller entry in a map to a given key","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":166114,"byte_end":166171,"line_start":653,"line_end":653,"column_start":5,"column_end":62}},{"value":"/ as a mutable reference.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":166176,"byte_end":166203,"line_start":654,"line_end":654,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":166208,"byte_end":166211,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ If the map contains the given key, this is returned.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":166216,"byte_end":166272,"line_start":656,"line_end":656,"column_start":5,"column_end":61}},{"value":"/ Otherwise, the closest key in the map smaller than the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":166277,"byte_end":166335,"line_start":657,"line_end":657,"column_start":5,"column_end":63}},{"value":"/ given value is returned. If the smallest key in the map","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":166340,"byte_end":166399,"line_start":658,"line_end":658,"column_start":5,"column_end":64}},{"value":"/ is larger than the given key, `None` is returned.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":166404,"byte_end":166457,"line_start":659,"line_end":659,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":166462,"byte_end":166465,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":166470,"byte_end":166484,"line_start":661,"line_end":661,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":166489,"byte_end":166492,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":166497,"byte_end":166508,"line_start":663,"line_end":663,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":166513,"byte_end":166548,"line_start":664,"line_end":664,"column_start":5,"column_end":40}},{"value":"/ # use im::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":166553,"byte_end":166574,"line_start":665,"line_end":665,"column_start":5,"column_end":26}},{"value":"/ let mut map = ordmap![1 => 1, 3 => 3, 5 => 5];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":166579,"byte_end":166629,"line_start":666,"line_end":666,"column_start":5,"column_end":55}},{"value":"/ if let Some((key, value)) = map.get_prev_mut(&4) {","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":166634,"byte_end":166688,"line_start":667,"line_end":667,"column_start":5,"column_end":59}},{"value":"/     *value = 4;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":166693,"byte_end":166712,"line_start":668,"line_end":668,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":166717,"byte_end":166722,"line_start":669,"line_end":669,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(ordmap![1 => 1, 3 => 4, 5 => 5], map);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":166727,"byte_end":166780,"line_start":670,"line_end":670,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":166785,"byte_end":166792,"line_start":671,"line_end":671,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":166797,"byte_end":166808,"line_start":672,"line_end":672,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":167837,"byte_end":167849,"line_start":704,"line_end":704,"column_start":12,"column_end":24},"name":"get_next_mut","qualname":"<OrdMap<K, V>>::get_next_mut","value":"pub fn get_next_mut<BK>(&mut Self, &BK) -> Option<(&K, &mut V)> where\nBK: Ord + ?Sized, K: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Get the closest larger entry in a map to a given key\n as a mutable reference.","sig":null,"attributes":[{"value":"/ Get the closest larger entry in a map to a given key","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":167125,"byte_end":167181,"line_start":684,"line_end":684,"column_start":5,"column_end":61}},{"value":"/ as a mutable reference.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":167186,"byte_end":167213,"line_start":685,"line_end":685,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":167218,"byte_end":167221,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ If the set contains the given value, this is returned.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":167226,"byte_end":167284,"line_start":687,"line_end":687,"column_start":5,"column_end":63}},{"value":"/ Otherwise, the closest value in the set larger than the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":167289,"byte_end":167348,"line_start":688,"line_end":688,"column_start":5,"column_end":64}},{"value":"/ given value is returned. If the largest value in the set","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":167353,"byte_end":167413,"line_start":689,"line_end":689,"column_start":5,"column_end":65}},{"value":"/ is smaller than the given value, `None` is returned.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":167418,"byte_end":167474,"line_start":690,"line_end":690,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":167479,"byte_end":167482,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":167487,"byte_end":167501,"line_start":692,"line_end":692,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":167506,"byte_end":167509,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":167514,"byte_end":167525,"line_start":694,"line_end":694,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":167530,"byte_end":167565,"line_start":695,"line_end":695,"column_start":5,"column_end":40}},{"value":"/ # use im::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":167570,"byte_end":167591,"line_start":696,"line_end":696,"column_start":5,"column_end":26}},{"value":"/ let mut map = ordmap![1 => 1, 3 => 3, 5 => 5];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":167596,"byte_end":167646,"line_start":697,"line_end":697,"column_start":5,"column_end":55}},{"value":"/ if let Some((key, value)) = map.get_next_mut(&4) {","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":167651,"byte_end":167705,"line_start":698,"line_end":698,"column_start":5,"column_end":59}},{"value":"/     *value = 4;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":167710,"byte_end":167729,"line_start":699,"line_end":699,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":167734,"byte_end":167739,"line_start":700,"line_end":700,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(ordmap![1 => 1, 3 => 3, 5 => 4], map);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":167744,"byte_end":167797,"line_start":701,"line_end":701,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":167802,"byte_end":167809,"line_start":702,"line_end":702,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":167814,"byte_end":167825,"line_start":703,"line_end":703,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168895,"byte_end":168901,"line_start":742,"line_end":742,"column_start":12,"column_end":18},"name":"insert","qualname":"<OrdMap<K, V>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Insert a key/value mapping into a map.","sig":null,"attributes":[{"value":"/ Insert a key/value mapping into a map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168142,"byte_end":168184,"line_start":715,"line_end":715,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168189,"byte_end":168192,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ This is a copy-on-write operation, so that the parts of the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168197,"byte_end":168260,"line_start":717,"line_end":717,"column_start":5,"column_end":68}},{"value":"/ map's structure which are shared with other maps will be","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168265,"byte_end":168325,"line_start":718,"line_end":718,"column_start":5,"column_end":65}},{"value":"/ safely copied before mutating.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168330,"byte_end":168364,"line_start":719,"line_end":719,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168369,"byte_end":168372,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ If the map already has a mapping for the given key, the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168377,"byte_end":168436,"line_start":721,"line_end":721,"column_start":5,"column_end":64}},{"value":"/ previous value is overwritten.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168441,"byte_end":168475,"line_start":722,"line_end":722,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168480,"byte_end":168483,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168488,"byte_end":168506,"line_start":724,"line_end":724,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168511,"byte_end":168514,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168519,"byte_end":168533,"line_start":726,"line_end":726,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168538,"byte_end":168541,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168546,"byte_end":168553,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168558,"byte_end":168593,"line_start":729,"line_end":729,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168598,"byte_end":168627,"line_start":730,"line_end":730,"column_start":5,"column_end":34}},{"value":"/ let mut map = ordmap!{};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168632,"byte_end":168660,"line_start":731,"line_end":731,"column_start":5,"column_end":33}},{"value":"/ map.insert(123, \"123\");","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168665,"byte_end":168692,"line_start":732,"line_end":732,"column_start":5,"column_end":32}},{"value":"/ map.insert(456, \"456\");","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168697,"byte_end":168724,"line_start":733,"line_end":733,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168729,"byte_end":168744,"line_start":734,"line_end":734,"column_start":5,"column_end":20}},{"value":"/   map,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168749,"byte_end":168759,"line_start":735,"line_end":735,"column_start":5,"column_end":15}},{"value":"/   ordmap!{123 => \"123\", 456 => \"456\"}","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168764,"byte_end":168805,"line_start":736,"line_end":736,"column_start":5,"column_end":46}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168810,"byte_end":168816,"line_start":737,"line_end":737,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168821,"byte_end":168828,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168833,"byte_end":168836,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ [insert]: #method.insert","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168841,"byte_end":168869,"line_start":740,"line_end":740,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":168874,"byte_end":168883,"line_start":741,"line_end":741,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":170032,"byte_end":170038,"line_start":779,"line_end":779,"column_start":12,"column_end":18},"name":"remove","qualname":"<OrdMap<K, V>>::remove","value":"pub fn remove<BK>(&mut Self, &BK) -> Option<V> where BK: Ord + ?Sized,\nK: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Remove a key/value mapping from a map if it exists.","sig":null,"attributes":[{"value":"/ Remove a key/value mapping from a map if it exists.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":169602,"byte_end":169657,"line_start":762,"line_end":762,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":169662,"byte_end":169665,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":169670,"byte_end":169688,"line_start":764,"line_end":764,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":169693,"byte_end":169696,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":169701,"byte_end":169715,"line_start":766,"line_end":766,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":169720,"byte_end":169723,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":169728,"byte_end":169735,"line_start":768,"line_end":768,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":169740,"byte_end":169775,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":169780,"byte_end":169809,"line_start":770,"line_end":770,"column_start":5,"column_end":34}},{"value":"/ let mut map = ordmap!{123 => \"123\", 456 => \"456\"};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":169814,"byte_end":169868,"line_start":771,"line_end":771,"column_start":5,"column_end":59}},{"value":"/ map.remove(&123);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":169873,"byte_end":169894,"line_start":772,"line_end":772,"column_start":5,"column_end":26}},{"value":"/ map.remove(&456);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":169899,"byte_end":169920,"line_start":773,"line_end":773,"column_start":5,"column_end":26}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":169925,"byte_end":169953,"line_start":774,"line_end":774,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":169958,"byte_end":169965,"line_start":775,"line_end":775,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":169970,"byte_end":169973,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ [remove]: #method.remove","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":169978,"byte_end":170006,"line_start":777,"line_end":777,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":170011,"byte_end":170020,"line_start":778,"line_end":778,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":170341,"byte_end":170356,"line_start":791,"line_end":791,"column_start":12,"column_end":27},"name":"remove_with_key","qualname":"<OrdMap<K, V>>::remove_with_key","value":"pub fn remove_with_key<BK>(&mut Self, &BK) -> Option<(K, V)> where BK: Ord +\n?Sized, K: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Remove a key/value pair from a map, if it exists, and return\n the removed key and value.","sig":null,"attributes":[{"value":"/ Remove a key/value pair from a map, if it exists, and return","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":170199,"byte_end":170263,"line_start":787,"line_end":787,"column_start":5,"column_end":69}},{"value":"/ the removed key and value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":170268,"byte_end":170298,"line_start":788,"line_end":788,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":170303,"byte_end":170306,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":170311,"byte_end":170329,"line_start":790,"line_end":790,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171522,"byte_end":171528,"line_start":832,"line_end":832,"column_start":12,"column_end":18},"name":"update","qualname":"<OrdMap<K, V>>::update","value":"pub fn update(&Self, K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new map by inserting a key/value mapping into a\n map.","sig":null,"attributes":[{"value":"/ Construct a new map by inserting a key/value mapping into a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171017,"byte_end":171080,"line_start":812,"line_end":812,"column_start":5,"column_end":68}},{"value":"/ map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171085,"byte_end":171093,"line_start":813,"line_end":813,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171098,"byte_end":171101,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ If the map already has a mapping for the given key, the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171106,"byte_end":171165,"line_start":815,"line_end":815,"column_start":5,"column_end":64}},{"value":"/ previous value is overwritten.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171170,"byte_end":171204,"line_start":816,"line_end":816,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171209,"byte_end":171212,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171217,"byte_end":171235,"line_start":818,"line_end":818,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171240,"byte_end":171243,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171248,"byte_end":171262,"line_start":820,"line_end":820,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171267,"byte_end":171270,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171275,"byte_end":171282,"line_start":822,"line_end":822,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171287,"byte_end":171322,"line_start":823,"line_end":823,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171327,"byte_end":171356,"line_start":824,"line_end":824,"column_start":5,"column_end":34}},{"value":"/ let map = ordmap!{};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171361,"byte_end":171385,"line_start":825,"line_end":825,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171390,"byte_end":171405,"line_start":826,"line_end":826,"column_start":5,"column_end":20}},{"value":"/   map.update(123, \"123\"),","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171410,"byte_end":171439,"line_start":827,"line_end":827,"column_start":5,"column_end":34}},{"value":"/   ordmap!{123 => \"123\"}","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171444,"byte_end":171471,"line_start":828,"line_end":828,"column_start":5,"column_end":32}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171476,"byte_end":171482,"line_start":829,"line_end":829,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171487,"byte_end":171494,"line_start":830,"line_end":830,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171499,"byte_end":171510,"line_start":831,"line_end":831,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171982,"byte_end":171993,"line_start":847,"line_end":847,"column_start":12,"column_end":23},"name":"update_with","qualname":"<OrdMap<K, V>>::update_with","value":"pub fn update_with<F>(Self, K, V, F) -> Self where F: FnOnce(V, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Construct a new map by inserting a key/value mapping into a\n map.","sig":null,"attributes":[{"value":"/ Construct a new map by inserting a key/value mapping into a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171655,"byte_end":171718,"line_start":838,"line_end":838,"column_start":5,"column_end":68}},{"value":"/ map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171723,"byte_end":171731,"line_start":839,"line_end":839,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171736,"byte_end":171739,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ If the map already has a mapping for the given key, we call","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171744,"byte_end":171807,"line_start":841,"line_end":841,"column_start":5,"column_end":68}},{"value":"/ the provided function with the old value and the new value,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171812,"byte_end":171875,"line_start":842,"line_end":842,"column_start":5,"column_end":68}},{"value":"/ and insert the result as the new value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171880,"byte_end":171923,"line_start":843,"line_end":843,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171928,"byte_end":171931,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171936,"byte_end":171954,"line_start":845,"line_end":845,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":171959,"byte_end":171970,"line_start":846,"line_end":846,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":172480,"byte_end":172495,"line_start":863,"line_end":863,"column_start":12,"column_end":27},"name":"update_with_key","qualname":"<OrdMap<K, V>>::update_with_key","value":"pub fn update_with_key<F>(Self, K, V, F) -> Self where F: FnOnce(&K, V, V) ->\nV","parent":null,"children":[],"decl_id":null,"docs":" Construct a new map by inserting a key/value mapping into a\n map.","sig":null,"attributes":[{"value":"/ Construct a new map by inserting a key/value mapping into a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":172144,"byte_end":172207,"line_start":854,"line_end":854,"column_start":5,"column_end":68}},{"value":"/ map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":172212,"byte_end":172220,"line_start":855,"line_end":855,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":172225,"byte_end":172228,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ If the map already has a mapping for the given key, we call","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":172233,"byte_end":172296,"line_start":857,"line_end":857,"column_start":5,"column_end":68}},{"value":"/ the provided function with the key, the old value and the new","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":172301,"byte_end":172366,"line_start":858,"line_end":858,"column_start":5,"column_end":70}},{"value":"/ value, and insert the result as the new value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":172371,"byte_end":172421,"line_start":859,"line_end":859,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":172426,"byte_end":172429,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":172434,"byte_end":172452,"line_start":861,"line_end":861,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":172457,"byte_end":172468,"line_start":862,"line_end":862,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":173212,"byte_end":173234,"line_start":886,"line_end":886,"column_start":12,"column_end":34},"name":"update_lookup_with_key","qualname":"<OrdMap<K, V>>::update_lookup_with_key","value":"pub fn update_lookup_with_key<F>(Self, K, V, F) -> (Option<V>, Self) where\nF: FnOnce(&K, &V, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Construct a new map by inserting a key/value mapping into a\n map, returning the old value for the key as well as the new\n map.","sig":null,"attributes":[{"value":"/ Construct a new map by inserting a key/value mapping into a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":172808,"byte_end":172871,"line_start":876,"line_end":876,"column_start":5,"column_end":68}},{"value":"/ map, returning the old value for the key as well as the new","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":172876,"byte_end":172939,"line_start":877,"line_end":877,"column_start":5,"column_end":68}},{"value":"/ map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":172944,"byte_end":172952,"line_start":878,"line_end":878,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":172957,"byte_end":172960,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ If the map already has a mapping for the given key, we call","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":172965,"byte_end":173028,"line_start":880,"line_end":880,"column_start":5,"column_end":68}},{"value":"/ the provided function with the key, the old value and the new","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":173033,"byte_end":173098,"line_start":881,"line_end":881,"column_start":5,"column_end":70}},{"value":"/ value, and insert the result as the new value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":173103,"byte_end":173153,"line_start":882,"line_end":882,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":173158,"byte_end":173161,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":173166,"byte_end":173184,"line_start":884,"line_end":884,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":173189,"byte_end":173200,"line_start":885,"line_end":885,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":174126,"byte_end":174131,"line_start":912,"line_end":912,"column_start":12,"column_end":17},"name":"alter","qualname":"<OrdMap<K, V>>::alter","value":"pub fn alter<F>(&Self, F, K) -> Self where F: FnOnce(Option<V>) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Update the value for a given key by calling a function with\n the current value and overwriting it with the function's\n return value.","sig":null,"attributes":[{"value":"/ Update the value for a given key by calling a function with","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":173582,"byte_end":173645,"line_start":899,"line_end":899,"column_start":5,"column_end":68}},{"value":"/ the current value and overwriting it with the function's","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":173650,"byte_end":173710,"line_start":900,"line_end":900,"column_start":5,"column_end":65}},{"value":"/ return value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":173715,"byte_end":173732,"line_start":901,"line_end":901,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":173737,"byte_end":173740,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ The function gets an [`Option<V>`][std::option::Option] and","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":173745,"byte_end":173808,"line_start":903,"line_end":903,"column_start":5,"column_end":68}},{"value":"/ returns the same, so that it can decide to delete a mapping","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":173813,"byte_end":173876,"line_start":904,"line_end":904,"column_start":5,"column_end":68}},{"value":"/ instead of updating the value, and decide what to do if the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":173881,"byte_end":173944,"line_start":905,"line_end":905,"column_start":5,"column_end":68}},{"value":"/ key isn't in the map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":173949,"byte_end":173974,"line_start":906,"line_end":906,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":173979,"byte_end":173982,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":173987,"byte_end":174005,"line_start":908,"line_end":908,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":174010,"byte_end":174013,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ [std::option::Option]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":174018,"byte_end":174098,"line_start":910,"line_end":910,"column_start":5,"column_end":85}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":174103,"byte_end":174114,"line_start":911,"line_end":911,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":174662,"byte_end":174669,"line_start":929,"line_end":929,"column_start":12,"column_end":19},"name":"without","qualname":"<OrdMap<K, V>>::without","value":"pub fn without<BK>(&Self, &BK) -> Self where BK: Ord + ?Sized, K: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Remove a key/value pair from a map, if it exists.","sig":null,"attributes":[{"value":"/ Remove a key/value pair from a map, if it exists.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":174550,"byte_end":174603,"line_start":925,"line_end":925,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":174608,"byte_end":174611,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":174616,"byte_end":174634,"line_start":927,"line_end":927,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":174639,"byte_end":174650,"line_start":928,"line_end":928,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":175049,"byte_end":175056,"line_start":944,"line_end":944,"column_start":12,"column_end":19},"name":"extract","qualname":"<OrdMap<K, V>>::extract","value":"pub fn extract<BK>(&Self, &BK) -> Option<(V, Self)> where BK: Ord + ?Sized,\nK: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Remove a key/value pair from a map, if it exists, and return\n the removed value as well as the updated list.","sig":null,"attributes":[{"value":"/ Remove a key/value pair from a map, if it exists, and return","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":174871,"byte_end":174935,"line_start":939,"line_end":939,"column_start":5,"column_end":69}},{"value":"/ the removed value as well as the updated list.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":174940,"byte_end":174990,"line_start":940,"line_end":940,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":174995,"byte_end":174998,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":175003,"byte_end":175021,"line_start":942,"line_end":942,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":175026,"byte_end":175037,"line_start":943,"line_end":943,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":175416,"byte_end":175432,"line_start":957,"line_end":957,"column_start":12,"column_end":28},"name":"extract_with_key","qualname":"<OrdMap<K, V>>::extract_with_key","value":"pub fn extract_with_key<BK>(&Self, &BK) -> Option<(K, V, Self)> where\nBK: Ord + ?Sized, K: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Remove a key/value pair from a map, if it exists, and return\n the removed key and value as well as the updated list.","sig":null,"attributes":[{"value":"/ Remove a key/value pair from a map, if it exists, and return","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":175230,"byte_end":175294,"line_start":952,"line_end":952,"column_start":5,"column_end":69}},{"value":"/ the removed key and value as well as the updated list.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":175299,"byte_end":175357,"line_start":953,"line_end":953,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":175362,"byte_end":175365,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":175370,"byte_end":175388,"line_start":955,"line_end":955,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":175393,"byte_end":175404,"line_start":956,"line_end":956,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":176186,"byte_end":176191,"line_start":984,"line_end":984,"column_start":12,"column_end":17},"name":"union","qualname":"<OrdMap<K, V>>::union","value":"pub fn union(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of two maps, keeping the values in the\n current map when keys exist in both maps.","sig":null,"attributes":[{"value":"/ Construct the union of two maps, keeping the values in the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":175674,"byte_end":175736,"line_start":967,"line_end":967,"column_start":5,"column_end":67}},{"value":"/ current map when keys exist in both maps.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":175741,"byte_end":175786,"line_start":968,"line_end":968,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":175791,"byte_end":175794,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":175799,"byte_end":175819,"line_start":970,"line_end":970,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":175824,"byte_end":175827,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":175832,"byte_end":175846,"line_start":972,"line_end":972,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":175851,"byte_end":175854,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":175859,"byte_end":175866,"line_start":974,"line_end":974,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":175871,"byte_end":175906,"line_start":975,"line_end":975,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":175911,"byte_end":175940,"line_start":976,"line_end":976,"column_start":5,"column_end":34}},{"value":"/ let map1 = ordmap!{1 => 1, 3 => 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":175945,"byte_end":175984,"line_start":977,"line_end":977,"column_start":5,"column_end":44}},{"value":"/ let map2 = ordmap!{2 => 2, 3 => 4};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":175989,"byte_end":176028,"line_start":978,"line_end":978,"column_start":5,"column_end":44}},{"value":"/ let expected = ordmap!{1 => 1, 2 => 2, 3 => 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":176033,"byte_end":176084,"line_start":979,"line_end":979,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(expected, map1.union(map2));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":176089,"byte_end":176132,"line_start":980,"line_end":980,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":176137,"byte_end":176144,"line_start":981,"line_end":981,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":176149,"byte_end":176158,"line_start":982,"line_end":982,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":176163,"byte_end":176174,"line_start":983,"line_end":983,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":176805,"byte_end":176815,"line_start":1002,"line_end":1002,"column_start":12,"column_end":22},"name":"union_with","qualname":"<OrdMap<K, V>>::union_with","value":"pub fn union_with<F>(Self, Self, F) -> Self where F: FnMut(V, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of two maps, using a function to decide\n what to do with the value when a key is in both maps.","sig":null,"attributes":[{"value":"/ Construct the union of two maps, using a function to decide","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":176329,"byte_end":176392,"line_start":991,"line_end":991,"column_start":5,"column_end":68}},{"value":"/ what to do with the value when a key is in both maps.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":176397,"byte_end":176454,"line_start":992,"line_end":992,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":176459,"byte_end":176462,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ The function is called when a value exists in both maps, and","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":176467,"byte_end":176531,"line_start":994,"line_end":994,"column_start":5,"column_end":69}},{"value":"/ receives the value from the current map as its first argument,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":176536,"byte_end":176602,"line_start":995,"line_end":995,"column_start":5,"column_end":71}},{"value":"/ and the value from the other map as the second. It should","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":176607,"byte_end":176668,"line_start":996,"line_end":996,"column_start":5,"column_end":66}},{"value":"/ return the value to be inserted in the resulting map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":176673,"byte_end":176730,"line_start":997,"line_end":997,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":176735,"byte_end":176738,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":176743,"byte_end":176763,"line_start":999,"line_end":999,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":176768,"byte_end":176777,"line_start":1000,"line_end":1000,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":176782,"byte_end":176793,"line_start":1001,"line_end":1001,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":177896,"byte_end":177910,"line_start":1034,"line_end":1034,"column_start":12,"column_end":26},"name":"union_with_key","qualname":"<OrdMap<K, V>>::union_with_key","value":"pub fn union_with_key<F>(Self, Self, F) -> Self where F: FnMut(&K, V, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of two maps, using a function to decide\n what to do with the value when a key is in both maps.","sig":null,"attributes":[{"value":"/ Construct the union of two maps, using a function to decide","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":176970,"byte_end":177033,"line_start":1009,"line_end":1009,"column_start":5,"column_end":68}},{"value":"/ what to do with the value when a key is in both maps.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":177038,"byte_end":177095,"line_start":1010,"line_end":1010,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":177100,"byte_end":177103,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ The function is called when a value exists in both maps, and","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":177108,"byte_end":177172,"line_start":1012,"line_end":1012,"column_start":5,"column_end":69}},{"value":"/ receives a reference to the key as its first argument, the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":177177,"byte_end":177239,"line_start":1013,"line_end":1013,"column_start":5,"column_end":67}},{"value":"/ value from the current map as the second argument, and the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":177244,"byte_end":177306,"line_start":1014,"line_end":1014,"column_start":5,"column_end":67}},{"value":"/ value from the other map as the third argument. It should","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":177311,"byte_end":177372,"line_start":1015,"line_end":1015,"column_start":5,"column_end":66}},{"value":"/ return the value to be inserted in the resulting map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":177377,"byte_end":177434,"line_start":1016,"line_end":1016,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":177439,"byte_end":177442,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":177447,"byte_end":177467,"line_start":1018,"line_end":1018,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":177472,"byte_end":177475,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":177480,"byte_end":177494,"line_start":1020,"line_end":1020,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":177499,"byte_end":177502,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":177507,"byte_end":177514,"line_start":1022,"line_end":1022,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":177519,"byte_end":177554,"line_start":1023,"line_end":1023,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":177559,"byte_end":177588,"line_start":1024,"line_end":1024,"column_start":5,"column_end":34}},{"value":"/ let map1 = ordmap!{1 => 1, 3 => 4};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":177593,"byte_end":177632,"line_start":1025,"line_end":1025,"column_start":5,"column_end":44}},{"value":"/ let map2 = ordmap!{2 => 2, 3 => 5};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":177637,"byte_end":177676,"line_start":1026,"line_end":1026,"column_start":5,"column_end":44}},{"value":"/ let expected = ordmap!{1 => 1, 2 => 2, 3 => 9};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":177681,"byte_end":177732,"line_start":1027,"line_end":1027,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(expected, map1.union_with_key(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":177737,"byte_end":177782,"line_start":1028,"line_end":1028,"column_start":5,"column_end":50}},{"value":"/     map2,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":177787,"byte_end":177800,"line_start":1029,"line_end":1029,"column_start":5,"column_end":18}},{"value":"/     |key, left, right| left + right","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":177805,"byte_end":177844,"line_start":1030,"line_end":1030,"column_start":5,"column_end":44}},{"value":"/ ));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":177849,"byte_end":177856,"line_start":1031,"line_end":1031,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":177861,"byte_end":177868,"line_start":1032,"line_end":1032,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":177873,"byte_end":177884,"line_start":1033,"line_end":1033,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":178931,"byte_end":178937,"line_start":1068,"line_end":1068,"column_start":12,"column_end":18},"name":"unions","qualname":"<OrdMap<K, V>>::unions","value":"pub fn unions<I>(I) -> Self where I: IntoIterator<Item = Self>","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of a sequence of maps, selecting the value\n of the leftmost when a key appears in more than one map.","sig":null,"attributes":[{"value":"/ Construct the union of a sequence of maps, selecting the value","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":178406,"byte_end":178472,"line_start":1052,"line_end":1052,"column_start":5,"column_end":71}},{"value":"/ of the leftmost when a key appears in more than one map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":178477,"byte_end":178537,"line_start":1053,"line_end":1053,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":178542,"byte_end":178545,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":178550,"byte_end":178570,"line_start":1055,"line_end":1055,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":178575,"byte_end":178578,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":178583,"byte_end":178597,"line_start":1057,"line_end":1057,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":178602,"byte_end":178605,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":178610,"byte_end":178617,"line_start":1059,"line_end":1059,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":178622,"byte_end":178657,"line_start":1060,"line_end":1060,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":178662,"byte_end":178691,"line_start":1061,"line_end":1061,"column_start":5,"column_end":34}},{"value":"/ let map1 = ordmap!{1 => 1, 3 => 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":178696,"byte_end":178735,"line_start":1062,"line_end":1062,"column_start":5,"column_end":44}},{"value":"/ let map2 = ordmap!{2 => 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":178740,"byte_end":178771,"line_start":1063,"line_end":1063,"column_start":5,"column_end":36}},{"value":"/ let expected = ordmap!{1 => 1, 2 => 2, 3 => 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":178776,"byte_end":178827,"line_start":1064,"line_end":1064,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(expected, OrdMap::unions(vec![map1, map2]));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":178832,"byte_end":178891,"line_start":1065,"line_end":1065,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":178896,"byte_end":178903,"line_start":1066,"line_end":1066,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":178908,"byte_end":178919,"line_start":1067,"line_end":1067,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":179568,"byte_end":179579,"line_start":1086,"line_end":1086,"column_start":12,"column_end":23},"name":"unions_with","qualname":"<OrdMap<K, V>>::unions_with","value":"pub fn unions_with<I, F>(I, F) -> Self where I: IntoIterator<Item = Self>,\nF: Fn(V, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of a sequence of maps, using a function to\n decide what to do with the value when a key is in more than\n one map.","sig":null,"attributes":[{"value":"/ Construct the union of a sequence of maps, using a function to","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":179077,"byte_end":179143,"line_start":1075,"line_end":1075,"column_start":5,"column_end":71}},{"value":"/ decide what to do with the value when a key is in more than","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":179148,"byte_end":179211,"line_start":1076,"line_end":1076,"column_start":5,"column_end":68}},{"value":"/ one map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":179216,"byte_end":179228,"line_start":1077,"line_end":1077,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":179233,"byte_end":179236,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ The function is called when a value exists in multiple maps,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":179241,"byte_end":179305,"line_start":1079,"line_end":1079,"column_start":5,"column_end":69}},{"value":"/ and receives the value from the current map as its first","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":179310,"byte_end":179370,"line_start":1080,"line_end":1080,"column_start":5,"column_end":65}},{"value":"/ argument, and the value from the next map as the second. It","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":179375,"byte_end":179438,"line_start":1081,"line_end":1081,"column_start":5,"column_end":68}},{"value":"/ should return the value to be inserted in the resulting map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":179443,"byte_end":179507,"line_start":1082,"line_end":1082,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":179512,"byte_end":179515,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":179520,"byte_end":179540,"line_start":1084,"line_end":1084,"column_start":5,"column_end":25}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":179545,"byte_end":179556,"line_start":1085,"line_end":1085,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":180336,"byte_end":180351,"line_start":1107,"line_end":1107,"column_start":12,"column_end":27},"name":"unions_with_key","qualname":"<OrdMap<K, V>>::unions_with_key","value":"pub fn unions_with_key<I, F>(I, F) -> Self where I: IntoIterator<Item = Self>,\nF: Fn(&K, V, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of a sequence of maps, using a function to\n decide what to do with the value when a key is in more than\n one map.","sig":null,"attributes":[{"value":"/ Construct the union of a sequence of maps, using a function to","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":179782,"byte_end":179848,"line_start":1095,"line_end":1095,"column_start":5,"column_end":71}},{"value":"/ decide what to do with the value when a key is in more than","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":179853,"byte_end":179916,"line_start":1096,"line_end":1096,"column_start":5,"column_end":68}},{"value":"/ one map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":179921,"byte_end":179933,"line_start":1097,"line_end":1097,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":179938,"byte_end":179941,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ The function is called when a value exists in multiple maps,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":179946,"byte_end":180010,"line_start":1099,"line_end":1099,"column_start":5,"column_end":69}},{"value":"/ and receives a reference to the key as its first argument, the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":180015,"byte_end":180081,"line_start":1100,"line_end":1100,"column_start":5,"column_end":71}},{"value":"/ value from the current map as the second argument, and the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":180086,"byte_end":180148,"line_start":1101,"line_end":1101,"column_start":5,"column_end":67}},{"value":"/ value from the next map as the third argument. It should","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":180153,"byte_end":180213,"line_start":1102,"line_end":1102,"column_start":5,"column_end":65}},{"value":"/ return the value to be inserted in the resulting map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":180218,"byte_end":180275,"line_start":1103,"line_end":1103,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":180280,"byte_end":180283,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":180288,"byte_end":180308,"line_start":1105,"line_end":1105,"column_start":5,"column_end":25}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":180313,"byte_end":180324,"line_start":1106,"line_end":1106,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181240,"byte_end":181250,"line_start":1138,"line_end":1138,"column_start":12,"column_end":22},"name":"difference","qualname":"<OrdMap<K, V>>::difference","value":"pub fn difference(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two maps by discarding keys\n which occur in both maps.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two maps by discarding keys","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":180562,"byte_end":180636,"line_start":1116,"line_end":1116,"column_start":5,"column_end":79}},{"value":"/ which occur in both maps.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":180641,"byte_end":180670,"line_start":1117,"line_end":1117,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":180675,"byte_end":180678,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ This is an alias for the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":180683,"byte_end":180711,"line_start":1119,"line_end":1119,"column_start":5,"column_end":33}},{"value":"/ [`symmetric_difference`][symmetric_difference] method.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":180716,"byte_end":180774,"line_start":1120,"line_end":1120,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":180779,"byte_end":180782,"line_start":1121,"line_end":1121,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":180787,"byte_end":180807,"line_start":1122,"line_end":1122,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":180812,"byte_end":180815,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":180820,"byte_end":180834,"line_start":1124,"line_end":1124,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":180839,"byte_end":180842,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":180847,"byte_end":180854,"line_start":1126,"line_end":1126,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":180859,"byte_end":180894,"line_start":1127,"line_end":1127,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":180899,"byte_end":180928,"line_start":1128,"line_end":1128,"column_start":5,"column_end":34}},{"value":"/ let map1 = ordmap!{1 => 1, 3 => 4};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":180933,"byte_end":180972,"line_start":1129,"line_end":1129,"column_start":5,"column_end":44}},{"value":"/ let map2 = ordmap!{2 => 2, 3 => 5};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":180977,"byte_end":181016,"line_start":1130,"line_end":1130,"column_start":5,"column_end":44}},{"value":"/ let expected = ordmap!{1 => 1, 2 => 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181021,"byte_end":181064,"line_start":1131,"line_end":1131,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(expected, map1.difference(map2));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181069,"byte_end":181117,"line_start":1132,"line_end":1132,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181122,"byte_end":181129,"line_start":1133,"line_end":1133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181134,"byte_end":181137,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ [symmetric_difference]: #method.symmetric_difference","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181142,"byte_end":181198,"line_start":1135,"line_end":1135,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181203,"byte_end":181212,"line_start":1136,"line_end":1136,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181217,"byte_end":181228,"line_start":1137,"line_end":1137,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181847,"byte_end":181867,"line_start":1159,"line_end":1159,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<OrdMap<K, V>>::symmetric_difference","value":"pub fn symmetric_difference(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two maps by discarding keys\n which occur in both maps.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two maps by discarding keys","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181332,"byte_end":181406,"line_start":1142,"line_end":1142,"column_start":5,"column_end":79}},{"value":"/ which occur in both maps.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181411,"byte_end":181440,"line_start":1143,"line_end":1143,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181445,"byte_end":181448,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181453,"byte_end":181473,"line_start":1145,"line_end":1145,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181478,"byte_end":181481,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181486,"byte_end":181500,"line_start":1147,"line_end":1147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181505,"byte_end":181508,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181513,"byte_end":181520,"line_start":1149,"line_end":1149,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181525,"byte_end":181560,"line_start":1150,"line_end":1150,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181565,"byte_end":181594,"line_start":1151,"line_end":1151,"column_start":5,"column_end":34}},{"value":"/ let map1 = ordmap!{1 => 1, 3 => 4};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181599,"byte_end":181638,"line_start":1152,"line_end":1152,"column_start":5,"column_end":44}},{"value":"/ let map2 = ordmap!{2 => 2, 3 => 5};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181643,"byte_end":181682,"line_start":1153,"line_end":1153,"column_start":5,"column_end":44}},{"value":"/ let expected = ordmap!{1 => 1, 2 => 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181687,"byte_end":181730,"line_start":1154,"line_end":1154,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(expected, map1.symmetric_difference(map2));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181735,"byte_end":181793,"line_start":1155,"line_end":1155,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181798,"byte_end":181805,"line_start":1156,"line_end":1156,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181810,"byte_end":181819,"line_start":1157,"line_end":1157,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181824,"byte_end":181835,"line_start":1158,"line_end":1158,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":182371,"byte_end":182386,"line_start":1174,"line_end":1174,"column_start":12,"column_end":27},"name":"difference_with","qualname":"<OrdMap<K, V>>::difference_with","value":"pub fn difference_with<F>(Self, Self, F) -> Self where F: FnMut(V, V) ->\nOption<V>","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two maps by using a function\n to decide what to do if a key occurs in both.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two maps by using a function","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":181974,"byte_end":182049,"line_start":1163,"line_end":1163,"column_start":5,"column_end":80}},{"value":"/ to decide what to do if a key occurs in both.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":182054,"byte_end":182103,"line_start":1164,"line_end":1164,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":182108,"byte_end":182111,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ This is an alias for the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":182116,"byte_end":182144,"line_start":1166,"line_end":1166,"column_start":5,"column_end":33}},{"value":"/ [`symmetric_difference_with`][symmetric_difference_with] method.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":182149,"byte_end":182217,"line_start":1167,"line_end":1167,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":182222,"byte_end":182225,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":182230,"byte_end":182250,"line_start":1169,"line_end":1169,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":182255,"byte_end":182258,"line_start":1170,"line_end":1170,"column_start":5,"column_end":8}},{"value":"/ [symmetric_difference_with]: #method.symmetric_difference_with","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":182263,"byte_end":182329,"line_start":1171,"line_end":1171,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":182334,"byte_end":182343,"line_start":1172,"line_end":1172,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":182348,"byte_end":182359,"line_start":1173,"line_end":1173,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":975},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":182740,"byte_end":182765,"line_start":1187,"line_end":1187,"column_start":12,"column_end":37},"name":"symmetric_difference_with","qualname":"<OrdMap<K, V>>::symmetric_difference_with","value":"pub fn symmetric_difference_with<F>(Self, Self, F) -> Self where\nF: FnMut(V, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two maps by using a function\n to decide what to do if a key occurs in both.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two maps by using a function","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":182536,"byte_end":182611,"line_start":1181,"line_end":1181,"column_start":5,"column_end":80}},{"value":"/ to decide what to do if a key occurs in both.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":182616,"byte_end":182665,"line_start":1182,"line_end":1182,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":182670,"byte_end":182673,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":182678,"byte_end":182698,"line_start":1184,"line_end":1184,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":182703,"byte_end":182712,"line_start":1185,"line_end":1185,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":182717,"byte_end":182728,"line_start":1186,"line_end":1186,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":183812,"byte_end":183831,"line_start":1219,"line_end":1219,"column_start":12,"column_end":31},"name":"difference_with_key","qualname":"<OrdMap<K, V>>::difference_with_key","value":"pub fn difference_with_key<F>(Self, Self, F) -> Self where F: FnMut(&K, V, V)\n-> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two maps by using a function\n to decide what to do if a key occurs in both. The function\n receives the key as well as both values.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two maps by using a function","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":182939,"byte_end":183014,"line_start":1194,"line_end":1194,"column_start":5,"column_end":80}},{"value":"/ to decide what to do if a key occurs in both. The function","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":183019,"byte_end":183081,"line_start":1195,"line_end":1195,"column_start":5,"column_end":67}},{"value":"/ receives the key as well as both values.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":183086,"byte_end":183130,"line_start":1196,"line_end":1196,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":183135,"byte_end":183138,"line_start":1197,"line_end":1197,"column_start":5,"column_end":8}},{"value":"/ This is an alias for the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":183143,"byte_end":183171,"line_start":1198,"line_end":1198,"column_start":5,"column_end":33}},{"value":"/ [`symmetric_difference_with_key`][symmetric_difference_with_key]","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":183176,"byte_end":183244,"line_start":1199,"line_end":1199,"column_start":5,"column_end":73}},{"value":"/ method.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":183249,"byte_end":183260,"line_start":1200,"line_end":1200,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":183265,"byte_end":183268,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":183273,"byte_end":183293,"line_start":1202,"line_end":1202,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":183298,"byte_end":183301,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":183306,"byte_end":183320,"line_start":1204,"line_end":1204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":183325,"byte_end":183328,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":183333,"byte_end":183340,"line_start":1206,"line_end":1206,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":183345,"byte_end":183380,"line_start":1207,"line_end":1207,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":183385,"byte_end":183414,"line_start":1208,"line_end":1208,"column_start":5,"column_end":34}},{"value":"/ let map1 = ordmap!{1 => 1, 3 => 4};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":183419,"byte_end":183458,"line_start":1209,"line_end":1209,"column_start":5,"column_end":44}},{"value":"/ let map2 = ordmap!{2 => 2, 3 => 5};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":183463,"byte_end":183502,"line_start":1210,"line_end":1210,"column_start":5,"column_end":44}},{"value":"/ let expected = ordmap!{1 => 1, 2 => 2, 3 => 9};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":183507,"byte_end":183558,"line_start":1211,"line_end":1211,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(expected, map1.difference_with_key(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":183563,"byte_end":183613,"line_start":1212,"line_end":1212,"column_start":5,"column_end":55}},{"value":"/     map2,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":183618,"byte_end":183631,"line_start":1213,"line_end":1213,"column_start":5,"column_end":18}},{"value":"/     |key, left, right| Some(left + right)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":183636,"byte_end":183681,"line_start":1214,"line_end":1214,"column_start":5,"column_end":50}},{"value":"/ ));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":183686,"byte_end":183693,"line_start":1215,"line_end":1215,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":183698,"byte_end":183705,"line_start":1216,"line_end":1216,"column_start":5,"column_end":12}},{"value":"/ [symmetric_difference_with_key]: #method.symmetric_difference_with_key","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":183710,"byte_end":183784,"line_start":1217,"line_end":1217,"column_start":5,"column_end":79}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":183789,"byte_end":183800,"line_start":1218,"line_end":1218,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":184663,"byte_end":184692,"line_start":1246,"line_end":1246,"column_start":12,"column_end":41},"name":"symmetric_difference_with_key","qualname":"<OrdMap<K, V>>::symmetric_difference_with_key","value":"pub fn symmetric_difference_with_key<F>(Self, Self, F) -> Self where\nF: FnMut(&K, V, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two maps by using a function\n to decide what to do if a key occurs in both. The function\n receives the key as well as both values.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two maps by using a function","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":183989,"byte_end":184064,"line_start":1226,"line_end":1226,"column_start":5,"column_end":80}},{"value":"/ to decide what to do if a key occurs in both. The function","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":184069,"byte_end":184131,"line_start":1227,"line_end":1227,"column_start":5,"column_end":67}},{"value":"/ receives the key as well as both values.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":184136,"byte_end":184180,"line_start":1228,"line_end":1228,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":184185,"byte_end":184188,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":184193,"byte_end":184213,"line_start":1230,"line_end":1230,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":184218,"byte_end":184221,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":184226,"byte_end":184240,"line_start":1232,"line_end":1232,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":184245,"byte_end":184248,"line_start":1233,"line_end":1233,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":184253,"byte_end":184260,"line_start":1234,"line_end":1234,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":184265,"byte_end":184300,"line_start":1235,"line_end":1235,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":184305,"byte_end":184334,"line_start":1236,"line_end":1236,"column_start":5,"column_end":34}},{"value":"/ let map1 = ordmap!{1 => 1, 3 => 4};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":184339,"byte_end":184378,"line_start":1237,"line_end":1237,"column_start":5,"column_end":44}},{"value":"/ let map2 = ordmap!{2 => 2, 3 => 5};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":184383,"byte_end":184422,"line_start":1238,"line_end":1238,"column_start":5,"column_end":44}},{"value":"/ let expected = ordmap!{1 => 1, 2 => 2, 3 => 9};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":184427,"byte_end":184478,"line_start":1239,"line_end":1239,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(expected, map1.symmetric_difference_with_key(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":184483,"byte_end":184543,"line_start":1240,"line_end":1240,"column_start":5,"column_end":65}},{"value":"/     map2,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":184548,"byte_end":184561,"line_start":1241,"line_end":1241,"column_start":5,"column_end":18}},{"value":"/     |key, left, right| Some(left + right)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":184566,"byte_end":184611,"line_start":1242,"line_end":1242,"column_start":5,"column_end":50}},{"value":"/ ));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":184616,"byte_end":184623,"line_start":1243,"line_end":1243,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":184628,"byte_end":184635,"line_start":1244,"line_end":1244,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":184640,"byte_end":184651,"line_start":1245,"line_end":1245,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":185820,"byte_end":185839,"line_start":1283,"line_end":1283,"column_start":12,"column_end":31},"name":"relative_complement","qualname":"<OrdMap<K, V>>::relative_complement","value":"pub fn relative_complement(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the relative complement between two maps by discarding keys\n which occur in `other`.","sig":null,"attributes":[{"value":"/ Construct the relative complement between two maps by discarding keys","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":185280,"byte_end":185353,"line_start":1266,"line_end":1266,"column_start":5,"column_end":78}},{"value":"/ which occur in `other`.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":185358,"byte_end":185385,"line_start":1267,"line_end":1267,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":185390,"byte_end":185393,"line_start":1268,"line_end":1268,"column_start":5,"column_end":8}},{"value":"/ Time: O(m log n) where m is the size of the other map","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":185398,"byte_end":185455,"line_start":1269,"line_end":1269,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":185460,"byte_end":185463,"line_start":1270,"line_end":1270,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":185468,"byte_end":185482,"line_start":1271,"line_end":1271,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":185487,"byte_end":185490,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":185495,"byte_end":185502,"line_start":1273,"line_end":1273,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":185507,"byte_end":185542,"line_start":1274,"line_end":1274,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":185547,"byte_end":185576,"line_start":1275,"line_end":1275,"column_start":5,"column_end":34}},{"value":"/ let map1 = ordmap!{1 => 1, 3 => 4};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":185581,"byte_end":185620,"line_start":1276,"line_end":1276,"column_start":5,"column_end":44}},{"value":"/ let map2 = ordmap!{2 => 2, 3 => 5};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":185625,"byte_end":185664,"line_start":1277,"line_end":1277,"column_start":5,"column_end":44}},{"value":"/ let expected = ordmap!{1 => 1};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":185669,"byte_end":185704,"line_start":1278,"line_end":1278,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(expected, map1.relative_complement(map2));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":185709,"byte_end":185766,"line_start":1279,"line_end":1279,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":185771,"byte_end":185778,"line_start":1280,"line_end":1280,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":185783,"byte_end":185792,"line_start":1281,"line_end":1281,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":185797,"byte_end":185808,"line_start":1282,"line_end":1282,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":186461,"byte_end":186473,"line_start":1307,"line_end":1307,"column_start":12,"column_end":24},"name":"intersection","qualname":"<OrdMap<K, V>>::intersection","value":"pub fn intersection(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the intersection of two maps, keeping the values\n from the current map.","sig":null,"attributes":[{"value":"/ Construct the intersection of two maps, keeping the values","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":185978,"byte_end":186040,"line_start":1290,"line_end":1290,"column_start":5,"column_end":67}},{"value":"/ from the current map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":186045,"byte_end":186070,"line_start":1291,"line_end":1291,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":186075,"byte_end":186078,"line_start":1292,"line_end":1292,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":186083,"byte_end":186103,"line_start":1293,"line_end":1293,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":186108,"byte_end":186111,"line_start":1294,"line_end":1294,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":186116,"byte_end":186130,"line_start":1295,"line_end":1295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":186135,"byte_end":186138,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":186143,"byte_end":186150,"line_start":1297,"line_end":1297,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":186155,"byte_end":186190,"line_start":1298,"line_end":1298,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":186195,"byte_end":186224,"line_start":1299,"line_end":1299,"column_start":5,"column_end":34}},{"value":"/ let map1 = ordmap!{1 => 1, 2 => 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":186229,"byte_end":186268,"line_start":1300,"line_end":1300,"column_start":5,"column_end":44}},{"value":"/ let map2 = ordmap!{2 => 3, 3 => 4};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":186273,"byte_end":186312,"line_start":1301,"line_end":1301,"column_start":5,"column_end":44}},{"value":"/ let expected = ordmap!{2 => 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":186317,"byte_end":186352,"line_start":1302,"line_end":1302,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(expected, map1.intersection(map2));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":186357,"byte_end":186407,"line_start":1303,"line_end":1303,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":186412,"byte_end":186419,"line_start":1304,"line_end":1304,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":186424,"byte_end":186433,"line_start":1305,"line_end":1305,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":186438,"byte_end":186449,"line_start":1306,"line_end":1306,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":186799,"byte_end":186816,"line_start":1318,"line_end":1318,"column_start":12,"column_end":29},"name":"intersection_with","qualname":"<OrdMap<K, V>>::intersection_with","value":"pub fn intersection_with<B, C, F>(Self, OrdMap<K, B>, F) -> OrdMap<K, C> where\nB: Clone, C: Clone, F: FnMut(V, B) -> C","parent":null,"children":[],"decl_id":null,"docs":" Construct the intersection of two maps, calling a function\n with both values for each key and using the result as the\n value for the key.","sig":null,"attributes":[{"value":"/ Construct the intersection of two maps, calling a function","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":186569,"byte_end":186631,"line_start":1311,"line_end":1311,"column_start":5,"column_end":67}},{"value":"/ with both values for each key and using the result as the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":186636,"byte_end":186697,"line_start":1312,"line_end":1312,"column_start":5,"column_end":66}},{"value":"/ value for the key.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":186702,"byte_end":186724,"line_start":1313,"line_end":1313,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":186729,"byte_end":186732,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":186737,"byte_end":186757,"line_start":1315,"line_end":1315,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":186762,"byte_end":186771,"line_start":1316,"line_end":1316,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":186776,"byte_end":186787,"line_start":1317,"line_end":1317,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":187656,"byte_end":187677,"line_start":1347,"line_end":1347,"column_start":12,"column_end":33},"name":"intersection_with_key","qualname":"<OrdMap<K, V>>::intersection_with_key","value":"pub fn intersection_with_key<B, C, F>(Self, OrdMap<K, B>, F) -> OrdMap<K, C>\nwhere B: Clone, C: Clone, F: FnMut(&K, V, B) -> C","parent":null,"children":[],"decl_id":null,"docs":" Construct the intersection of two maps, calling a function\n with the key and both values for each key and using the result\n as the value for the key.","sig":null,"attributes":[{"value":"/ Construct the intersection of two maps, calling a function","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":187036,"byte_end":187098,"line_start":1327,"line_end":1327,"column_start":5,"column_end":67}},{"value":"/ with the key and both values for each key and using the result","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":187103,"byte_end":187169,"line_start":1328,"line_end":1328,"column_start":5,"column_end":71}},{"value":"/ as the value for the key.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":187174,"byte_end":187203,"line_start":1329,"line_end":1329,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":187208,"byte_end":187211,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":187216,"byte_end":187236,"line_start":1331,"line_end":1331,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":187241,"byte_end":187244,"line_start":1332,"line_end":1332,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":187249,"byte_end":187263,"line_start":1333,"line_end":1333,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":187268,"byte_end":187271,"line_start":1334,"line_end":1334,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":187276,"byte_end":187283,"line_start":1335,"line_end":1335,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":187288,"byte_end":187323,"line_start":1336,"line_end":1336,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":187328,"byte_end":187357,"line_start":1337,"line_end":1337,"column_start":5,"column_end":34}},{"value":"/ let map1 = ordmap!{1 => 1, 2 => 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":187362,"byte_end":187401,"line_start":1338,"line_end":1338,"column_start":5,"column_end":44}},{"value":"/ let map2 = ordmap!{2 => 3, 3 => 4};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":187406,"byte_end":187445,"line_start":1339,"line_end":1339,"column_start":5,"column_end":44}},{"value":"/ let expected = ordmap!{2 => 5};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":187450,"byte_end":187485,"line_start":1340,"line_end":1340,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(expected, map1.intersection_with_key(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":187490,"byte_end":187542,"line_start":1341,"line_end":1341,"column_start":5,"column_end":57}},{"value":"/     map2,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":187547,"byte_end":187560,"line_start":1342,"line_end":1342,"column_start":5,"column_end":18}},{"value":"/     |key, left, right| left + right","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":187565,"byte_end":187604,"line_start":1343,"line_end":1343,"column_start":5,"column_end":44}},{"value":"/ ));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":187609,"byte_end":187616,"line_start":1344,"line_end":1344,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":187621,"byte_end":187628,"line_start":1345,"line_end":1345,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":187633,"byte_end":187644,"line_start":1346,"line_end":1346,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":188461,"byte_end":188466,"line_start":1372,"line_end":1372,"column_start":12,"column_end":17},"name":"split","qualname":"<OrdMap<K, V>>::split","value":"pub fn split<BK>(&Self, &BK) -> (Self, Self) where BK: Ord + ?Sized,\nK: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Split a map into two, with the left hand map containing keys\n which are smaller than `split`, and the right hand map\n containing keys which are larger than `split`.","sig":null,"attributes":[{"value":"/ Split a map into two, with the left hand map containing keys","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":188201,"byte_end":188265,"line_start":1366,"line_end":1366,"column_start":5,"column_end":69}},{"value":"/ which are smaller than `split`, and the right hand map","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":188270,"byte_end":188328,"line_start":1367,"line_end":1367,"column_start":5,"column_end":63}},{"value":"/ containing keys which are larger than `split`.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":188333,"byte_end":188383,"line_start":1368,"line_end":1368,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":188388,"byte_end":188391,"line_start":1369,"line_end":1369,"column_start":5,"column_end":8}},{"value":"/ The `split` mapping is discarded.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":188396,"byte_end":188433,"line_start":1370,"line_end":1370,"column_start":5,"column_end":42}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":188438,"byte_end":188449,"line_start":1371,"line_end":1371,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":188925,"byte_end":188937,"line_start":1387,"line_end":1387,"column_start":12,"column_end":24},"name":"split_lookup","qualname":"<OrdMap<K, V>>::split_lookup","value":"pub fn split_lookup<BK>(&Self, &BK) -> (Self, Option<V>, Self) where BK: Ord +\n?Sized, K: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Split a map into two, with the left hand map containing keys\n which are smaller than `split`, and the right hand map\n containing keys which are larger than `split`.","sig":null,"attributes":[{"value":"/ Split a map into two, with the left hand map containing keys","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":188647,"byte_end":188711,"line_start":1381,"line_end":1381,"column_start":5,"column_end":69}},{"value":"/ which are smaller than `split`, and the right hand map","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":188716,"byte_end":188774,"line_start":1382,"line_end":1382,"column_start":5,"column_end":63}},{"value":"/ containing keys which are larger than `split`.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":188779,"byte_end":188829,"line_start":1383,"line_end":1383,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":188834,"byte_end":188837,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/ Returns both the two maps and the value of `split`.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":188842,"byte_end":188897,"line_start":1385,"line_end":1385,"column_start":5,"column_end":60}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":188902,"byte_end":188913,"line_start":1386,"line_end":1386,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":189626,"byte_end":189630,"line_start":1406,"line_end":1406,"column_start":12,"column_end":16},"name":"take","qualname":"<OrdMap<K, V>>::take","value":"pub fn take(&Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a map with only the `n` smallest keys from a given\n map.\n","sig":null,"attributes":[{"value":"/ Construct a map with only the `n` smallest keys from a given","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":189521,"byte_end":189585,"line_start":1403,"line_end":1403,"column_start":5,"column_end":69}},{"value":"/ map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":189590,"byte_end":189598,"line_start":1404,"line_end":1404,"column_start":5,"column_end":13}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":189603,"byte_end":189614,"line_start":1405,"line_end":1405,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":189891,"byte_end":189895,"line_start":1416,"line_end":1416,"column_start":12,"column_end":16},"name":"skip","qualname":"<OrdMap<K, V>>::skip","value":"pub fn skip(&Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a map with the `n` smallest keys removed from a\n given map.\n","sig":null,"attributes":[{"value":"/ Construct a map with the `n` smallest keys removed from a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":189783,"byte_end":189844,"line_start":1413,"line_end":1413,"column_start":5,"column_end":66}},{"value":"/ given map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":189849,"byte_end":189863,"line_start":1414,"line_end":1414,"column_start":5,"column_end":19}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":189868,"byte_end":189879,"line_start":1415,"line_end":1415,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":190172,"byte_end":190183,"line_start":1426,"line_end":1426,"column_start":12,"column_end":23},"name":"without_min","qualname":"<OrdMap<K, V>>::without_min","value":"pub fn without_min(&Self) -> (Option<V>, Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove the smallest key from a map, and return its value as\n well as the updated map.\n","sig":null,"attributes":[{"value":"/ Remove the smallest key from a map, and return its value as","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":190048,"byte_end":190111,"line_start":1423,"line_end":1423,"column_start":5,"column_end":68}},{"value":"/ well as the updated map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":190116,"byte_end":190144,"line_start":1424,"line_end":1424,"column_start":5,"column_end":33}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":190149,"byte_end":190160,"line_start":1425,"line_end":1425,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":190450,"byte_end":190470,"line_start":1434,"line_end":1434,"column_start":12,"column_end":32},"name":"without_min_with_key","qualname":"<OrdMap<K, V>>::without_min_with_key","value":"pub fn without_min_with_key(&Self) -> (Option<(K, V)>, Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove the smallest key from a map, and return that key, its\n value as well as the updated map.\n","sig":null,"attributes":[{"value":"/ Remove the smallest key from a map, and return that key, its","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":190316,"byte_end":190380,"line_start":1431,"line_end":1431,"column_start":5,"column_end":69}},{"value":"/ value as well as the updated map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":190385,"byte_end":190422,"line_start":1432,"line_end":1432,"column_start":5,"column_end":42}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":190427,"byte_end":190438,"line_start":1433,"line_end":1433,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":190886,"byte_end":190897,"line_start":1447,"line_end":1447,"column_start":12,"column_end":23},"name":"without_max","qualname":"<OrdMap<K, V>>::without_max","value":"pub fn without_max(&Self) -> (Option<V>, Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove the largest key from a map, and return its value as\n well as the updated map.\n","sig":null,"attributes":[{"value":"/ Remove the largest key from a map, and return its value as","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":190763,"byte_end":190825,"line_start":1444,"line_end":1444,"column_start":5,"column_end":67}},{"value":"/ well as the updated map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":190830,"byte_end":190858,"line_start":1445,"line_end":1445,"column_start":5,"column_end":33}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":190863,"byte_end":190874,"line_start":1446,"line_end":1446,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":191163,"byte_end":191183,"line_start":1455,"line_end":1455,"column_start":12,"column_end":32},"name":"without_max_with_key","qualname":"<OrdMap<K, V>>::without_max_with_key","value":"pub fn without_max_with_key(&Self) -> (Option<(K, V)>, Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove the largest key from a map, and return that key, its\n value as well as the updated map.\n","sig":null,"attributes":[{"value":"/ Remove the largest key from a map, and return that key, its","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":191030,"byte_end":191093,"line_start":1452,"line_end":1452,"column_start":5,"column_end":68}},{"value":"/ value as well as the updated map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":191098,"byte_end":191135,"line_start":1453,"line_end":1453,"column_start":5,"column_end":42}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":191140,"byte_end":191151,"line_start":1454,"line_end":1454,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":191652,"byte_end":191657,"line_start":1471,"line_end":1471,"column_start":12,"column_end":17},"name":"entry","qualname":"<OrdMap<K, V>>::entry","value":"pub fn entry(&mut Self, K) -> Entry<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Entry`][Entry] for a key in the map for in-place manipulation.","sig":null,"attributes":[{"value":"/ Get the [`Entry`][Entry] for a key in the map for in-place manipulation.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":191476,"byte_end":191552,"line_start":1465,"line_end":1465,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":191557,"byte_end":191560,"line_start":1466,"line_end":1466,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":191565,"byte_end":191583,"line_start":1467,"line_end":1467,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":191588,"byte_end":191591,"line_start":1468,"line_end":1468,"column_start":5,"column_end":8}},{"value":"/ [Entry]: enum.Entry.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":191596,"byte_end":191624,"line_start":1469,"line_end":1469,"column_start":5,"column_end":33}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":191629,"byte_end":191640,"line_start":1470,"line_end":1470,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1014},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":192065,"byte_end":192073,"line_start":1489,"line_end":1489,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::ord::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":1010},"children":[],"decl_id":null,"docs":" An entry which exists in the map.\n","sig":null,"attributes":[{"value":"/ An entry which exists in the map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":192023,"byte_end":192060,"line_start":1488,"line_end":1488,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1017},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":192153,"byte_end":192159,"line_start":1491,"line_end":1491,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::ord::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":1010},"children":[],"decl_id":null,"docs":" An entry which doesn't exist in the map.\n","sig":null,"attributes":[{"value":"/ An entry which doesn't exist in the map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":192104,"byte_end":192148,"line_start":1490,"line_end":1490,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":1010},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":191961,"byte_end":191966,"line_start":1483,"line_end":1483,"column_start":10,"column_end":15},"name":"Entry","qualname":"::ord::map::Entry","value":"pub enum Entry<'a, K, V> where K: Ord + Clone, V: Clone {\n    Occupied(OccupiedEntry),\n    Vacant(VacantEntry),\n}","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1017}],"decl_id":null,"docs":" A handle for a key and its associated value.\n","sig":null,"attributes":[{"value":"/ A handle for a key and its associated value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":191903,"byte_end":191951,"line_start":1482,"line_end":1482,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":192397,"byte_end":192406,"line_start":1501,"line_end":1501,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Insert the default value provided if there was no value\n already, and return a mutable reference to the value.\n","sig":null,"attributes":[{"value":"/ Insert the default value provided if there was no value","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":192264,"byte_end":192323,"line_start":1499,"line_end":1499,"column_start":5,"column_end":64}},{"value":"/ already, and return a mutable reference to the value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":192328,"byte_end":192385,"line_start":1500,"line_end":1500,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":192650,"byte_end":192664,"line_start":1508,"line_end":1508,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> &'a mut V where F: FnOnce() -> V","parent":null,"children":[],"decl_id":null,"docs":" Insert the default value from the provided function if there\n was no value already, and return a mutable reference to the\n value.\n","sig":null,"attributes":[{"value":"/ Insert the default value from the provided function if there","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":192491,"byte_end":192555,"line_start":1505,"line_end":1505,"column_start":5,"column_end":69}},{"value":"/ was no value already, and return a mutable reference to the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":192560,"byte_end":192623,"line_start":1506,"line_end":1506,"column_start":5,"column_end":68}},{"value":"/ value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":192628,"byte_end":192638,"line_start":1507,"line_end":1507,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":193022,"byte_end":193032,"line_start":1520,"line_end":1520,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"pub fn or_default(Self) -> &'a mut V where V: Default","parent":null,"children":[],"decl_id":null,"docs":" Insert a default value if there was no value already, and\n return a mutable reference to the value.\n","sig":null,"attributes":[{"value":"/ Insert a default value if there was no value already, and","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":192900,"byte_end":192961,"line_start":1518,"line_end":1518,"column_start":5,"column_end":66}},{"value":"/ return a mutable reference to the value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":192966,"byte_end":193010,"line_start":1519,"line_end":1519,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":193204,"byte_end":193207,"line_start":1529,"line_end":1529,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Get the key for this entry.\n","sig":null,"attributes":[{"value":"/ Get the key for this entry.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":193145,"byte_end":193176,"line_start":1527,"line_end":1527,"column_start":5,"column_end":36}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":193181,"byte_end":193192,"line_start":1528,"line_end":1528,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":193456,"byte_end":193466,"line_start":1538,"line_end":1538,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Call the provided function to modify the value if the value\n exists.\n","sig":null,"attributes":[{"value":"/ Call the provided function to modify the value if the value","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":193365,"byte_end":193428,"line_start":1536,"line_end":1536,"column_start":5,"column_end":68}},{"value":"/ exists.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":193433,"byte_end":193444,"line_start":1537,"line_end":1537,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1032},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":193767,"byte_end":193780,"line_start":1551,"line_end":1551,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::ord::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":1037}],"decl_id":null,"docs":" An entry for a mapping that already exists in the map.\n","sig":null,"attributes":[{"value":"/ An entry for a mapping that already exists in the map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":193697,"byte_end":193755,"line_start":1550,"line_end":1550,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":194033,"byte_end":194036,"line_start":1567,"line_end":1567,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Get the key for this entry.\n","sig":null,"attributes":[{"value":"/ Get the key for this entry.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":193974,"byte_end":194005,"line_start":1565,"line_end":1565,"column_start":5,"column_end":36}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":194010,"byte_end":194021,"line_start":1566,"line_end":1566,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":194159,"byte_end":194171,"line_start":1572,"line_end":1572,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove this entry from the map and return the removed mapping.\n","sig":null,"attributes":[{"value":"/ Remove this entry from the map and return the removed mapping.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":194081,"byte_end":194147,"line_start":1571,"line_end":1571,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":194390,"byte_end":194393,"line_start":1580,"line_end":1580,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Get the current value.\n","sig":null,"attributes":[{"value":"/ Get the current value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":194336,"byte_end":194362,"line_start":1578,"line_end":1578,"column_start":5,"column_end":31}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":194367,"byte_end":194378,"line_start":1579,"line_end":1579,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":194538,"byte_end":194545,"line_start":1586,"line_end":1586,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the current value.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the current value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":194461,"byte_end":194510,"line_start":1584,"line_end":1584,"column_start":5,"column_end":54}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":194515,"byte_end":194526,"line_start":1585,"line_end":1585,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":194701,"byte_end":194709,"line_start":1592,"line_end":1592,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Convert this entry into a mutable reference.\n","sig":null,"attributes":[{"value":"/ Convert this entry into a mutable reference.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":194625,"byte_end":194673,"line_start":1590,"line_end":1590,"column_start":5,"column_end":53}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":194678,"byte_end":194689,"line_start":1591,"line_end":1591,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":194831,"byte_end":194837,"line_start":1597,"line_end":1597,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Overwrite the current value.\n","sig":null,"attributes":[{"value":"/ Overwrite the current value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":194787,"byte_end":194819,"line_start":1596,"line_end":1596,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":194997,"byte_end":195003,"line_start":1602,"line_end":1602,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove this entry from the map and return the removed value.\n","sig":null,"attributes":[{"value":"/ Remove this entry from the map and return the removed value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":194921,"byte_end":194985,"line_start":1601,"line_end":1601,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1049},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":195134,"byte_end":195145,"line_start":1608,"line_end":1608,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::ord::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1054}],"decl_id":null,"docs":" An entry for a mapping that does not already exist in the map.\n","sig":null,"attributes":[{"value":"/ An entry for a mapping that does not already exist in the map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":195056,"byte_end":195122,"line_start":1607,"line_end":1607,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":195396,"byte_end":195399,"line_start":1624,"line_end":1624,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Get the key for this entry.\n","sig":null,"attributes":[{"value":"/ Get the key for this entry.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":195337,"byte_end":195368,"line_start":1622,"line_end":1622,"column_start":5,"column_end":36}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":195373,"byte_end":195384,"line_start":1623,"line_end":1623,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":195508,"byte_end":195516,"line_start":1630,"line_end":1630,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"pub fn into_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Convert this entry into its key.\n","sig":null,"attributes":[{"value":"/ Convert this entry into its key.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":195444,"byte_end":195480,"line_start":1628,"line_end":1628,"column_start":5,"column_end":41}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":195485,"byte_end":195496,"line_start":1629,"line_end":1629,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":195605,"byte_end":195611,"line_start":1635,"line_end":1635,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Insert a value into this entry.\n","sig":null,"attributes":[{"value":"/ Insert a value into this entry.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":195558,"byte_end":195593,"line_start":1634,"line_end":1634,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1131},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":199636,"byte_end":199640,"line_start":1834,"line_end":1834,"column_start":12,"column_end":16},"name":"Iter","qualname":"::ord::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1135}],"decl_id":null,"docs":" An iterator over the key/value pairs of a map.\n","sig":null,"attributes":[{"value":"/ An iterator over the key/value pairs of a map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":199574,"byte_end":199624,"line_start":1833,"line_end":1833,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1154},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":200366,"byte_end":200374,"line_start":1865,"line_end":1865,"column_start":12,"column_end":20},"name":"DiffIter","qualname":"::ord::map::DiffIter","value":"DiffIter {  }","parent":null,"children":[{"krate":0,"index":1158}],"decl_id":null,"docs":" An iterator over the differences between two maps.\n","sig":null,"attributes":[{"value":"/ An iterator over the differences between two maps.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":200300,"byte_end":200354,"line_start":1864,"line_end":1864,"column_start":1,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3629},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":200600,"byte_end":200603,"line_start":1873,"line_end":1873,"column_start":5,"column_end":8},"name":"Add","qualname":"::ord::map::DiffItem::Add","value":"DiffItem::Add(&'a K, &'a V)","parent":{"krate":0,"index":3625},"children":[],"decl_id":null,"docs":" This value has been added to the new map.\n","sig":null,"attributes":[{"value":"/ This value has been added to the new map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":200550,"byte_end":200595,"line_start":1872,"line_end":1872,"column_start":5,"column_end":50}}]},{"kind":"StructVariant","id":{"krate":0,"index":3633},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":200681,"byte_end":200687,"line_start":1875,"line_end":1875,"column_start":5,"column_end":11},"name":"Update","qualname":"::ord::map::DiffItem::Update","value":"DiffItem::Update { old, new }","parent":{"krate":0,"index":3625},"children":[],"decl_id":null,"docs":" This value has been changed between the two maps.\n","sig":null,"attributes":[{"value":"/ This value has been changed between the two maps.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":200623,"byte_end":200676,"line_start":1874,"line_end":1874,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3636},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":200867,"byte_end":200873,"line_start":1882,"line_end":1882,"column_start":5,"column_end":11},"name":"Remove","qualname":"::ord::map::DiffItem::Remove","value":"DiffItem::Remove(&'a K, &'a V)","parent":{"krate":0,"index":3625},"children":[],"decl_id":null,"docs":" This value has been removed from the new map.\n","sig":null,"attributes":[{"value":"/ This value has been removed from the new map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":200813,"byte_end":200862,"line_start":1881,"line_end":1881,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":3625},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":200525,"byte_end":200533,"line_start":1871,"line_end":1871,"column_start":10,"column_end":18},"name":"DiffItem","qualname":"::ord::map::DiffItem","value":"pub enum DiffItem<'a, K, V> {\n    Add(&'a K, &'a V),\n    Update {\n        old: (&'a K, &'a V),\n        new: (&'a K, &'a V),\n    },\n    Remove(&'a K, &'a V),\n}","parent":null,"children":[{"krate":0,"index":3629},{"krate":0,"index":3633},{"krate":0,"index":3636}],"decl_id":null,"docs":" A description of a difference between two ordered maps.\n","sig":null,"attributes":[{"value":"/ A description of a difference between two ordered maps.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":200424,"byte_end":200483,"line_start":1869,"line_end":1869,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1166},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":201545,"byte_end":201549,"line_start":1907,"line_end":1907,"column_start":12,"column_end":16},"name":"Keys","qualname":"::ord::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":1170}],"decl_id":null,"docs":" An iterator ove the keys of a map.\n","sig":null,"attributes":[{"value":"/ An iterator ove the keys of a map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":201495,"byte_end":201533,"line_start":1906,"line_end":1906,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1188},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":202278,"byte_end":202284,"line_start":1948,"line_end":1948,"column_start":12,"column_end":18},"name":"Values","qualname":"::ord::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":1192}],"decl_id":null,"docs":" An iterator over the values of a map.\n","sig":null,"attributes":[{"value":"/ An iterator over the values of a map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":202225,"byte_end":202266,"line_start":1947,"line_end":1947,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":1314},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"set","qualname":"::ord::set","value":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","parent":null,"children":[{"krate":0,"index":1315},{"krate":0,"index":1318},{"krate":0,"index":1321},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1331},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1341},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1348},{"krate":0,"index":1351},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1358},{"krate":0,"index":1361},{"krate":0,"index":1364},{"krate":0,"index":1367},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1374},{"krate":0,"index":1377},{"krate":0,"index":1380},{"krate":0,"index":1383},{"krate":0,"index":1386},{"krate":0,"index":1389},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1396},{"krate":0,"index":1399},{"krate":0,"index":1402},{"krate":0,"index":3664},{"krate":0,"index":3668},{"krate":0,"index":3671},{"krate":0,"index":3673},{"krate":0,"index":3675},{"krate":0,"index":3679},{"krate":0,"index":3681},{"krate":0,"index":3684},{"krate":0,"index":3687},{"krate":0,"index":3690},{"krate":0,"index":1403},{"krate":0,"index":1407},{"krate":0,"index":3693},{"krate":0,"index":3697},{"krate":0,"index":3702},{"krate":0,"index":3705},{"krate":0,"index":1419},{"krate":0,"index":1424},{"krate":0,"index":1432},{"krate":0,"index":1453},{"krate":0,"index":1478},{"krate":0,"index":1481},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":1489},{"krate":0,"index":1492},{"krate":0,"index":1496},{"krate":0,"index":1499},{"krate":0,"index":1503},{"krate":0,"index":1508},{"krate":0,"index":1512},{"krate":0,"index":1517},{"krate":0,"index":1522},{"krate":0,"index":1527},{"krate":0,"index":1530},{"krate":0,"index":1534},{"krate":0,"index":1540},{"krate":0,"index":1544},{"krate":0,"index":1547},{"krate":0,"index":1551},{"krate":0,"index":1557},{"krate":0,"index":1561},{"krate":0,"index":1564},{"krate":0,"index":1569},{"krate":0,"index":1573},{"krate":0,"index":1579},{"krate":0,"index":1584},{"krate":0,"index":1590},{"krate":0,"index":1595},{"krate":0,"index":1602},{"krate":0,"index":1606},{"krate":0,"index":1609},{"krate":0,"index":1613},{"krate":0,"index":1616},{"krate":0,"index":1620},{"krate":0,"index":1623},{"krate":0,"index":1627},{"krate":0,"index":1631}],"decl_id":null,"docs":" An ordered set.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/mod.rs","byte_start":148515,"byte_end":148527,"line_start":7,"line_end":7,"column_start":1,"column_end":13}},{"value":"/ An ordered set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":222585,"byte_end":222604,"line_start":5,"line_end":5,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":222605,"byte_end":222608,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ An immutable ordered set implemented as a [B-tree] [1].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":222609,"byte_end":222668,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":222669,"byte_end":222672,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Most operations on this type of set are O(log n). A","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":222673,"byte_end":222728,"line_start":9,"line_end":9,"column_start":1,"column_end":56}},{"value":"/ [`HashSet`][hashset::HashSet] is usually a better choice for","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":222729,"byte_end":222793,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/ performance, but the `OrdSet` has the advantage of only requiring","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":222794,"byte_end":222863,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ an [`Ord`][std::cmp::Ord] constraint on its values, and of being","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":222864,"byte_end":222932,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/ ordered, so values always come out from lowest to highest, where a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":222933,"byte_end":223003,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ [`HashSet`][hashset::HashSet] has no guaranteed ordering.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":223004,"byte_end":223065,"line_start":14,"line_end":14,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":223066,"byte_end":223069,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/B-tree","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":223070,"byte_end":223115,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ [hashset::HashSet]: ../hashset/struct.HashSet.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":223116,"byte_end":223170,"line_start":17,"line_end":17,"column_start":1,"column_end":55}},{"value":"/ [std::cmp::Ord]: https://doc.rust-lang.org/std/cmp/trait.Ord.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":223171,"byte_end":223240,"line_start":18,"line_end":18,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":3693},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":226649,"byte_end":226659,"line_start":159,"line_end":159,"column_start":11,"column_end":21},"name":"OrdSetPool","qualname":"::ord::set::OrdSetPool","value":"","parent":null,"children":[],"decl_id":null,"docs":" A memory pool for the appropriate node type.\n","sig":null,"attributes":[{"value":"/ A memory pool for the appropriate node type.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/util.rs","byte_start":147360,"byte_end":147408,"line_start":110,"line_end":110,"column_start":9,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1419},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":227349,"byte_end":227355,"line_start":175,"line_end":175,"column_start":12,"column_end":18},"name":"OrdSet","qualname":"::ord::set::OrdSet","value":"OrdSet {  }","parent":null,"children":[{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423}],"decl_id":null,"docs":" An ordered set.","sig":null,"attributes":[{"value":"/ An ordered set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":226682,"byte_end":226701,"line_start":161,"line_end":161,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":226702,"byte_end":226705,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ An immutable ordered set implemented as a [B-tree] [1].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":226706,"byte_end":226765,"line_start":163,"line_end":163,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":226766,"byte_end":226769,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Most operations on this type of set are O(log n). A","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":226770,"byte_end":226825,"line_start":165,"line_end":165,"column_start":1,"column_end":56}},{"value":"/ [`HashSet`][hashset::HashSet] is usually a better choice for","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":226826,"byte_end":226890,"line_start":166,"line_end":166,"column_start":1,"column_end":65}},{"value":"/ performance, but the `OrdSet` has the advantage of only requiring","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":226891,"byte_end":226960,"line_start":167,"line_end":167,"column_start":1,"column_end":70}},{"value":"/ an [`Ord`][std::cmp::Ord] constraint on its values, and of being","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":226961,"byte_end":227029,"line_start":168,"line_end":168,"column_start":1,"column_end":69}},{"value":"/ ordered, so values always come out from lowest to highest, where a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":227030,"byte_end":227100,"line_start":169,"line_end":169,"column_start":1,"column_end":71}},{"value":"/ [`HashSet`][hashset::HashSet] has no guaranteed ordering.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":227101,"byte_end":227162,"line_start":170,"line_end":170,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":227163,"byte_end":227166,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/B-tree","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":227167,"byte_end":227212,"line_start":172,"line_end":172,"column_start":1,"column_end":46}},{"value":"/ [hashset::HashSet]: ../hashset/struct.HashSet.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":227213,"byte_end":227267,"line_start":173,"line_end":173,"column_start":1,"column_end":55}},{"value":"/ [std::cmp::Ord]: https://doc.rust-lang.org/std/cmp/trait.Ord.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":227268,"byte_end":227337,"line_start":174,"line_end":174,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":227520,"byte_end":227523,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"new","qualname":"<OrdSet<A>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty set.\n","sig":null,"attributes":[{"value":"/ Construct an empty set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":227465,"byte_end":227492,"line_start":182,"line_end":182,"column_start":5,"column_end":32}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":227497,"byte_end":227508,"line_start":183,"line_end":183,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228318,"byte_end":228322,"line_start":218,"line_end":218,"column_start":12,"column_end":16},"name":"unit","qualname":"<OrdSet<A>>::unit","value":"pub fn unit(A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a set with a single value.","sig":null,"attributes":[{"value":"/ Construct a set with a single value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228029,"byte_end":228069,"line_start":206,"line_end":206,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228074,"byte_end":228077,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228082,"byte_end":228096,"line_start":208,"line_end":208,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228101,"byte_end":228104,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228109,"byte_end":228116,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228121,"byte_end":228156,"line_start":211,"line_end":211,"column_start":5,"column_end":40}},{"value":"/ # use im::ordset::OrdSet;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228161,"byte_end":228190,"line_start":212,"line_end":212,"column_start":5,"column_end":34}},{"value":"/ let set = OrdSet::unit(123);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228195,"byte_end":228227,"line_start":213,"line_end":213,"column_start":5,"column_end":37}},{"value":"/ assert!(set.contains(&123));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228232,"byte_end":228264,"line_start":214,"line_end":214,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228269,"byte_end":228276,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228281,"byte_end":228290,"line_start":216,"line_end":216,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228295,"byte_end":228306,"line_start":217,"line_end":217,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1428},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228911,"byte_end":228919,"line_start":246,"line_end":246,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<OrdSet<A>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether a set is empty.","sig":null,"attributes":[{"value":"/ Test whether a set is empty.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228540,"byte_end":228572,"line_start":228,"line_end":228,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228577,"byte_end":228580,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228585,"byte_end":228599,"line_start":230,"line_end":230,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228604,"byte_end":228607,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228612,"byte_end":228626,"line_start":232,"line_end":232,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228631,"byte_end":228634,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228639,"byte_end":228646,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228651,"byte_end":228686,"line_start":235,"line_end":235,"column_start":5,"column_end":40}},{"value":"/ # use im::ordset::OrdSet;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228691,"byte_end":228720,"line_start":236,"line_end":236,"column_start":5,"column_end":34}},{"value":"/ assert!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228725,"byte_end":228737,"line_start":237,"line_end":237,"column_start":5,"column_end":17}},{"value":"/   !ordset![1, 2, 3].is_empty()","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228742,"byte_end":228776,"line_start":238,"line_end":238,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228781,"byte_end":228787,"line_start":239,"line_end":239,"column_start":5,"column_end":11}},{"value":"/ assert!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228792,"byte_end":228804,"line_start":240,"line_end":240,"column_start":5,"column_end":17}},{"value":"/   OrdSet::<i32>::new().is_empty()","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228809,"byte_end":228846,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228851,"byte_end":228857,"line_start":242,"line_end":242,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228862,"byte_end":228869,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228874,"byte_end":228883,"line_start":244,"line_end":244,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228888,"byte_end":228899,"line_start":245,"line_end":245,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":229247,"byte_end":229250,"line_start":263,"line_end":263,"column_start":12,"column_end":15},"name":"len","qualname":"<OrdSet<A>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the size of a set.","sig":null,"attributes":[{"value":"/ Get the size of a set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":228972,"byte_end":228998,"line_start":250,"line_end":250,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":229003,"byte_end":229006,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":229011,"byte_end":229025,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":229030,"byte_end":229033,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":229038,"byte_end":229052,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":229057,"byte_end":229060,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":229065,"byte_end":229072,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":229077,"byte_end":229112,"line_start":257,"line_end":257,"column_start":5,"column_end":40}},{"value":"/ # use im::ordset::OrdSet;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":229117,"byte_end":229146,"line_start":258,"line_end":258,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(3, ordset![1, 2, 3].len());","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":229151,"byte_end":229193,"line_start":259,"line_end":259,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":229198,"byte_end":229205,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":229210,"byte_end":229219,"line_start":261,"line_end":261,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":229224,"byte_end":229235,"line_start":262,"line_end":262,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":229674,"byte_end":229680,"line_start":276,"line_end":276,"column_start":12,"column_end":18},"name":"ptr_eq","qualname":"<OrdSet<A>>::ptr_eq","value":"pub fn ptr_eq(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether two sets refer to the same content in memory.","sig":null,"attributes":[{"value":"/ Test whether two sets refer to the same content in memory.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":229298,"byte_end":229360,"line_start":267,"line_end":267,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":229365,"byte_end":229368,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This is true if the two sides are references to the same set,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":229373,"byte_end":229438,"line_start":269,"line_end":269,"column_start":5,"column_end":70}},{"value":"/ or if the two sets refer to the same root node.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":229443,"byte_end":229494,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":229499,"byte_end":229502,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This would return true if you're comparing a set to itself, or","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":229507,"byte_end":229573,"line_start":272,"line_end":272,"column_start":5,"column_end":71}},{"value":"/ if you're comparing a set to a fresh clone of itself.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":229578,"byte_end":229635,"line_start":273,"line_end":273,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":229640,"byte_end":229643,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":229648,"byte_end":229662,"line_start":275,"line_end":275,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230512,"byte_end":230517,"line_start":305,"line_end":305,"column_start":12,"column_end":17},"name":"clear","qualname":"<OrdSet<A>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Discard all elements from the set.","sig":null,"attributes":[{"value":"/ Discard all elements from the set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230096,"byte_end":230134,"line_start":289,"line_end":289,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230139,"byte_end":230142,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This leaves you with an empty set, and all elements that","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230147,"byte_end":230207,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/ were previously inside it are dropped.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230212,"byte_end":230254,"line_start":292,"line_end":292,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230259,"byte_end":230262,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230267,"byte_end":230281,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230286,"byte_end":230289,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230294,"byte_end":230308,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230313,"byte_end":230316,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230321,"byte_end":230328,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230333,"byte_end":230368,"line_start":299,"line_end":299,"column_start":5,"column_end":40}},{"value":"/ # use im::OrdSet;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230373,"byte_end":230394,"line_start":300,"line_end":300,"column_start":5,"column_end":26}},{"value":"/ let mut set = ordset![1, 2, 3];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230399,"byte_end":230434,"line_start":301,"line_end":301,"column_start":5,"column_end":40}},{"value":"/ set.clear();","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230439,"byte_end":230455,"line_start":302,"line_end":302,"column_start":5,"column_end":21}},{"value":"/ assert!(set.is_empty());","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230460,"byte_end":230488,"line_start":303,"line_end":303,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230493,"byte_end":230500,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1434},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230853,"byte_end":230860,"line_start":323,"line_end":323,"column_start":12,"column_end":19},"name":"get_min","qualname":"<OrdSet<A>>::get_min","value":"pub fn get_min(&Self) -> Option<&A>","parent":null,"children":[],"decl_id":null,"docs":" Get the smallest value in a set.","sig":null,"attributes":[{"value":"/ Get the smallest value in a set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230705,"byte_end":230741,"line_start":317,"line_end":317,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230746,"byte_end":230749,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ If the set is empty, returns `None`.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230754,"byte_end":230794,"line_start":319,"line_end":319,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230799,"byte_end":230802,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230807,"byte_end":230825,"line_start":321,"line_end":321,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230830,"byte_end":230841,"line_start":322,"line_end":322,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1435},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":231084,"byte_end":231091,"line_start":333,"line_end":333,"column_start":12,"column_end":19},"name":"get_max","qualname":"<OrdSet<A>>::get_max","value":"pub fn get_max(&Self) -> Option<&A>","parent":null,"children":[],"decl_id":null,"docs":" Get the largest value in a set.","sig":null,"attributes":[{"value":"/ Get the largest value in a set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230937,"byte_end":230972,"line_start":327,"line_end":327,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230977,"byte_end":230980,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ If the set is empty, returns `None`.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230985,"byte_end":231025,"line_start":329,"line_end":329,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":231030,"byte_end":231033,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":231038,"byte_end":231056,"line_start":331,"line_end":331,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":231061,"byte_end":231072,"line_start":332,"line_end":332,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1436},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":231248,"byte_end":231252,"line_start":339,"line_end":339,"column_start":12,"column_end":16},"name":"iter","qualname":"<OrdSet<A>>::iter","value":"pub fn iter(&Self) -> Iter<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator over the contents of the set.\n","sig":null,"attributes":[{"value":"/ Create an iterator over the contents of the set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":231168,"byte_end":231220,"line_start":337,"line_end":337,"column_start":5,"column_end":57}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":231225,"byte_end":231236,"line_start":338,"line_end":338,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1437},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":231450,"byte_end":231455,"line_start":347,"line_end":347,"column_start":12,"column_end":17},"name":"range","qualname":"<OrdSet<A>>::range","value":"pub fn range<R, BA>(&Self, R) -> RangedIter<, A> where R: RangeBounds<BA>,\nA: Borrow<BA>, BA: Ord + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator over a range inside the set.\n","sig":null,"attributes":[{"value":"/ Create an iterator over a range inside the set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":231371,"byte_end":231422,"line_start":345,"line_end":345,"column_start":5,"column_end":56}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":231427,"byte_end":231438,"line_start":346,"line_end":346,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":232290,"byte_end":232294,"line_start":370,"line_end":370,"column_start":12,"column_end":16},"name":"diff","qualname":"<OrdSet<A>>::diff","value":"pub fn diff<'a>(&'a Self, &'a Self) -> DiffIter<, A>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the differences between this set and\n another, i.e. the set of entries to add or remove to this set\n in order to make it equal to the other set.","sig":null,"attributes":[{"value":"/ Get an iterator over the differences between this set and","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":231697,"byte_end":231758,"line_start":358,"line_end":358,"column_start":5,"column_end":66}},{"value":"/ another, i.e. the set of entries to add or remove to this set","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":231763,"byte_end":231828,"line_start":359,"line_end":359,"column_start":5,"column_end":70}},{"value":"/ in order to make it equal to the other set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":231833,"byte_end":231880,"line_start":360,"line_end":360,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":231885,"byte_end":231888,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ This function will avoid visiting nodes which are shared","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":231893,"byte_end":231953,"line_start":362,"line_end":362,"column_start":5,"column_end":65}},{"value":"/ between the two sets, meaning that even very large sets can be","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":231958,"byte_end":232024,"line_start":363,"line_end":363,"column_start":5,"column_end":71}},{"value":"/ compared quickly if most of their structure is shared.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":232029,"byte_end":232087,"line_start":364,"line_end":364,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":232092,"byte_end":232095,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Time: O(n) (where n is the number of unique elements across","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":232100,"byte_end":232163,"line_start":366,"line_end":366,"column_start":5,"column_end":68}},{"value":"/ the two sets, minus the number of elements belonging to nodes","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":232168,"byte_end":232233,"line_start":367,"line_end":367,"column_start":5,"column_end":70}},{"value":"/ shared between them)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":232238,"byte_end":232262,"line_start":368,"line_end":368,"column_start":5,"column_end":29}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":232267,"byte_end":232278,"line_start":369,"line_end":369,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":232801,"byte_end":232809,"line_start":391,"line_end":391,"column_start":12,"column_end":20},"name":"contains","qualname":"<OrdSet<A>>::contains","value":"pub fn contains<BA>(&Self, &BA) -> bool where BA: Ord + ?Sized, A: Borrow<BA>","parent":null,"children":[],"decl_id":null,"docs":" Test if a value is part of a set.","sig":null,"attributes":[{"value":"/ Test if a value is part of a set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":232447,"byte_end":232484,"line_start":376,"line_end":376,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":232489,"byte_end":232492,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":232497,"byte_end":232515,"line_start":378,"line_end":378,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":232520,"byte_end":232523,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":232528,"byte_end":232542,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":232547,"byte_end":232550,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":232555,"byte_end":232562,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":232567,"byte_end":232602,"line_start":383,"line_end":383,"column_start":5,"column_end":40}},{"value":"/ # use im::ordset::OrdSet;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":232607,"byte_end":232636,"line_start":384,"line_end":384,"column_start":5,"column_end":34}},{"value":"/ let mut set = ordset!{1, 2, 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":232641,"byte_end":232676,"line_start":385,"line_end":385,"column_start":5,"column_end":40}},{"value":"/ assert!(set.contains(&1));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":232681,"byte_end":232711,"line_start":386,"line_end":386,"column_start":5,"column_end":35}},{"value":"/ assert!(!set.contains(&4));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":232716,"byte_end":232747,"line_start":387,"line_end":387,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":232752,"byte_end":232759,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":232764,"byte_end":232773,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":232778,"byte_end":232789,"line_start":390,"line_end":390,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1444},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233520,"byte_end":233528,"line_start":415,"line_end":415,"column_start":12,"column_end":20},"name":"get_prev","qualname":"<OrdSet<A>>::get_prev","value":"pub fn get_prev(&Self, &A) -> Option<&A>","parent":null,"children":[],"decl_id":null,"docs":" Get the closest smaller value in a set to a given value.","sig":null,"attributes":[{"value":"/ Get the closest smaller value in a set to a given value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":232951,"byte_end":233011,"line_start":399,"line_end":399,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233016,"byte_end":233019,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ If the set contains the given value, this is returned.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233024,"byte_end":233082,"line_start":401,"line_end":401,"column_start":5,"column_end":63}},{"value":"/ Otherwise, the closest value in the set smaller than the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233087,"byte_end":233147,"line_start":402,"line_end":402,"column_start":5,"column_end":65}},{"value":"/ given value is returned. If the smallest value in the set","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233152,"byte_end":233213,"line_start":403,"line_end":403,"column_start":5,"column_end":66}},{"value":"/ is larger than the given value, `None` is returned.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233218,"byte_end":233273,"line_start":404,"line_end":404,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233278,"byte_end":233281,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233286,"byte_end":233300,"line_start":406,"line_end":406,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233305,"byte_end":233308,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233313,"byte_end":233324,"line_start":408,"line_end":408,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233329,"byte_end":233364,"line_start":409,"line_end":409,"column_start":5,"column_end":40}},{"value":"/ # use im::OrdSet;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233369,"byte_end":233390,"line_start":410,"line_end":410,"column_start":5,"column_end":26}},{"value":"/ let set = ordset![1, 3, 5, 7, 9];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233395,"byte_end":233432,"line_start":411,"line_end":411,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(&5), set.get_prev(&6));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233437,"byte_end":233480,"line_start":412,"line_end":412,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233485,"byte_end":233492,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233497,"byte_end":233508,"line_start":414,"line_end":414,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1446},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":234188,"byte_end":234196,"line_start":435,"line_end":435,"column_start":12,"column_end":20},"name":"get_next","qualname":"<OrdSet<A>>::get_next","value":"pub fn get_next(&Self, &A) -> Option<&A>","parent":null,"children":[],"decl_id":null,"docs":" Get the closest larger value in a set to a given value.","sig":null,"attributes":[{"value":"/ Get the closest larger value in a set to a given value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233621,"byte_end":233680,"line_start":419,"line_end":419,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233685,"byte_end":233688,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ If the set contains the given value, this is returned.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233693,"byte_end":233751,"line_start":421,"line_end":421,"column_start":5,"column_end":63}},{"value":"/ Otherwise, the closest value in the set larger than the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233756,"byte_end":233815,"line_start":422,"line_end":422,"column_start":5,"column_end":64}},{"value":"/ given value is returned. If the largest value in the set","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233820,"byte_end":233880,"line_start":423,"line_end":423,"column_start":5,"column_end":65}},{"value":"/ is smaller than the given value, `None` is returned.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233885,"byte_end":233941,"line_start":424,"line_end":424,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233946,"byte_end":233949,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233954,"byte_end":233968,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233973,"byte_end":233976,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233981,"byte_end":233992,"line_start":428,"line_end":428,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":233997,"byte_end":234032,"line_start":429,"line_end":429,"column_start":5,"column_end":40}},{"value":"/ # use im::OrdSet;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":234037,"byte_end":234058,"line_start":430,"line_end":430,"column_start":5,"column_end":26}},{"value":"/ let set = ordset![1, 3, 5, 7, 9];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":234063,"byte_end":234100,"line_start":431,"line_end":431,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(&5), set.get_next(&4));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":234105,"byte_end":234148,"line_start":432,"line_end":432,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":234153,"byte_end":234160,"line_start":433,"line_end":433,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":234165,"byte_end":234176,"line_start":434,"line_end":434,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1448},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":234511,"byte_end":234520,"line_start":444,"line_end":444,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<OrdSet<A>>::is_subset","value":"pub fn is_subset<RS>(&Self, RS) -> bool where RS: Borrow<Self>","parent":null,"children":[],"decl_id":null,"docs":" Test whether a set is a subset of another set, meaning that\n all values in our set must also be in the other set.","sig":null,"attributes":[{"value":"/ Test whether a set is a subset of another set, meaning that","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":234289,"byte_end":234352,"line_start":439,"line_end":439,"column_start":5,"column_end":68}},{"value":"/ all values in our set must also be in the other set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":234357,"byte_end":234413,"line_start":440,"line_end":440,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":234418,"byte_end":234421,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log m) where m is the size of the other set","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":234426,"byte_end":234483,"line_start":442,"line_end":442,"column_start":5,"column_end":62}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":234488,"byte_end":234499,"line_start":443,"line_end":443,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":235056,"byte_end":235072,"line_start":461,"line_end":461,"column_start":12,"column_end":28},"name":"is_proper_subset","qualname":"<OrdSet<A>>::is_proper_subset","value":"pub fn is_proper_subset<RS>(&Self, RS) -> bool where RS: Borrow<Self>","parent":null,"children":[],"decl_id":null,"docs":" Test whether a set is a proper subset of another set, meaning\n that all values in our set must also be in the other set. A\n proper subset must also be smaller than the other set.","sig":null,"attributes":[{"value":"/ Test whether a set is a proper subset of another set, meaning","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":234762,"byte_end":234827,"line_start":455,"line_end":455,"column_start":5,"column_end":70}},{"value":"/ that all values in our set must also be in the other set. A","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":234832,"byte_end":234895,"line_start":456,"line_end":456,"column_start":5,"column_end":68}},{"value":"/ proper subset must also be smaller than the other set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":234900,"byte_end":234958,"line_start":457,"line_end":457,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":234963,"byte_end":234966,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log m) where m is the size of the other set","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":234971,"byte_end":235028,"line_start":459,"line_end":459,"column_start":5,"column_end":62}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":235033,"byte_end":235044,"line_start":460,"line_end":460,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":235649,"byte_end":235655,"line_start":491,"line_end":491,"column_start":12,"column_end":18},"name":"insert","qualname":"<OrdSet<A>>::insert","value":"pub fn insert(&mut Self, A) -> Option<A>","parent":null,"children":[],"decl_id":null,"docs":" Insert a value into a set.","sig":null,"attributes":[{"value":"/ Insert a value into a set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":235272,"byte_end":235302,"line_start":473,"line_end":473,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":235307,"byte_end":235310,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":235315,"byte_end":235333,"line_start":475,"line_end":475,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":235338,"byte_end":235341,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":235346,"byte_end":235360,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":235365,"byte_end":235368,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":235373,"byte_end":235380,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":235385,"byte_end":235420,"line_start":480,"line_end":480,"column_start":5,"column_end":40}},{"value":"/ # use im::ordset::OrdSet;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":235425,"byte_end":235454,"line_start":481,"line_end":481,"column_start":5,"column_end":34}},{"value":"/ let mut set = ordset!{};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":235459,"byte_end":235487,"line_start":482,"line_end":482,"column_start":5,"column_end":33}},{"value":"/ set.insert(123);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":235492,"byte_end":235512,"line_start":483,"line_end":483,"column_start":5,"column_end":25}},{"value":"/ set.insert(456);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":235517,"byte_end":235537,"line_start":484,"line_end":484,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":235542,"byte_end":235557,"line_start":485,"line_end":485,"column_start":5,"column_end":20}},{"value":"/   set,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":235562,"byte_end":235572,"line_start":486,"line_end":486,"column_start":5,"column_end":15}},{"value":"/   ordset![123, 456]","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":235577,"byte_end":235600,"line_start":487,"line_end":487,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":235605,"byte_end":235611,"line_start":488,"line_end":488,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":235616,"byte_end":235623,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":235628,"byte_end":235637,"line_start":490,"line_end":490,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":236429,"byte_end":236435,"line_start":515,"line_end":515,"column_start":12,"column_end":18},"name":"remove","qualname":"<OrdSet<A>>::remove","value":"pub fn remove<BA>(&mut Self, &BA) -> Option<A> where BA: Ord + ?Sized,\nA: Borrow<BA>","parent":null,"children":[],"decl_id":null,"docs":" Remove a value from a set.","sig":null,"attributes":[{"value":"/ Remove a value from a set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":236342,"byte_end":236372,"line_start":511,"line_end":511,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":236377,"byte_end":236380,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":236385,"byte_end":236403,"line_start":513,"line_end":513,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":236408,"byte_end":236417,"line_start":514,"line_end":514,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":237183,"byte_end":237193,"line_start":539,"line_end":539,"column_start":12,"column_end":22},"name":"remove_min","qualname":"<OrdSet<A>>::remove_min","value":"pub fn remove_min(&mut Self) -> Option<A>","parent":null,"children":[],"decl_id":null,"docs":" Remove the smallest value from a set.","sig":null,"attributes":[{"value":"/ Remove the smallest value from a set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":237099,"byte_end":237140,"line_start":536,"line_end":536,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":237145,"byte_end":237148,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":237153,"byte_end":237171,"line_start":538,"line_end":538,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":237540,"byte_end":237550,"line_start":552,"line_end":552,"column_start":12,"column_end":22},"name":"remove_max","qualname":"<OrdSet<A>>::remove_max","value":"pub fn remove_max(&mut Self) -> Option<A>","parent":null,"children":[],"decl_id":null,"docs":" Remove the largest value from a set.","sig":null,"attributes":[{"value":"/ Remove the largest value from a set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":237457,"byte_end":237497,"line_start":549,"line_end":549,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":237502,"byte_end":237505,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":237510,"byte_end":237528,"line_start":551,"line_end":551,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":238204,"byte_end":238210,"line_start":579,"line_end":579,"column_start":12,"column_end":18},"name":"update","qualname":"<OrdSet<A>>::update","value":"pub fn update(&Self, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new set from the current set with the given value\n added.","sig":null,"attributes":[{"value":"/ Construct a new set from the current set with the given value","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":237814,"byte_end":237879,"line_start":562,"line_end":562,"column_start":5,"column_end":70}},{"value":"/ added.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":237884,"byte_end":237894,"line_start":563,"line_end":563,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":237899,"byte_end":237902,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":237907,"byte_end":237925,"line_start":565,"line_end":565,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":237930,"byte_end":237933,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":237938,"byte_end":237952,"line_start":567,"line_end":567,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":237957,"byte_end":237960,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":237965,"byte_end":237972,"line_start":569,"line_end":569,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":237977,"byte_end":238012,"line_start":570,"line_end":570,"column_start":5,"column_end":40}},{"value":"/ # use im::ordset::OrdSet;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":238017,"byte_end":238046,"line_start":571,"line_end":571,"column_start":5,"column_end":34}},{"value":"/ let set = ordset![456];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":238051,"byte_end":238078,"line_start":572,"line_end":572,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":238083,"byte_end":238098,"line_start":573,"line_end":573,"column_start":5,"column_end":20}},{"value":"/   set.update(123),","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":238103,"byte_end":238125,"line_start":574,"line_end":574,"column_start":5,"column_end":27}},{"value":"/   ordset![123, 456]","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":238130,"byte_end":238153,"line_start":575,"line_end":575,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":238158,"byte_end":238164,"line_start":576,"line_end":576,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":238169,"byte_end":238176,"line_start":577,"line_end":577,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":238181,"byte_end":238192,"line_start":578,"line_end":578,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":238455,"byte_end":238462,"line_start":590,"line_end":590,"column_start":12,"column_end":19},"name":"without","qualname":"<OrdSet<A>>::without","value":"pub fn without<BA>(&Self, &BA) -> Self where BA: Ord + ?Sized, A: Borrow<BA>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new set with the given value removed if it's in\n the set.","sig":null,"attributes":[{"value":"/ Construct a new set with the given value removed if it's in","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":238316,"byte_end":238379,"line_start":585,"line_end":585,"column_start":5,"column_end":68}},{"value":"/ the set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":238384,"byte_end":238396,"line_start":586,"line_end":586,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":238401,"byte_end":238404,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":238409,"byte_end":238427,"line_start":588,"line_end":588,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":238432,"byte_end":238443,"line_start":589,"line_end":589,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":238795,"byte_end":238806,"line_start":605,"line_end":605,"column_start":12,"column_end":23},"name":"without_min","qualname":"<OrdSet<A>>::without_min","value":"pub fn without_min(&Self) -> (Option<A>, Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove the smallest value from a set, and return that value as\n well as the updated set.","sig":null,"attributes":[{"value":"/ Remove the smallest value from a set, and return that value as","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":238637,"byte_end":238703,"line_start":600,"line_end":600,"column_start":5,"column_end":71}},{"value":"/ well as the updated set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":238708,"byte_end":238736,"line_start":601,"line_end":601,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":238741,"byte_end":238744,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":238749,"byte_end":238767,"line_start":603,"line_end":603,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":238772,"byte_end":238783,"line_start":604,"line_end":604,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":239148,"byte_end":239159,"line_start":617,"line_end":617,"column_start":12,"column_end":23},"name":"without_max","qualname":"<OrdSet<A>>::without_max","value":"pub fn without_max(&Self) -> (Option<A>, Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove the largest value from a set, and return that value as\n well as the updated set.","sig":null,"attributes":[{"value":"/ Remove the largest value from a set, and return that value as","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":238991,"byte_end":239056,"line_start":612,"line_end":612,"column_start":5,"column_end":70}},{"value":"/ well as the updated set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":239061,"byte_end":239089,"line_start":613,"line_end":613,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":239094,"byte_end":239097,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":239102,"byte_end":239120,"line_start":615,"line_end":615,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":239125,"byte_end":239136,"line_start":616,"line_end":616,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":239731,"byte_end":239736,"line_start":639,"line_end":639,"column_start":12,"column_end":17},"name":"union","qualname":"<OrdSet<A>>::union","value":"pub fn union(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of two sets.","sig":null,"attributes":[{"value":"/ Construct the union of two sets.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":239344,"byte_end":239380,"line_start":624,"line_end":624,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":239385,"byte_end":239388,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":239393,"byte_end":239413,"line_start":626,"line_end":626,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":239418,"byte_end":239421,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":239426,"byte_end":239440,"line_start":628,"line_end":628,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":239445,"byte_end":239448,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":239453,"byte_end":239460,"line_start":630,"line_end":630,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":239465,"byte_end":239500,"line_start":631,"line_end":631,"column_start":5,"column_end":40}},{"value":"/ # use im::ordset::OrdSet;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":239505,"byte_end":239534,"line_start":632,"line_end":632,"column_start":5,"column_end":34}},{"value":"/ let set1 = ordset!{1, 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":239539,"byte_end":239568,"line_start":633,"line_end":633,"column_start":5,"column_end":34}},{"value":"/ let set2 = ordset!{2, 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":239573,"byte_end":239602,"line_start":634,"line_end":634,"column_start":5,"column_end":34}},{"value":"/ let expected = ordset!{1, 2, 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":239607,"byte_end":239643,"line_start":635,"line_end":635,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(expected, set1.union(set2));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":239648,"byte_end":239691,"line_start":636,"line_end":636,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":239696,"byte_end":239703,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":239708,"byte_end":239719,"line_start":638,"line_end":638,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":239967,"byte_end":239973,"line_start":650,"line_end":650,"column_start":12,"column_end":18},"name":"unions","qualname":"<OrdSet<A>>::unions","value":"pub fn unions<I>(I) -> Self where I: IntoIterator<Item = Self>","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of multiple sets.","sig":null,"attributes":[{"value":"/ Construct the union of multiple sets.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":239865,"byte_end":239906,"line_start":646,"line_end":646,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":239911,"byte_end":239914,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":239919,"byte_end":239939,"line_start":648,"line_end":648,"column_start":5,"column_end":25}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":239944,"byte_end":239955,"line_start":649,"line_end":649,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240695,"byte_end":240705,"line_start":677,"line_end":677,"column_start":12,"column_end":22},"name":"difference","qualname":"<OrdSet<A>>::difference","value":"pub fn difference(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two sets.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two sets.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240113,"byte_end":240169,"line_start":657,"line_end":657,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240174,"byte_end":240177,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ This is an alias for the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240182,"byte_end":240210,"line_start":659,"line_end":659,"column_start":5,"column_end":33}},{"value":"/ [`symmetric_difference`][symmetric_difference] method.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240215,"byte_end":240273,"line_start":660,"line_end":660,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240278,"byte_end":240281,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240286,"byte_end":240306,"line_start":662,"line_end":662,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240311,"byte_end":240314,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240319,"byte_end":240333,"line_start":664,"line_end":664,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240338,"byte_end":240341,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240346,"byte_end":240353,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240358,"byte_end":240393,"line_start":667,"line_end":667,"column_start":5,"column_end":40}},{"value":"/ # use im::ordset::OrdSet;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240398,"byte_end":240427,"line_start":668,"line_end":668,"column_start":5,"column_end":34}},{"value":"/ let set1 = ordset!{1, 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240432,"byte_end":240461,"line_start":669,"line_end":669,"column_start":5,"column_end":34}},{"value":"/ let set2 = ordset!{2, 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240466,"byte_end":240495,"line_start":670,"line_end":670,"column_start":5,"column_end":34}},{"value":"/ let expected = ordset!{1, 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240500,"byte_end":240533,"line_start":671,"line_end":671,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(expected, set1.difference(set2));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240538,"byte_end":240586,"line_start":672,"line_end":672,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240591,"byte_end":240598,"line_start":673,"line_end":673,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240603,"byte_end":240606,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ [symmetric_difference]: #method.symmetric_difference","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240611,"byte_end":240667,"line_start":675,"line_end":675,"column_start":5,"column_end":61}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240672,"byte_end":240683,"line_start":676,"line_end":676,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":241206,"byte_end":241226,"line_start":696,"line_end":696,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<OrdSet<A>>::symmetric_difference","value":"pub fn symmetric_difference(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two sets.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two sets.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240787,"byte_end":240843,"line_start":681,"line_end":681,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240848,"byte_end":240851,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240856,"byte_end":240876,"line_start":683,"line_end":683,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240881,"byte_end":240884,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240889,"byte_end":240903,"line_start":685,"line_end":685,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240908,"byte_end":240911,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240916,"byte_end":240923,"line_start":687,"line_end":687,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240928,"byte_end":240963,"line_start":688,"line_end":688,"column_start":5,"column_end":40}},{"value":"/ # use im::ordset::OrdSet;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":240968,"byte_end":240997,"line_start":689,"line_end":689,"column_start":5,"column_end":34}},{"value":"/ let set1 = ordset!{1, 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":241002,"byte_end":241031,"line_start":690,"line_end":690,"column_start":5,"column_end":34}},{"value":"/ let set2 = ordset!{2, 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":241036,"byte_end":241065,"line_start":691,"line_end":691,"column_start":5,"column_end":34}},{"value":"/ let expected = ordset!{1, 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":241070,"byte_end":241103,"line_start":692,"line_end":692,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(expected, set1.symmetric_difference(set2));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":241108,"byte_end":241166,"line_start":693,"line_end":693,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":241171,"byte_end":241178,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":241183,"byte_end":241194,"line_start":695,"line_end":695,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":241945,"byte_end":241964,"line_start":721,"line_end":721,"column_start":12,"column_end":31},"name":"relative_complement","qualname":"<OrdSet<A>>::relative_complement","value":"pub fn relative_complement(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the relative complement between two sets, that is the set\n of values in `self` that do not occur in `other`.","sig":null,"attributes":[{"value":"/ Construct the relative complement between two sets, that is the set","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":241420,"byte_end":241491,"line_start":705,"line_end":705,"column_start":5,"column_end":76}},{"value":"/ of values in `self` that do not occur in `other`.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":241496,"byte_end":241549,"line_start":706,"line_end":706,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":241554,"byte_end":241557,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ Time: O(m log n) where m is the size of the other set","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":241562,"byte_end":241619,"line_start":708,"line_end":708,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":241624,"byte_end":241627,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":241632,"byte_end":241646,"line_start":710,"line_end":710,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":241651,"byte_end":241654,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":241659,"byte_end":241666,"line_start":712,"line_end":712,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":241671,"byte_end":241706,"line_start":713,"line_end":713,"column_start":5,"column_end":40}},{"value":"/ # use im::ordset::OrdSet;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":241711,"byte_end":241740,"line_start":714,"line_end":714,"column_start":5,"column_end":34}},{"value":"/ let set1 = ordset!{1, 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":241745,"byte_end":241774,"line_start":715,"line_end":715,"column_start":5,"column_end":34}},{"value":"/ let set2 = ordset!{2, 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":241779,"byte_end":241808,"line_start":716,"line_end":716,"column_start":5,"column_end":34}},{"value":"/ let expected = ordset!{1};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":241813,"byte_end":241843,"line_start":717,"line_end":717,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(expected, set1.relative_complement(set2));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":241848,"byte_end":241905,"line_start":718,"line_end":718,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":241910,"byte_end":241917,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":241922,"byte_end":241933,"line_start":720,"line_end":720,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":242497,"byte_end":242509,"line_start":743,"line_end":743,"column_start":12,"column_end":24},"name":"intersection","qualname":"<OrdSet<A>>::intersection","value":"pub fn intersection(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the intersection of two sets.","sig":null,"attributes":[{"value":"/ Construct the intersection of two sets.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":242102,"byte_end":242145,"line_start":728,"line_end":728,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":242150,"byte_end":242153,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":242158,"byte_end":242178,"line_start":730,"line_end":730,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":242183,"byte_end":242186,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":242191,"byte_end":242205,"line_start":732,"line_end":732,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":242210,"byte_end":242213,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":242218,"byte_end":242225,"line_start":734,"line_end":734,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":242230,"byte_end":242265,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/ # use im::ordset::OrdSet;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":242270,"byte_end":242299,"line_start":736,"line_end":736,"column_start":5,"column_end":34}},{"value":"/ let set1 = ordset!{1, 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":242304,"byte_end":242333,"line_start":737,"line_end":737,"column_start":5,"column_end":34}},{"value":"/ let set2 = ordset!{2, 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":242338,"byte_end":242367,"line_start":738,"line_end":738,"column_start":5,"column_end":34}},{"value":"/ let expected = ordset!{2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":242372,"byte_end":242402,"line_start":739,"line_end":739,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(expected, set1.intersection(set2));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":242407,"byte_end":242457,"line_start":740,"line_end":740,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":242462,"byte_end":242469,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":242474,"byte_end":242485,"line_start":742,"line_end":742,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1472},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":243024,"byte_end":243029,"line_start":761,"line_end":761,"column_start":12,"column_end":17},"name":"split","qualname":"<OrdSet<A>>::split","value":"pub fn split<BA>(Self, &BA) -> (Self, Self) where BA: Ord + ?Sized,\nA: Borrow<BA>","parent":null,"children":[],"decl_id":null,"docs":" Split a set into two, with the left hand set containing values\n which are smaller than `split`, and the right hand set\n containing values which are larger than `split`.","sig":null,"attributes":[{"value":"/ Split a set into two, with the left hand set containing values","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":242728,"byte_end":242794,"line_start":753,"line_end":753,"column_start":5,"column_end":71}},{"value":"/ which are smaller than `split`, and the right hand set","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":242799,"byte_end":242857,"line_start":754,"line_end":754,"column_start":5,"column_end":63}},{"value":"/ containing values which are larger than `split`.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":242862,"byte_end":242914,"line_start":755,"line_end":755,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":242919,"byte_end":242922,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ The `split` value itself is discarded.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":242927,"byte_end":242969,"line_start":757,"line_end":757,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":242974,"byte_end":242977,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":242982,"byte_end":242996,"line_start":759,"line_end":759,"column_start":5,"column_end":19}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":243001,"byte_end":243012,"line_start":760,"line_end":760,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1474},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":243627,"byte_end":243639,"line_start":780,"line_end":780,"column_start":12,"column_end":24},"name":"split_member","qualname":"<OrdSet<A>>::split_member","value":"pub fn split_member<BA>(Self, &BA) -> (Self, bool, Self) where BA: Ord +\n?Sized, A: Borrow<BA>","parent":null,"children":[],"decl_id":null,"docs":" Split a set into two, with the left hand set containing values\n which are smaller than `split`, and the right hand set\n containing values which are larger than `split`.","sig":null,"attributes":[{"value":"/ Split a set into two, with the left hand set containing values","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":243223,"byte_end":243289,"line_start":770,"line_end":770,"column_start":5,"column_end":71}},{"value":"/ which are smaller than `split`, and the right hand set","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":243294,"byte_end":243352,"line_start":771,"line_end":771,"column_start":5,"column_end":63}},{"value":"/ containing values which are larger than `split`.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":243357,"byte_end":243409,"line_start":772,"line_end":772,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":243414,"byte_end":243417,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ Returns a tuple of the two sets and a boolean which is true if","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":243422,"byte_end":243488,"line_start":774,"line_end":774,"column_start":5,"column_end":71}},{"value":"/ the `split` value existed in the original set, and false","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":243493,"byte_end":243553,"line_start":775,"line_end":775,"column_start":5,"column_end":65}},{"value":"/ otherwise.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":243558,"byte_end":243572,"line_start":776,"line_end":776,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":243577,"byte_end":243580,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":243585,"byte_end":243599,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":243604,"byte_end":243615,"line_start":779,"line_end":779,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":244420,"byte_end":244424,"line_start":809,"line_end":809,"column_start":12,"column_end":16},"name":"take","qualname":"<OrdSet<A>>::take","value":"pub fn take(&Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a set with only the `n` smallest values from a given\n set.","sig":null,"attributes":[{"value":"/ Construct a set with only the `n` smallest values from a given","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":244286,"byte_end":244352,"line_start":804,"line_end":804,"column_start":5,"column_end":71}},{"value":"/ set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":244357,"byte_end":244365,"line_start":805,"line_end":805,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":244370,"byte_end":244373,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":244378,"byte_end":244392,"line_start":807,"line_end":807,"column_start":5,"column_end":19}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":244397,"byte_end":244408,"line_start":808,"line_end":808,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1477},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":244647,"byte_end":244651,"line_start":818,"line_end":818,"column_start":12,"column_end":16},"name":"skip","qualname":"<OrdSet<A>>::skip","value":"pub fn skip(&Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a set with the `n` smallest values removed from a\n given set.","sig":null,"attributes":[{"value":"/ Construct a set with the `n` smallest values removed from a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":244510,"byte_end":244573,"line_start":813,"line_end":813,"column_start":5,"column_end":68}},{"value":"/ given set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":244578,"byte_end":244592,"line_start":814,"line_end":814,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":244597,"byte_end":244600,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":244605,"byte_end":244619,"line_start":816,"line_end":816,"column_start":5,"column_end":19}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":244624,"byte_end":244635,"line_start":817,"line_end":817,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1530},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":247171,"byte_end":247175,"line_start":941,"line_end":941,"column_start":12,"column_end":16},"name":"Iter","qualname":"::ord::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1533}],"decl_id":null,"docs":" An iterator over the elements of a set.\n","sig":null,"attributes":[{"value":"/ An iterator over the elements of a set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":247116,"byte_end":247159,"line_start":940,"line_end":940,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1547},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":248097,"byte_end":248107,"line_start":979,"line_end":979,"column_start":12,"column_end":22},"name":"RangedIter","qualname":"::ord::set::RangedIter","value":"RangedIter {  }","parent":null,"children":[{"krate":0,"index":1550}],"decl_id":null,"docs":" A ranged iterator over the elements of a set.","sig":null,"attributes":[{"value":"/ A ranged iterator over the elements of a set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":247847,"byte_end":247896,"line_start":974,"line_end":974,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":247897,"byte_end":247900,"line_start":975,"line_end":975,"column_start":1,"column_end":4}},{"value":"/ The only difference from `Iter` is that this one doesn't implement","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":247901,"byte_end":247971,"line_start":976,"line_end":976,"column_start":1,"column_end":71}},{"value":"/ `ExactSizeIterator` because we can't know the size of the range without first","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":247972,"byte_end":248053,"line_start":977,"line_end":977,"column_start":1,"column_end":82}},{"value":"/ iterating over it to count.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":248054,"byte_end":248085,"line_start":978,"line_end":978,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1561},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":248762,"byte_end":248775,"line_start":1011,"line_end":1011,"column_start":12,"column_end":25},"name":"ConsumingIter","qualname":"::ord::set::ConsumingIter","value":"ConsumingIter {  }","parent":null,"children":[{"krate":0,"index":1563}],"decl_id":null,"docs":" A consuming iterator over the elements of a set.\n","sig":null,"attributes":[{"value":"/ A consuming iterator over the elements of a set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":248698,"byte_end":248750,"line_start":1010,"line_end":1010,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1569},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":249148,"byte_end":249156,"line_start":1030,"line_end":1030,"column_start":12,"column_end":20},"name":"DiffIter","qualname":"::ord::set::DiffIter","value":"DiffIter {  }","parent":null,"children":[{"krate":0,"index":1572}],"decl_id":null,"docs":" An iterator over the difference between two sets.\n","sig":null,"attributes":[{"value":"/ An iterator over the difference between two sets.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":249083,"byte_end":249136,"line_start":1029,"line_end":1029,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":1643},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"map","qualname":"::hash::map","value":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","parent":null,"children":[{"krate":0,"index":1644},{"krate":0,"index":1647},{"krate":0,"index":1650},{"krate":0,"index":1653},{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1663},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1673},{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1680},{"krate":0,"index":1683},{"krate":0,"index":1686},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1693},{"krate":0,"index":1696},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1703},{"krate":0,"index":1706},{"krate":0,"index":1709},{"krate":0,"index":1712},{"krate":0,"index":1715},{"krate":0,"index":1718},{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1725},{"krate":0,"index":1728},{"krate":0,"index":1731},{"krate":0,"index":3708},{"krate":0,"index":3713},{"krate":0,"index":3719},{"krate":0,"index":3723},{"krate":0,"index":1732},{"krate":0,"index":1740},{"krate":0,"index":1746},{"krate":0,"index":1750},{"krate":0,"index":1754},{"krate":0,"index":1771},{"krate":0,"index":1798},{"krate":0,"index":1873},{"krate":0,"index":1884},{"krate":0,"index":1897},{"krate":0,"index":1905},{"krate":0,"index":1917},{"krate":0,"index":1925},{"krate":0,"index":1933},{"krate":0,"index":1938},{"krate":0,"index":1943},{"krate":0,"index":1947},{"krate":0,"index":1952},{"krate":0,"index":1957},{"krate":0,"index":1963},{"krate":0,"index":1968},{"krate":0,"index":1974},{"krate":0,"index":1981},{"krate":0,"index":1988},{"krate":0,"index":1996},{"krate":0,"index":2004},{"krate":0,"index":2011},{"krate":0,"index":2016},{"krate":0,"index":2021},{"krate":0,"index":2029},{"krate":0,"index":2033},{"krate":0,"index":2037},{"krate":0,"index":2042},{"krate":0,"index":2050},{"krate":0,"index":2054},{"krate":0,"index":2058},{"krate":0,"index":2061},{"krate":0,"index":2067},{"krate":0,"index":2069},{"krate":0,"index":2071},{"krate":0,"index":2076},{"krate":0,"index":2084},{"krate":0,"index":2088},{"krate":0,"index":2092},{"krate":0,"index":2097},{"krate":0,"index":2105},{"krate":0,"index":2109},{"krate":0,"index":2113},{"krate":0,"index":2121},{"krate":0,"index":2128},{"krate":0,"index":2134},{"krate":0,"index":2139},{"krate":0,"index":2151},{"krate":0,"index":2157},{"krate":0,"index":2162},{"krate":0,"index":2168},{"krate":0,"index":2173},{"krate":0,"index":2180},{"krate":0,"index":2185}],"decl_id":null,"docs":" An unordered map.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/mod.rs","byte_start":255159,"byte_end":255171,"line_start":5,"line_end":5,"column_start":1,"column_end":13}},{"value":"/ An unordered map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":255415,"byte_end":255436,"line_start":5,"line_end":5,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":255437,"byte_end":255440,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ An immutable hash map using [hash array mapped tries][1].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":255441,"byte_end":255502,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":255503,"byte_end":255506,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Most operations on this map are O(log<sub>x</sub> n) for a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":255507,"byte_end":255569,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/ suitably high *x* that it should be nearly O(1) for most maps.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":255570,"byte_end":255636,"line_start":10,"line_end":10,"column_start":1,"column_end":67}},{"value":"/ Because of this, it's a great choice for a generic map as long as","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":255637,"byte_end":255706,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ you don't mind that keys will need to implement","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":255707,"byte_end":255758,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ [`Hash`][std::hash::Hash] and [`Eq`][std::cmp::Eq].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":255759,"byte_end":255814,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":255815,"byte_end":255818,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Map entries will have a predictable order based on the hasher","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":255819,"byte_end":255884,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/ being used. Unless otherwise specified, this will be the standard","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":255885,"byte_end":255954,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/ [`RandomState`][std::collections::hash_map::RandomState] hasher.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":255955,"byte_end":256023,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":256024,"byte_end":256027,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Hash_array_mapped_trie","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":256028,"byte_end":256089,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ [std::cmp::Eq]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":256090,"byte_end":256157,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/ [std::hash::Hash]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":256158,"byte_end":256231,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/ [std::collections::hash_map::RandomState]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":256232,"byte_end":256353,"line_start":22,"line_end":22,"column_start":1,"column_end":122}}]},{"kind":"Struct","id":{"krate":0,"index":3708},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":257650,"byte_end":257661,"line_start":79,"line_end":79,"column_start":11,"column_end":22},"name":"HashMapPool","qualname":"::hash::map::HashMapPool","value":"","parent":null,"children":[],"decl_id":null,"docs":" A memory pool for the appropriate node type.\n","sig":null,"attributes":[{"value":"/ A memory pool for the appropriate node type.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/util.rs","byte_start":147360,"byte_end":147408,"line_start":110,"line_end":110,"column_start":9,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1732},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":258635,"byte_end":258642,"line_start":100,"line_end":100,"column_start":12,"column_end":19},"name":"HashMap","qualname":"::hash::map::HashMap","value":"HashMap {  }","parent":null,"children":[{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1739}],"decl_id":null,"docs":" An unordered map.","sig":null,"attributes":[{"value":"/ An unordered map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":257683,"byte_end":257704,"line_start":81,"line_end":81,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":257705,"byte_end":257708,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ An immutable hash map using [hash array mapped tries] [1].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":257709,"byte_end":257771,"line_start":83,"line_end":83,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":257772,"byte_end":257775,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ Most operations on this map are O(log<sub>x</sub> n) for a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":257776,"byte_end":257838,"line_start":85,"line_end":85,"column_start":1,"column_end":63}},{"value":"/ suitably high *x* that it should be nearly O(1) for most maps.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":257839,"byte_end":257905,"line_start":86,"line_end":86,"column_start":1,"column_end":67}},{"value":"/ Because of this, it's a great choice for a generic map as long as","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":257906,"byte_end":257975,"line_start":87,"line_end":87,"column_start":1,"column_end":70}},{"value":"/ you don't mind that keys will need to implement","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":257976,"byte_end":258027,"line_start":88,"line_end":88,"column_start":1,"column_end":52}},{"value":"/ [`Hash`][std::hash::Hash] and [`Eq`][std::cmp::Eq].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":258028,"byte_end":258083,"line_start":89,"line_end":89,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":258084,"byte_end":258087,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Map entries will have a predictable order based on the hasher","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":258088,"byte_end":258153,"line_start":91,"line_end":91,"column_start":1,"column_end":66}},{"value":"/ being used. Unless otherwise specified, this will be the standard","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":258154,"byte_end":258223,"line_start":92,"line_end":92,"column_start":1,"column_end":70}},{"value":"/ [`RandomState`][std::collections::hash_map::RandomState] hasher.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":258224,"byte_end":258292,"line_start":93,"line_end":93,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":258293,"byte_end":258296,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Hash_array_mapped_trie","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":258297,"byte_end":258358,"line_start":95,"line_end":95,"column_start":1,"column_end":62}},{"value":"/ [std::cmp::Eq]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":258359,"byte_end":258426,"line_start":96,"line_end":96,"column_start":1,"column_end":68}},{"value":"/ [std::hash::Hash]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":258427,"byte_end":258500,"line_start":97,"line_end":97,"column_start":1,"column_end":74}},{"value":"/ [std::collections::hash_map::RandomState]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":258501,"byte_end":258622,"line_start":98,"line_end":98,"column_start":1,"column_end":122}}]},{"kind":"Method","id":{"krate":0,"index":1749},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":259092,"byte_end":259095,"line_start":126,"line_end":126,"column_start":12,"column_end":15},"name":"new","qualname":"<HashMap<K, V, RandomState>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty hash map.\n","sig":null,"attributes":[{"value":"/ Construct an empty hash map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":259018,"byte_end":259050,"line_start":123,"line_end":123,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":259055,"byte_end":259064,"line_start":124,"line_end":124,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":259069,"byte_end":259080,"line_start":125,"line_end":125,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1753},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":259952,"byte_end":259956,"line_start":164,"line_end":164,"column_start":12,"column_end":16},"name":"unit","qualname":"<HashMap<K, V, RandomState>>::unit","value":"pub fn unit(K, V) -> HashMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Construct a hash map with a single mapping.","sig":null,"attributes":[{"value":"/ Construct a hash map with a single mapping.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":259588,"byte_end":259635,"line_start":149,"line_end":149,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":259640,"byte_end":259643,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":259648,"byte_end":259662,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":259667,"byte_end":259670,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":259675,"byte_end":259682,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":259687,"byte_end":259722,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":259727,"byte_end":259758,"line_start":155,"line_end":155,"column_start":5,"column_end":36}},{"value":"/ let map = HashMap::unit(123, \"onetwothree\");","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":259763,"byte_end":259811,"line_start":156,"line_end":156,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":259816,"byte_end":259831,"line_start":157,"line_end":157,"column_start":5,"column_end":20}},{"value":"/   map.get(&123),","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":259836,"byte_end":259856,"line_start":158,"line_end":158,"column_start":5,"column_end":25}},{"value":"/   Some(&\"onetwothree\")","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":259861,"byte_end":259887,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":259892,"byte_end":259898,"line_start":160,"line_end":160,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":259903,"byte_end":259910,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":259915,"byte_end":259924,"line_start":162,"line_end":162,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":259929,"byte_end":259940,"line_start":163,"line_end":163,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260454,"byte_end":260462,"line_start":188,"line_end":188,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashMap<K, V, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether a hash map is empty.","sig":null,"attributes":[{"value":"/ Test whether a hash map is empty.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260070,"byte_end":260107,"line_start":170,"line_end":170,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260112,"byte_end":260115,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260120,"byte_end":260134,"line_start":172,"line_end":172,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260139,"byte_end":260142,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260147,"byte_end":260161,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260166,"byte_end":260169,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260174,"byte_end":260181,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260186,"byte_end":260221,"line_start":177,"line_end":177,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260226,"byte_end":260257,"line_start":178,"line_end":178,"column_start":5,"column_end":36}},{"value":"/ assert!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260262,"byte_end":260274,"line_start":179,"line_end":179,"column_start":5,"column_end":17}},{"value":"/   !hashmap!{1 => 2}.is_empty()","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260279,"byte_end":260313,"line_start":180,"line_end":180,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260318,"byte_end":260324,"line_start":181,"line_end":181,"column_start":5,"column_end":11}},{"value":"/ assert!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260329,"byte_end":260341,"line_start":182,"line_end":182,"column_start":5,"column_end":17}},{"value":"/   HashMap::<i32, i32>::new().is_empty()","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260346,"byte_end":260389,"line_start":183,"line_end":183,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260394,"byte_end":260400,"line_start":184,"line_end":184,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260405,"byte_end":260412,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260417,"byte_end":260426,"line_start":186,"line_end":186,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260431,"byte_end":260442,"line_start":187,"line_end":187,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1759},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260856,"byte_end":260859,"line_start":209,"line_end":209,"column_start":12,"column_end":15},"name":"len","qualname":"<HashMap<K, V, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the size of a hash map.","sig":null,"attributes":[{"value":"/ Get the size of a hash map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260515,"byte_end":260546,"line_start":192,"line_end":192,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260551,"byte_end":260554,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260559,"byte_end":260573,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260578,"byte_end":260581,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260586,"byte_end":260600,"line_start":196,"line_end":196,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260605,"byte_end":260608,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260613,"byte_end":260620,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260625,"byte_end":260660,"line_start":199,"line_end":199,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260665,"byte_end":260696,"line_start":200,"line_end":200,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(3, hashmap!{","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260701,"byte_end":260728,"line_start":201,"line_end":201,"column_start":5,"column_end":32}},{"value":"/   1 => 11,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260733,"byte_end":260747,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/   2 => 22,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260752,"byte_end":260766,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/   3 => 33","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260771,"byte_end":260784,"line_start":204,"line_end":204,"column_start":5,"column_end":18}},{"value":"/ }.len());","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260789,"byte_end":260802,"line_start":205,"line_end":205,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260807,"byte_end":260814,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260819,"byte_end":260828,"line_start":207,"line_end":207,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260833,"byte_end":260844,"line_start":208,"line_end":208,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1760},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":261283,"byte_end":261289,"line_start":222,"line_end":222,"column_start":12,"column_end":18},"name":"ptr_eq","qualname":"<HashMap<K, V, S>>::ptr_eq","value":"pub fn ptr_eq(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether two maps refer to the same content in memory.","sig":null,"attributes":[{"value":"/ Test whether two maps refer to the same content in memory.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260907,"byte_end":260969,"line_start":213,"line_end":213,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260974,"byte_end":260977,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ This is true if the two sides are references to the same map,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260982,"byte_end":261047,"line_start":215,"line_end":215,"column_start":5,"column_end":70}},{"value":"/ or if the two maps refer to the same root node.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":261052,"byte_end":261103,"line_start":216,"line_end":216,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":261108,"byte_end":261111,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This would return true if you're comparing a map to itself, or","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":261116,"byte_end":261182,"line_start":218,"line_end":218,"column_start":5,"column_end":71}},{"value":"/ if you're comparing a map to a fresh clone of itself.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":261187,"byte_end":261244,"line_start":219,"line_end":219,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":261249,"byte_end":261252,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":261257,"byte_end":261271,"line_start":221,"line_end":221,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1761},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":261809,"byte_end":261820,"line_start":238,"line_end":238,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<HashMap<K, V, S>>::with_hasher","value":"pub fn with_hasher<RS>(RS) -> Self where Ref<S>: From<RS>","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty hash map using the provided hasher.\n","sig":null,"attributes":[{"value":"/ Construct an empty hash map using the provided hasher.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":261709,"byte_end":261767,"line_start":235,"line_end":235,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":261772,"byte_end":261781,"line_start":236,"line_end":236,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":261786,"byte_end":261797,"line_start":237,"line_end":237,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1763},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":262712,"byte_end":262718,"line_start":272,"line_end":272,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashMap<K, V, S>>::hasher","value":"pub fn hasher(&Self) -> &Ref<S>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the map's [`BuildHasher`][BuildHasher].","sig":null,"attributes":[{"value":"/ Get a reference to the map's [`BuildHasher`][BuildHasher].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":262533,"byte_end":262595,"line_start":268,"line_end":268,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":262600,"byte_end":262603,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ [BuildHasher]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":262608,"byte_end":262684,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":262689,"byte_end":262700,"line_start":271,"line_end":271,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1764},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":262899,"byte_end":262907,"line_start":280,"line_end":280,"column_start":12,"column_end":20},"name":"new_from","qualname":"<HashMap<K, V, S>>::new_from","value":"pub fn new_from<K1, V1>(&Self) -> HashMap<K1, V1, S> where K1: Hash + Eq +\nClone, V1: Clone","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty hash map using the same hasher as the\n current hash map.\n","sig":null,"attributes":[{"value":"/ Construct an empty hash map using the same hasher as the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":262771,"byte_end":262831,"line_start":276,"line_end":276,"column_start":5,"column_end":65}},{"value":"/ current hash map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":262836,"byte_end":262857,"line_start":277,"line_end":277,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":262862,"byte_end":262871,"line_start":278,"line_end":278,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":262876,"byte_end":262887,"line_start":279,"line_end":279,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1767},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":263641,"byte_end":263645,"line_start":304,"line_end":304,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashMap<K, V, S>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the key/value pairs of a hash map.","sig":null,"attributes":[{"value":"/ Get an iterator over the key/value pairs of a hash map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":263237,"byte_end":263296,"line_start":295,"line_end":295,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":263301,"byte_end":263304,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ Please note that the order is consistent between maps using","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":263309,"byte_end":263372,"line_start":297,"line_end":297,"column_start":5,"column_end":68}},{"value":"/ the same hasher, but no other ordering guarantee is offered.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":263377,"byte_end":263441,"line_start":298,"line_end":298,"column_start":5,"column_end":69}},{"value":"/ Items will not come out in insertion order or sort order.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":263446,"byte_end":263507,"line_start":299,"line_end":299,"column_start":5,"column_end":66}},{"value":"/ They will, however, come out in the same order every time for","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":263512,"byte_end":263577,"line_start":300,"line_end":300,"column_start":5,"column_end":70}},{"value":"/ the same map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":263582,"byte_end":263599,"line_start":301,"line_end":301,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":263604,"byte_end":263613,"line_start":302,"line_end":302,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":263618,"byte_end":263629,"line_start":303,"line_end":303,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1768},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":264151,"byte_end":264155,"line_start":319,"line_end":319,"column_start":12,"column_end":16},"name":"keys","qualname":"<HashMap<K, V, S>>::keys","value":"pub fn keys(&Self) -> Keys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over a hash map's keys.","sig":null,"attributes":[{"value":"/ Get an iterator over a hash map's keys.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":263763,"byte_end":263806,"line_start":310,"line_end":310,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":263811,"byte_end":263814,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ Please note that the order is consistent between maps using","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":263819,"byte_end":263882,"line_start":312,"line_end":312,"column_start":5,"column_end":68}},{"value":"/ the same hasher, but no other ordering guarantee is offered.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":263887,"byte_end":263951,"line_start":313,"line_end":313,"column_start":5,"column_end":69}},{"value":"/ Items will not come out in insertion order or sort order.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":263956,"byte_end":264017,"line_start":314,"line_end":314,"column_start":5,"column_end":66}},{"value":"/ They will, however, come out in the same order every time for","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":264022,"byte_end":264087,"line_start":315,"line_end":315,"column_start":5,"column_end":70}},{"value":"/ the same map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":264092,"byte_end":264109,"line_start":316,"line_end":316,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":264114,"byte_end":264123,"line_start":317,"line_end":317,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":264128,"byte_end":264139,"line_start":318,"line_end":318,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1769},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":264663,"byte_end":264669,"line_start":334,"line_end":334,"column_start":12,"column_end":18},"name":"values","qualname":"<HashMap<K, V, S>>::values","value":"pub fn values(&Self) -> Values<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over a hash map's values.","sig":null,"attributes":[{"value":"/ Get an iterator over a hash map's values.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":264273,"byte_end":264318,"line_start":325,"line_end":325,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":264323,"byte_end":264326,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Please note that the order is consistent between maps using","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":264331,"byte_end":264394,"line_start":327,"line_end":327,"column_start":5,"column_end":68}},{"value":"/ the same hasher, but no other ordering guarantee is offered.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":264399,"byte_end":264463,"line_start":328,"line_end":328,"column_start":5,"column_end":69}},{"value":"/ Items will not come out in insertion order or sort order.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":264468,"byte_end":264529,"line_start":329,"line_end":329,"column_start":5,"column_end":66}},{"value":"/ They will, however, come out in the same order every time for","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":264534,"byte_end":264599,"line_start":330,"line_end":330,"column_start":5,"column_end":70}},{"value":"/ the same map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":264604,"byte_end":264621,"line_start":331,"line_end":331,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":264626,"byte_end":264635,"line_start":332,"line_end":332,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":264640,"byte_end":264651,"line_start":333,"line_end":333,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1770},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":265218,"byte_end":265223,"line_start":356,"line_end":356,"column_start":12,"column_end":17},"name":"clear","qualname":"<HashMap<K, V, S>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Discard all elements from the map.","sig":null,"attributes":[{"value":"/ Discard all elements from the map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":264791,"byte_end":264829,"line_start":340,"line_end":340,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":264834,"byte_end":264837,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ This leaves you with an empty map, and all elements that","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":264842,"byte_end":264902,"line_start":342,"line_end":342,"column_start":5,"column_end":65}},{"value":"/ were previously inside it are dropped.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":264907,"byte_end":264949,"line_start":343,"line_end":343,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":264954,"byte_end":264957,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":264962,"byte_end":264976,"line_start":345,"line_end":345,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":264981,"byte_end":264984,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":264989,"byte_end":265003,"line_start":347,"line_end":347,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":265008,"byte_end":265011,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":265016,"byte_end":265023,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":265028,"byte_end":265063,"line_start":350,"line_end":350,"column_start":5,"column_end":40}},{"value":"/ # use im::HashMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":265068,"byte_end":265090,"line_start":351,"line_end":351,"column_start":5,"column_end":27}},{"value":"/ let mut map = hashmap![1=>1, 2=>2, 3=>3];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":265095,"byte_end":265140,"line_start":352,"line_end":352,"column_start":5,"column_end":50}},{"value":"/ map.clear();","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":265145,"byte_end":265161,"line_start":353,"line_end":353,"column_start":5,"column_end":21}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":265166,"byte_end":265194,"line_start":354,"line_end":354,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":265199,"byte_end":265206,"line_start":355,"line_end":355,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266360,"byte_end":266363,"line_start":408,"line_end":408,"column_start":12,"column_end":15},"name":"get","qualname":"<HashMap<K, V, S>>::get","value":"pub fn get<BK>(&Self, &BK) -> Option<&V> where BK: Hash + Eq + ?Sized,\nK: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Get the value for a key from a hash map.","sig":null,"attributes":[{"value":"/ Get the value for a key from a hash map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266001,"byte_end":266045,"line_start":392,"line_end":392,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266050,"byte_end":266053,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266058,"byte_end":266076,"line_start":394,"line_end":394,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266081,"byte_end":266084,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266089,"byte_end":266103,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266108,"byte_end":266111,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266116,"byte_end":266123,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266128,"byte_end":266163,"line_start":399,"line_end":399,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266168,"byte_end":266199,"line_start":400,"line_end":400,"column_start":5,"column_end":36}},{"value":"/ let map = hashmap!{123 => \"lol\"};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266204,"byte_end":266241,"line_start":401,"line_end":401,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266246,"byte_end":266261,"line_start":402,"line_end":402,"column_start":5,"column_end":20}},{"value":"/   map.get(&123),","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266266,"byte_end":266286,"line_start":403,"line_end":403,"column_start":5,"column_end":25}},{"value":"/   Some(&\"lol\")","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266291,"byte_end":266309,"line_start":404,"line_end":404,"column_start":5,"column_end":23}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266314,"byte_end":266320,"line_start":405,"line_end":405,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266325,"byte_end":266332,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266337,"byte_end":266348,"line_start":407,"line_end":407,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1779},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266974,"byte_end":266987,"line_start":434,"line_end":434,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<HashMap<K, V, S>>::get_key_value","value":"pub fn get_key_value<BK>(&Self, &BK) -> Option<(&K, &V)> where BK: Hash + Eq +\n?Sized, K: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Get the key/value pair for a key from a hash map.","sig":null,"attributes":[{"value":"/ Get the key/value pair for a key from a hash map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266588,"byte_end":266641,"line_start":418,"line_end":418,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266646,"byte_end":266649,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266654,"byte_end":266672,"line_start":420,"line_end":420,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266677,"byte_end":266680,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266685,"byte_end":266699,"line_start":422,"line_end":422,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266704,"byte_end":266707,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266712,"byte_end":266719,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266724,"byte_end":266759,"line_start":425,"line_end":425,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266764,"byte_end":266795,"line_start":426,"line_end":426,"column_start":5,"column_end":36}},{"value":"/ let map = hashmap!{123 => \"lol\"};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266800,"byte_end":266837,"line_start":427,"line_end":427,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266842,"byte_end":266857,"line_start":428,"line_end":428,"column_start":5,"column_end":20}},{"value":"/   map.get_key_value(&123),","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266862,"byte_end":266892,"line_start":429,"line_end":429,"column_start":5,"column_end":35}},{"value":"/   Some((&123, &\"lol\"))","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266897,"byte_end":266923,"line_start":430,"line_end":430,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266928,"byte_end":266934,"line_start":431,"line_end":431,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266939,"byte_end":266946,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":266951,"byte_end":266962,"line_start":433,"line_end":433,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":267649,"byte_end":267661,"line_start":463,"line_end":463,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<HashMap<K, V, S>>::contains_key","value":"pub fn contains_key<BK>(&Self, &BK) -> bool where BK: Hash + Eq + ?Sized,\nK: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Test for the presence of a key in a hash map.","sig":null,"attributes":[{"value":"/ Test for the presence of a key in a hash map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":267227,"byte_end":267276,"line_start":444,"line_end":444,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":267281,"byte_end":267284,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":267289,"byte_end":267307,"line_start":446,"line_end":446,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":267312,"byte_end":267315,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":267320,"byte_end":267334,"line_start":448,"line_end":448,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":267339,"byte_end":267342,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":267347,"byte_end":267354,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":267359,"byte_end":267394,"line_start":451,"line_end":451,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":267399,"byte_end":267430,"line_start":452,"line_end":452,"column_start":5,"column_end":36}},{"value":"/ let map = hashmap!{123 => \"lol\"};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":267435,"byte_end":267472,"line_start":453,"line_end":453,"column_start":5,"column_end":42}},{"value":"/ assert!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":267477,"byte_end":267489,"line_start":454,"line_end":454,"column_start":5,"column_end":17}},{"value":"/   map.contains_key(&123)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":267494,"byte_end":267522,"line_start":455,"line_end":455,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":267527,"byte_end":267533,"line_start":456,"line_end":456,"column_start":5,"column_end":11}},{"value":"/ assert!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":267538,"byte_end":267550,"line_start":457,"line_end":457,"column_start":5,"column_end":17}},{"value":"/   !map.contains_key(&321)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":267555,"byte_end":267584,"line_start":458,"line_end":458,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":267589,"byte_end":267595,"line_start":459,"line_end":459,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":267600,"byte_end":267607,"line_start":460,"line_end":460,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":267612,"byte_end":267621,"line_start":461,"line_end":461,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":267626,"byte_end":267637,"line_start":462,"line_end":462,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1784},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":268092,"byte_end":268104,"line_start":479,"line_end":479,"column_start":12,"column_end":24},"name":"is_submap_by","qualname":"<HashMap<K, V, S>>::is_submap_by","value":"pub fn is_submap_by<B, RM, F>(&Self, RM, F) -> bool where F: FnMut(&V, &B) ->\nbool, RM: Borrow<HashMap<K, B, S>>","parent":null,"children":[],"decl_id":null,"docs":" Test whether a map is a submap of another map, meaning that\n all keys in our map must also be in the other map, with the\n same values.","sig":null,"attributes":[{"value":"/ Test whether a map is a submap of another map, meaning that","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":267801,"byte_end":267864,"line_start":471,"line_end":471,"column_start":5,"column_end":68}},{"value":"/ all keys in our map must also be in the other map, with the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":267869,"byte_end":267932,"line_start":472,"line_end":472,"column_start":5,"column_end":68}},{"value":"/ same values.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":267937,"byte_end":267953,"line_start":473,"line_end":473,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":267958,"byte_end":267961,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ Use the provided function to decide whether values are equal.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":267966,"byte_end":268031,"line_start":475,"line_end":475,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":268036,"byte_end":268039,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":268044,"byte_end":268064,"line_start":477,"line_end":477,"column_start":5,"column_end":25}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":268069,"byte_end":268080,"line_start":478,"line_end":478,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1790},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":268742,"byte_end":268761,"line_start":497,"line_end":497,"column_start":12,"column_end":31},"name":"is_proper_submap_by","qualname":"<HashMap<K, V, S>>::is_proper_submap_by","value":"pub fn is_proper_submap_by<B, RM, F>(&Self, RM, F) -> bool where\nF: FnMut(&V, &B) -> bool, RM: Borrow<HashMap<K, B, S>>","parent":null,"children":[],"decl_id":null,"docs":" Test whether a map is a proper submap of another map, meaning\n that all keys in our map must also be in the other map, with\n the same values. To be a proper submap, ours must also contain\n fewer keys than the other map.","sig":null,"attributes":[{"value":"/ Test whether a map is a proper submap of another map, meaning","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":268359,"byte_end":268424,"line_start":488,"line_end":488,"column_start":5,"column_end":70}},{"value":"/ that all keys in our map must also be in the other map, with","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":268429,"byte_end":268493,"line_start":489,"line_end":489,"column_start":5,"column_end":69}},{"value":"/ the same values. To be a proper submap, ours must also contain","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":268498,"byte_end":268564,"line_start":490,"line_end":490,"column_start":5,"column_end":71}},{"value":"/ fewer keys than the other map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":268569,"byte_end":268603,"line_start":491,"line_end":491,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":268608,"byte_end":268611,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Use the provided function to decide whether values are equal.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":268616,"byte_end":268681,"line_start":493,"line_end":493,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":268686,"byte_end":268689,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":268694,"byte_end":268714,"line_start":495,"line_end":495,"column_start":5,"column_end":25}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":268719,"byte_end":268730,"line_start":496,"line_end":496,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1794},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269480,"byte_end":269489,"line_start":522,"line_end":522,"column_start":12,"column_end":21},"name":"is_submap","qualname":"<HashMap<K, V, S>>::is_submap","value":"pub fn is_submap<RM>(&Self, RM) -> bool where V: PartialEq, RM: Borrow<Self>","parent":null,"children":[],"decl_id":null,"docs":" Test whether a map is a submap of another map, meaning that\n all keys in our map must also be in the other map, with the\n same values.","sig":null,"attributes":[{"value":"/ Test whether a map is a submap of another map, meaning that","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":268981,"byte_end":269044,"line_start":505,"line_end":505,"column_start":5,"column_end":68}},{"value":"/ all keys in our map must also be in the other map, with the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269049,"byte_end":269112,"line_start":506,"line_end":506,"column_start":5,"column_end":68}},{"value":"/ same values.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269117,"byte_end":269133,"line_start":507,"line_end":507,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269138,"byte_end":269141,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269146,"byte_end":269166,"line_start":509,"line_end":509,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269171,"byte_end":269174,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269179,"byte_end":269193,"line_start":511,"line_end":511,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269198,"byte_end":269201,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269206,"byte_end":269213,"line_start":513,"line_end":513,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269218,"byte_end":269253,"line_start":514,"line_end":514,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269258,"byte_end":269289,"line_start":515,"line_end":515,"column_start":5,"column_end":36}},{"value":"/ let map1 = hashmap!{1 => 1, 2 => 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269294,"byte_end":269334,"line_start":516,"line_end":516,"column_start":5,"column_end":45}},{"value":"/ let map2 = hashmap!{1 => 1, 2 => 2, 3 => 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269339,"byte_end":269387,"line_start":517,"line_end":517,"column_start":5,"column_end":53}},{"value":"/ assert!(map1.is_submap(map2));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269392,"byte_end":269426,"line_start":518,"line_end":518,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269431,"byte_end":269438,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269443,"byte_end":269452,"line_start":520,"line_end":520,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269457,"byte_end":269468,"line_start":521,"line_end":521,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":270395,"byte_end":270411,"line_start":552,"line_end":552,"column_start":12,"column_end":28},"name":"is_proper_submap","qualname":"<HashMap<K, V, S>>::is_proper_submap","value":"pub fn is_proper_submap<RM>(&Self, RM) -> bool where V: PartialEq,\nRM: Borrow<Self>","parent":null,"children":[],"decl_id":null,"docs":" Test whether a map is a proper submap of another map, meaning\n that all keys in our map must also be in the other map, with\n the same values. To be a proper submap, ours must also contain\n fewer keys than the other map.","sig":null,"attributes":[{"value":"/ Test whether a map is a proper submap of another map, meaning","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269652,"byte_end":269717,"line_start":530,"line_end":530,"column_start":5,"column_end":70}},{"value":"/ that all keys in our map must also be in the other map, with","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269722,"byte_end":269786,"line_start":531,"line_end":531,"column_start":5,"column_end":69}},{"value":"/ the same values. To be a proper submap, ours must also contain","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269791,"byte_end":269857,"line_start":532,"line_end":532,"column_start":5,"column_end":71}},{"value":"/ fewer keys than the other map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269862,"byte_end":269896,"line_start":533,"line_end":533,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269901,"byte_end":269904,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269909,"byte_end":269929,"line_start":535,"line_end":535,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269934,"byte_end":269937,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269942,"byte_end":269956,"line_start":537,"line_end":537,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269961,"byte_end":269964,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269969,"byte_end":269976,"line_start":539,"line_end":539,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":269981,"byte_end":270016,"line_start":540,"line_end":540,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":270021,"byte_end":270052,"line_start":541,"line_end":541,"column_start":5,"column_end":36}},{"value":"/ let map1 = hashmap!{1 => 1, 2 => 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":270057,"byte_end":270097,"line_start":542,"line_end":542,"column_start":5,"column_end":45}},{"value":"/ let map2 = hashmap!{1 => 1, 2 => 2, 3 => 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":270102,"byte_end":270150,"line_start":543,"line_end":543,"column_start":5,"column_end":53}},{"value":"/ assert!(map1.is_proper_submap(map2));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":270155,"byte_end":270196,"line_start":544,"line_end":544,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":270201,"byte_end":270204,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ let map3 = hashmap!{1 => 1, 2 => 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":270209,"byte_end":270249,"line_start":546,"line_end":546,"column_start":5,"column_end":45}},{"value":"/ let map4 = hashmap!{1 => 1, 2 => 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":270254,"byte_end":270294,"line_start":547,"line_end":547,"column_start":5,"column_end":45}},{"value":"/ assert!(!map3.is_proper_submap(map4));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":270299,"byte_end":270341,"line_start":548,"line_end":548,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":270346,"byte_end":270353,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":270358,"byte_end":270367,"line_start":550,"line_end":550,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":270372,"byte_end":270383,"line_start":551,"line_end":551,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1802},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":271084,"byte_end":271092,"line_start":576,"line_end":576,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<HashMap<K, V, S>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable iterator over the values of a hash map.","sig":null,"attributes":[{"value":"/ Get a mutable iterator over the values of a hash map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":270682,"byte_end":270739,"line_start":567,"line_end":567,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":270744,"byte_end":270747,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Please note that the order is consistent between maps using","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":270752,"byte_end":270815,"line_start":569,"line_end":569,"column_start":5,"column_end":68}},{"value":"/ the same hasher, but no other ordering guarantee is offered.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":270820,"byte_end":270884,"line_start":570,"line_end":570,"column_start":5,"column_end":69}},{"value":"/ Items will not come out in insertion order or sort order.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":270889,"byte_end":270950,"line_start":571,"line_end":571,"column_start":5,"column_end":66}},{"value":"/ They will, however, come out in the same order every time for","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":270955,"byte_end":271020,"line_start":572,"line_end":572,"column_start":5,"column_end":70}},{"value":"/ the same map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":271025,"byte_end":271042,"line_start":573,"line_end":573,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":271047,"byte_end":271056,"line_start":574,"line_end":574,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":271061,"byte_end":271072,"line_start":575,"line_end":575,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1803},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":271780,"byte_end":271787,"line_start":603,"line_end":603,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<HashMap<K, V, S>>::get_mut","value":"pub fn get_mut<BK>(&mut Self, &BK) -> Option<&mut V> where BK: Hash + Eq +\n?Sized, K: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the value for a key from a hash\n map.","sig":null,"attributes":[{"value":"/ Get a mutable reference to the value for a key from a hash","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":271299,"byte_end":271361,"line_start":583,"line_end":583,"column_start":5,"column_end":67}},{"value":"/ map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":271366,"byte_end":271374,"line_start":584,"line_end":584,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":271379,"byte_end":271382,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":271387,"byte_end":271405,"line_start":586,"line_end":586,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":271410,"byte_end":271413,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":271418,"byte_end":271432,"line_start":588,"line_end":588,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":271437,"byte_end":271440,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":271445,"byte_end":271452,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":271457,"byte_end":271492,"line_start":591,"line_end":591,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":271497,"byte_end":271528,"line_start":592,"line_end":592,"column_start":5,"column_end":36}},{"value":"/ let mut map = hashmap!{123 => \"lol\"};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":271533,"byte_end":271574,"line_start":593,"line_end":593,"column_start":5,"column_end":46}},{"value":"/ if let Some(value) = map.get_mut(&123) {","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":271579,"byte_end":271623,"line_start":594,"line_end":594,"column_start":5,"column_end":49}},{"value":"/     *value = \"omg\";","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":271628,"byte_end":271651,"line_start":595,"line_end":595,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":271656,"byte_end":271661,"line_start":596,"line_end":596,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":271666,"byte_end":271681,"line_start":597,"line_end":597,"column_start":5,"column_end":20}},{"value":"/   map.get(&123),","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":271686,"byte_end":271706,"line_start":598,"line_end":598,"column_start":5,"column_end":25}},{"value":"/   Some(&\"omg\")","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":271711,"byte_end":271729,"line_start":599,"line_end":599,"column_start":5,"column_end":23}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":271734,"byte_end":271740,"line_start":600,"line_end":600,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":271745,"byte_end":271752,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":271757,"byte_end":271768,"line_start":602,"line_end":602,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1805},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":272692,"byte_end":272698,"line_start":636,"line_end":636,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashMap<K, V, S>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Insert a key/value mapping into a map.","sig":null,"attributes":[{"value":"/ Insert a key/value mapping into a map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":272156,"byte_end":272198,"line_start":615,"line_end":615,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":272203,"byte_end":272206,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ If the map already has a mapping for the given key, the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":272211,"byte_end":272270,"line_start":617,"line_end":617,"column_start":5,"column_end":64}},{"value":"/ previous value is overwritten.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":272275,"byte_end":272309,"line_start":618,"line_end":618,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":272314,"byte_end":272317,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":272322,"byte_end":272340,"line_start":620,"line_end":620,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":272345,"byte_end":272348,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":272353,"byte_end":272367,"line_start":622,"line_end":622,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":272372,"byte_end":272375,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":272380,"byte_end":272387,"line_start":624,"line_end":624,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":272392,"byte_end":272427,"line_start":625,"line_end":625,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":272432,"byte_end":272463,"line_start":626,"line_end":626,"column_start":5,"column_end":36}},{"value":"/ let mut map = hashmap!{};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":272468,"byte_end":272497,"line_start":627,"line_end":627,"column_start":5,"column_end":34}},{"value":"/ map.insert(123, \"123\");","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":272502,"byte_end":272529,"line_start":628,"line_end":628,"column_start":5,"column_end":32}},{"value":"/ map.insert(456, \"456\");","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":272534,"byte_end":272561,"line_start":629,"line_end":629,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":272566,"byte_end":272581,"line_start":630,"line_end":630,"column_start":5,"column_end":20}},{"value":"/   map,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":272586,"byte_end":272596,"line_start":631,"line_end":631,"column_start":5,"column_end":15}},{"value":"/   hashmap!{123 => \"123\", 456 => \"456\"}","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":272601,"byte_end":272643,"line_start":632,"line_end":632,"column_start":5,"column_end":47}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":272648,"byte_end":272654,"line_start":633,"line_end":633,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":272659,"byte_end":272666,"line_start":634,"line_end":634,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":272671,"byte_end":272680,"line_start":635,"line_end":635,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1807},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":273716,"byte_end":273722,"line_start":666,"line_end":666,"column_start":12,"column_end":18},"name":"remove","qualname":"<HashMap<K, V, S>>::remove","value":"pub fn remove<BK>(&mut Self, &BK) -> Option<V> where BK: Hash + Eq + ?Sized,\nK: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Remove a key/value pair from a map, if it exists, and return\n the removed value.","sig":null,"attributes":[{"value":"/ Remove a key/value pair from a map, if it exists, and return","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":273028,"byte_end":273092,"line_start":646,"line_end":646,"column_start":5,"column_end":69}},{"value":"/ the removed value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":273097,"byte_end":273119,"line_start":647,"line_end":647,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":273124,"byte_end":273127,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ This is a copy-on-write operation, so that the parts of the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":273132,"byte_end":273195,"line_start":649,"line_end":649,"column_start":5,"column_end":68}},{"value":"/ set's structure which are shared with other sets will be","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":273200,"byte_end":273260,"line_start":650,"line_end":650,"column_start":5,"column_end":65}},{"value":"/ safely copied before mutating.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":273265,"byte_end":273299,"line_start":651,"line_end":651,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":273304,"byte_end":273307,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":273312,"byte_end":273330,"line_start":653,"line_end":653,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":273335,"byte_end":273338,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":273343,"byte_end":273357,"line_start":655,"line_end":655,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":273362,"byte_end":273365,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":273370,"byte_end":273377,"line_start":657,"line_end":657,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":273382,"byte_end":273417,"line_start":658,"line_end":658,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":273422,"byte_end":273453,"line_start":659,"line_end":659,"column_start":5,"column_end":36}},{"value":"/ let mut map = hashmap!{123 => \"123\", 456 => \"456\"};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":273458,"byte_end":273513,"line_start":660,"line_end":660,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(Some(\"123\"), map.remove(&123));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":273518,"byte_end":273564,"line_start":661,"line_end":661,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(Some(\"456\"), map.remove(&456));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":273569,"byte_end":273615,"line_start":662,"line_end":662,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(None, map.remove(&789));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":273620,"byte_end":273659,"line_start":663,"line_end":663,"column_start":5,"column_end":44}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":273664,"byte_end":273692,"line_start":664,"line_end":664,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":273697,"byte_end":273704,"line_start":665,"line_end":665,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1810},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":274446,"byte_end":274461,"line_start":690,"line_end":690,"column_start":12,"column_end":27},"name":"remove_with_key","qualname":"<HashMap<K, V, S>>::remove_with_key","value":"pub fn remove_with_key<BK>(&mut Self, &BK) -> Option<(K, V)> where BK: Hash +\nEq + ?Sized, K: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Remove a key/value pair from a map, if it exists, and return\n the removed key and value.","sig":null,"attributes":[{"value":"/ Remove a key/value pair from a map, if it exists, and return","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":273889,"byte_end":273953,"line_start":674,"line_end":674,"column_start":5,"column_end":69}},{"value":"/ the removed key and value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":273958,"byte_end":273988,"line_start":675,"line_end":675,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":273993,"byte_end":273996,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":274001,"byte_end":274019,"line_start":677,"line_end":677,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":274024,"byte_end":274027,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":274032,"byte_end":274046,"line_start":679,"line_end":679,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":274051,"byte_end":274054,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":274059,"byte_end":274066,"line_start":681,"line_end":681,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":274071,"byte_end":274106,"line_start":682,"line_end":682,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":274111,"byte_end":274142,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ let mut map = hashmap!{123 => \"123\", 456 => \"456\"};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":274147,"byte_end":274202,"line_start":684,"line_end":684,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(Some((123, \"123\")), map.remove_with_key(&123));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":274207,"byte_end":274269,"line_start":685,"line_end":685,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Some((456, \"456\")), map.remove_with_key(&456));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":274274,"byte_end":274336,"line_start":686,"line_end":686,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(None, map.remove_with_key(&789));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":274341,"byte_end":274389,"line_start":687,"line_end":687,"column_start":5,"column_end":53}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":274394,"byte_end":274422,"line_start":688,"line_end":688,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":274427,"byte_end":274434,"line_start":689,"line_end":689,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1812},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":274994,"byte_end":274999,"line_start":709,"line_end":709,"column_start":12,"column_end":17},"name":"entry","qualname":"<HashMap<K, V, S>>::entry","value":"pub fn entry(&mut Self, K) -> Entry<, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Entry`][Entry] for a key in the map for in-place manipulation.","sig":null,"attributes":[{"value":"/ Get the [`Entry`][Entry] for a key in the map for in-place manipulation.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":274818,"byte_end":274894,"line_start":703,"line_end":703,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":274899,"byte_end":274902,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":274907,"byte_end":274925,"line_start":705,"line_end":705,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":274930,"byte_end":274933,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ [Entry]: enum.Entry.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":274938,"byte_end":274966,"line_start":707,"line_end":707,"column_start":5,"column_end":33}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":274971,"byte_end":274982,"line_start":708,"line_end":708,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1813},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":275957,"byte_end":275963,"line_start":746,"line_end":746,"column_start":12,"column_end":18},"name":"update","qualname":"<HashMap<K, V, S>>::update","value":"pub fn update(&Self, K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new hash map by inserting a key/value mapping into a map.","sig":null,"attributes":[{"value":"/ Construct a new hash map by inserting a key/value mapping into a map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":275437,"byte_end":275510,"line_start":726,"line_end":726,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":275515,"byte_end":275518,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ If the map already has a mapping for the given key, the previous value","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":275523,"byte_end":275597,"line_start":728,"line_end":728,"column_start":5,"column_end":79}},{"value":"/ is overwritten.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":275602,"byte_end":275621,"line_start":729,"line_end":729,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":275626,"byte_end":275629,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":275634,"byte_end":275652,"line_start":731,"line_end":731,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":275657,"byte_end":275660,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":275665,"byte_end":275679,"line_start":733,"line_end":733,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":275684,"byte_end":275687,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":275692,"byte_end":275699,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":275704,"byte_end":275739,"line_start":736,"line_end":736,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":275744,"byte_end":275775,"line_start":737,"line_end":737,"column_start":5,"column_end":36}},{"value":"/ let map = hashmap!{};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":275780,"byte_end":275805,"line_start":738,"line_end":738,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":275810,"byte_end":275825,"line_start":739,"line_end":739,"column_start":5,"column_end":20}},{"value":"/   map.update(123, \"123\"),","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":275830,"byte_end":275859,"line_start":740,"line_end":740,"column_start":5,"column_end":34}},{"value":"/   hashmap!{123 => \"123\"}","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":275864,"byte_end":275892,"line_start":741,"line_end":741,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":275897,"byte_end":275903,"line_start":742,"line_end":742,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":275908,"byte_end":275915,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":275920,"byte_end":275929,"line_start":744,"line_end":744,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":275934,"byte_end":275945,"line_start":745,"line_end":745,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":276410,"byte_end":276421,"line_start":761,"line_end":761,"column_start":12,"column_end":23},"name":"update_with","qualname":"<HashMap<K, V, S>>::update_with","value":"pub fn update_with<F>(&Self, K, V, F) -> Self where F: FnOnce(V, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Construct a new hash map by inserting a key/value mapping into\n a map.","sig":null,"attributes":[{"value":"/ Construct a new hash map by inserting a key/value mapping into","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":276078,"byte_end":276144,"line_start":752,"line_end":752,"column_start":5,"column_end":71}},{"value":"/ a map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":276149,"byte_end":276159,"line_start":753,"line_end":753,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":276164,"byte_end":276167,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ If the map already has a mapping for the given key, we call","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":276172,"byte_end":276235,"line_start":755,"line_end":755,"column_start":5,"column_end":68}},{"value":"/ the provided function with the old value and the new value,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":276240,"byte_end":276303,"line_start":756,"line_end":756,"column_start":5,"column_end":68}},{"value":"/ and insert the result as the new value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":276308,"byte_end":276351,"line_start":757,"line_end":757,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":276356,"byte_end":276359,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":276364,"byte_end":276382,"line_start":759,"line_end":759,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":276387,"byte_end":276398,"line_start":760,"line_end":760,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1816},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":276997,"byte_end":277012,"line_start":780,"line_end":780,"column_start":12,"column_end":27},"name":"update_with_key","qualname":"<HashMap<K, V, S>>::update_with_key","value":"pub fn update_with_key<F>(&Self, K, V, F) -> Self where F: FnOnce(&K, V, V) ->\nV","parent":null,"children":[],"decl_id":null,"docs":" Construct a new map by inserting a key/value mapping into a\n map.","sig":null,"attributes":[{"value":"/ Construct a new map by inserting a key/value mapping into a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":276661,"byte_end":276724,"line_start":771,"line_end":771,"column_start":5,"column_end":68}},{"value":"/ map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":276729,"byte_end":276737,"line_start":772,"line_end":772,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":276742,"byte_end":276745,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ If the map already has a mapping for the given key, we call","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":276750,"byte_end":276813,"line_start":774,"line_end":774,"column_start":5,"column_end":68}},{"value":"/ the provided function with the key, the old value and the new","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":276818,"byte_end":276883,"line_start":775,"line_end":775,"column_start":5,"column_end":70}},{"value":"/ value, and insert the result as the new value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":276888,"byte_end":276938,"line_start":776,"line_end":776,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":276943,"byte_end":276946,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":276951,"byte_end":276969,"line_start":778,"line_end":778,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":276974,"byte_end":276985,"line_start":779,"line_end":779,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1818},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":277730,"byte_end":277752,"line_start":803,"line_end":803,"column_start":12,"column_end":34},"name":"update_lookup_with_key","qualname":"<HashMap<K, V, S>>::update_lookup_with_key","value":"pub fn update_lookup_with_key<F>(&Self, K, V, F) -> (Option<V>, Self) where\nF: FnOnce(&K, &V, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Construct a new map by inserting a key/value mapping into a\n map, returning the old value for the key as well as the new\n map.","sig":null,"attributes":[{"value":"/ Construct a new map by inserting a key/value mapping into a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":277326,"byte_end":277389,"line_start":793,"line_end":793,"column_start":5,"column_end":68}},{"value":"/ map, returning the old value for the key as well as the new","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":277394,"byte_end":277457,"line_start":794,"line_end":794,"column_start":5,"column_end":68}},{"value":"/ map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":277462,"byte_end":277470,"line_start":795,"line_end":795,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":277475,"byte_end":277478,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ If the map already has a mapping for the given key, we call","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":277483,"byte_end":277546,"line_start":797,"line_end":797,"column_start":5,"column_end":68}},{"value":"/ the provided function with the key, the old value and the new","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":277551,"byte_end":277616,"line_start":798,"line_end":798,"column_start":5,"column_end":70}},{"value":"/ value, and insert the result as the new value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":277621,"byte_end":277671,"line_start":799,"line_end":799,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":277676,"byte_end":277679,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":277684,"byte_end":277702,"line_start":801,"line_end":801,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":277707,"byte_end":277718,"line_start":802,"line_end":802,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1820},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":278645,"byte_end":278650,"line_start":829,"line_end":829,"column_start":12,"column_end":17},"name":"alter","qualname":"<HashMap<K, V, S>>::alter","value":"pub fn alter<F>(&Self, F, K) -> Self where F: FnOnce(Option<V>) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Update the value for a given key by calling a function with\n the current value and overwriting it with the function's\n return value.","sig":null,"attributes":[{"value":"/ Update the value for a given key by calling a function with","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":278101,"byte_end":278164,"line_start":816,"line_end":816,"column_start":5,"column_end":68}},{"value":"/ the current value and overwriting it with the function's","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":278169,"byte_end":278229,"line_start":817,"line_end":817,"column_start":5,"column_end":65}},{"value":"/ return value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":278234,"byte_end":278251,"line_start":818,"line_end":818,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":278256,"byte_end":278259,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ The function gets an [`Option<V>`][std::option::Option] and","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":278264,"byte_end":278327,"line_start":820,"line_end":820,"column_start":5,"column_end":68}},{"value":"/ returns the same, so that it can decide to delete a mapping","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":278332,"byte_end":278395,"line_start":821,"line_end":821,"column_start":5,"column_end":68}},{"value":"/ instead of updating the value, and decide what to do if the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":278400,"byte_end":278463,"line_start":822,"line_end":822,"column_start":5,"column_end":68}},{"value":"/ key isn't in the map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":278468,"byte_end":278493,"line_start":823,"line_end":823,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":278498,"byte_end":278501,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":278506,"byte_end":278524,"line_start":825,"line_end":825,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":278529,"byte_end":278532,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ [std::option::Option]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":278537,"byte_end":278617,"line_start":827,"line_end":827,"column_start":5,"column_end":85}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":278622,"byte_end":278633,"line_start":828,"line_end":828,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1823},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":279294,"byte_end":279301,"line_start":849,"line_end":849,"column_start":12,"column_end":19},"name":"without","qualname":"<HashMap<K, V, S>>::without","value":"pub fn without<BK>(&Self, &BK) -> Self where BK: Hash + Eq + ?Sized,\nK: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new map without the given key.","sig":null,"attributes":[{"value":"/ Construct a new map without the given key.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":279069,"byte_end":279115,"line_start":842,"line_end":842,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":279120,"byte_end":279123,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ Construct a map that's a copy of the current map, absent the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":279128,"byte_end":279192,"line_start":844,"line_end":844,"column_start":5,"column_end":69}},{"value":"/ mapping for `key` if it's present.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":279197,"byte_end":279235,"line_start":845,"line_end":845,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":279240,"byte_end":279243,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":279248,"byte_end":279266,"line_start":847,"line_end":847,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":279271,"byte_end":279282,"line_start":848,"line_end":848,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1825},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":280178,"byte_end":280184,"line_start":879,"line_end":879,"column_start":12,"column_end":18},"name":"retain","qualname":"<HashMap<K, V, S>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&K, &V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Filter out values from a map which don't satisfy a predicate.","sig":null,"attributes":[{"value":"/ Filter out values from a map which don't satisfy a predicate.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":279534,"byte_end":279599,"line_start":860,"line_end":860,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":279604,"byte_end":279607,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ This is slightly more efficient than filtering using an","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":279612,"byte_end":279671,"line_start":862,"line_end":862,"column_start":5,"column_end":64}},{"value":"/ iterator, in that it doesn't need to rehash the retained","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":279676,"byte_end":279736,"line_start":863,"line_end":863,"column_start":5,"column_end":65}},{"value":"/ values, but it still needs to reconstruct the entire tree","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":279741,"byte_end":279802,"line_start":864,"line_end":864,"column_start":5,"column_end":66}},{"value":"/ structure of the map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":279807,"byte_end":279832,"line_start":865,"line_end":865,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":279837,"byte_end":279840,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":279845,"byte_end":279865,"line_start":867,"line_end":867,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":279870,"byte_end":279873,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":279878,"byte_end":279892,"line_start":869,"line_end":869,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":279897,"byte_end":279900,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":279905,"byte_end":279912,"line_start":871,"line_end":871,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":279917,"byte_end":279952,"line_start":872,"line_end":872,"column_start":5,"column_end":40}},{"value":"/ # use im::HashMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":279957,"byte_end":279979,"line_start":873,"line_end":873,"column_start":5,"column_end":27}},{"value":"/ let mut map = hashmap!{1 => 1, 2 => 2, 3 => 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":279984,"byte_end":280035,"line_start":874,"line_end":874,"column_start":5,"column_end":56}},{"value":"/ map.retain(|k, v| *k > 1);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":280040,"byte_end":280070,"line_start":875,"line_end":875,"column_start":5,"column_end":35}},{"value":"/ let expected = hashmap!{2 => 2, 3 => 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":280075,"byte_end":280119,"line_start":876,"line_end":876,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(expected, map);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":280124,"byte_end":280154,"line_start":877,"line_end":877,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":280159,"byte_end":280166,"line_start":878,"line_end":878,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1827},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":280772,"byte_end":280779,"line_start":897,"line_end":897,"column_start":12,"column_end":19},"name":"extract","qualname":"<HashMap<K, V, S>>::extract","value":"pub fn extract<BK>(&Self, &BK) -> Option<(V, Self)> where BK: Hash + Eq +\n?Sized, K: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Remove a key/value pair from a map, if it exists, and return\n the removed value as well as the updated map.","sig":null,"attributes":[{"value":"/ Remove a key/value pair from a map, if it exists, and return","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":280595,"byte_end":280659,"line_start":892,"line_end":892,"column_start":5,"column_end":69}},{"value":"/ the removed value as well as the updated map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":280664,"byte_end":280713,"line_start":893,"line_end":893,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":280718,"byte_end":280721,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":280726,"byte_end":280744,"line_start":895,"line_end":895,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":280749,"byte_end":280760,"line_start":896,"line_end":896,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1830},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":281145,"byte_end":281161,"line_start":910,"line_end":910,"column_start":12,"column_end":28},"name":"extract_with_key","qualname":"<HashMap<K, V, S>>::extract_with_key","value":"pub fn extract_with_key<BK>(&Self, &BK) -> Option<(K, V, Self)> where\nBK: Hash + Eq + ?Sized, K: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Remove a key/value pair from a map, if it exists, and return\n the removed key and value as well as the updated list.","sig":null,"attributes":[{"value":"/ Remove a key/value pair from a map, if it exists, and return","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":280959,"byte_end":281023,"line_start":905,"line_end":905,"column_start":5,"column_end":69}},{"value":"/ the removed key and value as well as the updated list.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":281028,"byte_end":281086,"line_start":906,"line_end":906,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":281091,"byte_end":281094,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":281099,"byte_end":281117,"line_start":908,"line_end":908,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":281122,"byte_end":281133,"line_start":909,"line_end":909,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1833},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":281883,"byte_end":281888,"line_start":935,"line_end":935,"column_start":12,"column_end":17},"name":"union","qualname":"<HashMap<K, V, S>>::union","value":"pub fn union(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of two maps, keeping the values in the\n current map when keys exist in both maps.","sig":null,"attributes":[{"value":"/ Construct the union of two maps, keeping the values in the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":281380,"byte_end":281442,"line_start":919,"line_end":919,"column_start":5,"column_end":67}},{"value":"/ current map when keys exist in both maps.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":281447,"byte_end":281492,"line_start":920,"line_end":920,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":281497,"byte_end":281500,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":281505,"byte_end":281525,"line_start":922,"line_end":922,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":281530,"byte_end":281533,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":281538,"byte_end":281552,"line_start":924,"line_end":924,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":281557,"byte_end":281560,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":281565,"byte_end":281572,"line_start":926,"line_end":926,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":281577,"byte_end":281612,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":281617,"byte_end":281648,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/ let map1 = hashmap!{1 => 1, 3 => 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":281653,"byte_end":281693,"line_start":929,"line_end":929,"column_start":5,"column_end":45}},{"value":"/ let map2 = hashmap!{2 => 2, 3 => 4};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":281698,"byte_end":281738,"line_start":930,"line_end":930,"column_start":5,"column_end":45}},{"value":"/ let expected = hashmap!{1 => 1, 2 => 2, 3 => 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":281743,"byte_end":281795,"line_start":931,"line_end":931,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(expected, map1.union(map2));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":281800,"byte_end":281843,"line_start":932,"line_end":932,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":281848,"byte_end":281855,"line_start":933,"line_end":933,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":281860,"byte_end":281871,"line_start":934,"line_end":934,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1834},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":282502,"byte_end":282512,"line_start":953,"line_end":953,"column_start":12,"column_end":22},"name":"union_with","qualname":"<HashMap<K, V, S>>::union_with","value":"pub fn union_with<F>(Self, Self, F) -> Self where F: FnMut(V, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of two maps, using a function to decide\n what to do with the value when a key is in both maps.","sig":null,"attributes":[{"value":"/ Construct the union of two maps, using a function to decide","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":282026,"byte_end":282089,"line_start":942,"line_end":942,"column_start":5,"column_end":68}},{"value":"/ what to do with the value when a key is in both maps.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":282094,"byte_end":282151,"line_start":943,"line_end":943,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":282156,"byte_end":282159,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ The function is called when a value exists in both maps, and","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":282164,"byte_end":282228,"line_start":945,"line_end":945,"column_start":5,"column_end":69}},{"value":"/ receives the value from the current map as its first argument,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":282233,"byte_end":282299,"line_start":946,"line_end":946,"column_start":5,"column_end":71}},{"value":"/ and the value from the other map as the second. It should","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":282304,"byte_end":282365,"line_start":947,"line_end":947,"column_start":5,"column_end":66}},{"value":"/ return the value to be inserted in the resulting map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":282370,"byte_end":282427,"line_start":948,"line_end":948,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":282432,"byte_end":282435,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":282440,"byte_end":282460,"line_start":950,"line_end":950,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":282465,"byte_end":282474,"line_start":951,"line_end":951,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":282479,"byte_end":282490,"line_start":952,"line_end":952,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1837},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":283598,"byte_end":283612,"line_start":985,"line_end":985,"column_start":12,"column_end":26},"name":"union_with_key","qualname":"<HashMap<K, V, S>>::union_with_key","value":"pub fn union_with_key<F>(Self, Self, F) -> Self where F: FnMut(&K, V, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of two maps, using a function to decide\n what to do with the value when a key is in both maps.","sig":null,"attributes":[{"value":"/ Construct the union of two maps, using a function to decide","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":282667,"byte_end":282730,"line_start":960,"line_end":960,"column_start":5,"column_end":68}},{"value":"/ what to do with the value when a key is in both maps.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":282735,"byte_end":282792,"line_start":961,"line_end":961,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":282797,"byte_end":282800,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ The function is called when a value exists in both maps, and","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":282805,"byte_end":282869,"line_start":963,"line_end":963,"column_start":5,"column_end":69}},{"value":"/ receives a reference to the key as its first argument, the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":282874,"byte_end":282936,"line_start":964,"line_end":964,"column_start":5,"column_end":67}},{"value":"/ value from the current map as the second argument, and the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":282941,"byte_end":283003,"line_start":965,"line_end":965,"column_start":5,"column_end":67}},{"value":"/ value from the other map as the third argument. It should","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":283008,"byte_end":283069,"line_start":966,"line_end":966,"column_start":5,"column_end":66}},{"value":"/ return the value to be inserted in the resulting map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":283074,"byte_end":283131,"line_start":967,"line_end":967,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":283136,"byte_end":283139,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":283144,"byte_end":283164,"line_start":969,"line_end":969,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":283169,"byte_end":283172,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":283177,"byte_end":283191,"line_start":971,"line_end":971,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":283196,"byte_end":283199,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":283204,"byte_end":283211,"line_start":973,"line_end":973,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":283216,"byte_end":283251,"line_start":974,"line_end":974,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":283256,"byte_end":283287,"line_start":975,"line_end":975,"column_start":5,"column_end":36}},{"value":"/ let map1 = hashmap!{1 => 1, 3 => 4};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":283292,"byte_end":283332,"line_start":976,"line_end":976,"column_start":5,"column_end":45}},{"value":"/ let map2 = hashmap!{2 => 2, 3 => 5};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":283337,"byte_end":283377,"line_start":977,"line_end":977,"column_start":5,"column_end":45}},{"value":"/ let expected = hashmap!{1 => 1, 2 => 2, 3 => 9};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":283382,"byte_end":283434,"line_start":978,"line_end":978,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(expected, map1.union_with_key(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":283439,"byte_end":283484,"line_start":979,"line_end":979,"column_start":5,"column_end":50}},{"value":"/     map2,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":283489,"byte_end":283502,"line_start":980,"line_end":980,"column_start":5,"column_end":18}},{"value":"/     |key, left, right| left + right","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":283507,"byte_end":283546,"line_start":981,"line_end":981,"column_start":5,"column_end":44}},{"value":"/ ));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":283551,"byte_end":283558,"line_start":982,"line_end":982,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":283563,"byte_end":283570,"line_start":983,"line_end":983,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":283575,"byte_end":283586,"line_start":984,"line_end":984,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1839},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":284639,"byte_end":284645,"line_start":1019,"line_end":1019,"column_start":12,"column_end":18},"name":"unions","qualname":"<HashMap<K, V, S>>::unions","value":"pub fn unions<I>(I) -> Self where S: Default, I: IntoIterator<Item = Self>","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of a sequence of maps, selecting the value\n of the leftmost when a key appears in more than one map.","sig":null,"attributes":[{"value":"/ Construct the union of a sequence of maps, selecting the value","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":284108,"byte_end":284174,"line_start":1003,"line_end":1003,"column_start":5,"column_end":71}},{"value":"/ of the leftmost when a key appears in more than one map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":284179,"byte_end":284239,"line_start":1004,"line_end":1004,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":284244,"byte_end":284247,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":284252,"byte_end":284272,"line_start":1006,"line_end":1006,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":284277,"byte_end":284280,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":284285,"byte_end":284299,"line_start":1008,"line_end":1008,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":284304,"byte_end":284307,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":284312,"byte_end":284319,"line_start":1010,"line_end":1010,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":284324,"byte_end":284359,"line_start":1011,"line_end":1011,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":284364,"byte_end":284395,"line_start":1012,"line_end":1012,"column_start":5,"column_end":36}},{"value":"/ let map1 = hashmap!{1 => 1, 3 => 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":284400,"byte_end":284440,"line_start":1013,"line_end":1013,"column_start":5,"column_end":45}},{"value":"/ let map2 = hashmap!{2 => 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":284445,"byte_end":284477,"line_start":1014,"line_end":1014,"column_start":5,"column_end":37}},{"value":"/ let expected = hashmap!{1 => 1, 2 => 2, 3 => 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":284482,"byte_end":284534,"line_start":1015,"line_end":1015,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(expected, HashMap::unions(vec![map1, map2]));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":284539,"byte_end":284599,"line_start":1016,"line_end":1016,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":284604,"byte_end":284611,"line_start":1017,"line_end":1017,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":284616,"byte_end":284627,"line_start":1018,"line_end":1018,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1841},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":285296,"byte_end":285307,"line_start":1038,"line_end":1038,"column_start":12,"column_end":23},"name":"unions_with","qualname":"<HashMap<K, V, S>>::unions_with","value":"pub fn unions_with<I, F>(I, F) -> Self where S: Default, I: IntoIterator<Item\n= Self>, F: Fn(V, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of a sequence of maps, using a function to\n decide what to do with the value when a key is in more than\n one map.","sig":null,"attributes":[{"value":"/ Construct the union of a sequence of maps, using a function to","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":284805,"byte_end":284871,"line_start":1027,"line_end":1027,"column_start":5,"column_end":71}},{"value":"/ decide what to do with the value when a key is in more than","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":284876,"byte_end":284939,"line_start":1028,"line_end":1028,"column_start":5,"column_end":68}},{"value":"/ one map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":284944,"byte_end":284956,"line_start":1029,"line_end":1029,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":284961,"byte_end":284964,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ The function is called when a value exists in multiple maps,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":284969,"byte_end":285033,"line_start":1031,"line_end":1031,"column_start":5,"column_end":69}},{"value":"/ and receives the value from the current map as its first","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":285038,"byte_end":285098,"line_start":1032,"line_end":1032,"column_start":5,"column_end":65}},{"value":"/ argument, and the value from the next map as the second. It","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":285103,"byte_end":285166,"line_start":1033,"line_end":1033,"column_start":5,"column_end":68}},{"value":"/ should return the value to be inserted in the resulting map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":285171,"byte_end":285235,"line_start":1034,"line_end":1034,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":285240,"byte_end":285243,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":285248,"byte_end":285268,"line_start":1036,"line_end":1036,"column_start":5,"column_end":25}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":285273,"byte_end":285284,"line_start":1037,"line_end":1037,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1845},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":286084,"byte_end":286099,"line_start":1060,"line_end":1060,"column_start":12,"column_end":27},"name":"unions_with_key","qualname":"<HashMap<K, V, S>>::unions_with_key","value":"pub fn unions_with_key<I, F>(I, F) -> Self where S: Default,\nI: IntoIterator<Item = Self>, F: Fn(&K, V, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of a sequence of maps, using a function to\n decide what to do with the value when a key is in more than\n one map.","sig":null,"attributes":[{"value":"/ Construct the union of a sequence of maps, using a function to","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":285530,"byte_end":285596,"line_start":1048,"line_end":1048,"column_start":5,"column_end":71}},{"value":"/ decide what to do with the value when a key is in more than","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":285601,"byte_end":285664,"line_start":1049,"line_end":1049,"column_start":5,"column_end":68}},{"value":"/ one map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":285669,"byte_end":285681,"line_start":1050,"line_end":1050,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":285686,"byte_end":285689,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ The function is called when a value exists in multiple maps,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":285694,"byte_end":285758,"line_start":1052,"line_end":1052,"column_start":5,"column_end":69}},{"value":"/ and receives a reference to the key as its first argument, the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":285763,"byte_end":285829,"line_start":1053,"line_end":1053,"column_start":5,"column_end":71}},{"value":"/ value from the current map as the second argument, and the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":285834,"byte_end":285896,"line_start":1054,"line_end":1054,"column_start":5,"column_end":67}},{"value":"/ value from the next map as the third argument. It should","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":285901,"byte_end":285961,"line_start":1055,"line_end":1055,"column_start":5,"column_end":65}},{"value":"/ return the value to be inserted in the resulting map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":285966,"byte_end":286023,"line_start":1056,"line_end":1056,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":286028,"byte_end":286031,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":286036,"byte_end":286056,"line_start":1058,"line_end":1058,"column_start":5,"column_end":25}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":286061,"byte_end":286072,"line_start":1059,"line_end":1059,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1849},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":287013,"byte_end":287023,"line_start":1092,"line_end":1092,"column_start":12,"column_end":22},"name":"difference","qualname":"<HashMap<K, V, S>>::difference","value":"pub fn difference(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two maps by discarding keys\n which occur in both maps.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two maps by discarding keys","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":286330,"byte_end":286404,"line_start":1070,"line_end":1070,"column_start":5,"column_end":79}},{"value":"/ which occur in both maps.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":286409,"byte_end":286438,"line_start":1071,"line_end":1071,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":286443,"byte_end":286446,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ This is an alias for the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":286451,"byte_end":286479,"line_start":1073,"line_end":1073,"column_start":5,"column_end":33}},{"value":"/ [`symmetric_difference`][symmetric_difference] method.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":286484,"byte_end":286542,"line_start":1074,"line_end":1074,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":286547,"byte_end":286550,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":286555,"byte_end":286575,"line_start":1076,"line_end":1076,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":286580,"byte_end":286583,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":286588,"byte_end":286602,"line_start":1078,"line_end":1078,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":286607,"byte_end":286610,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":286615,"byte_end":286622,"line_start":1080,"line_end":1080,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":286627,"byte_end":286662,"line_start":1081,"line_end":1081,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":286667,"byte_end":286698,"line_start":1082,"line_end":1082,"column_start":5,"column_end":36}},{"value":"/ let map1 = hashmap!{1 => 1, 3 => 4};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":286703,"byte_end":286743,"line_start":1083,"line_end":1083,"column_start":5,"column_end":45}},{"value":"/ let map2 = hashmap!{2 => 2, 3 => 5};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":286748,"byte_end":286788,"line_start":1084,"line_end":1084,"column_start":5,"column_end":45}},{"value":"/ let expected = hashmap!{1 => 1, 2 => 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":286793,"byte_end":286837,"line_start":1085,"line_end":1085,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(expected, map1.difference(map2));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":286842,"byte_end":286890,"line_start":1086,"line_end":1086,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":286895,"byte_end":286902,"line_start":1087,"line_end":1087,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":286907,"byte_end":286910,"line_start":1088,"line_end":1088,"column_start":5,"column_end":8}},{"value":"/ [symmetric_difference]: #method.symmetric_difference","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":286915,"byte_end":286971,"line_start":1089,"line_end":1089,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":286976,"byte_end":286985,"line_start":1090,"line_end":1090,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":286990,"byte_end":287001,"line_start":1091,"line_end":1091,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1850},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":287625,"byte_end":287645,"line_start":1113,"line_end":1113,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<HashMap<K, V, S>>::symmetric_difference","value":"pub fn symmetric_difference(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two maps by discarding keys\n which occur in both maps.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two maps by discarding keys","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":287105,"byte_end":287179,"line_start":1096,"line_end":1096,"column_start":5,"column_end":79}},{"value":"/ which occur in both maps.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":287184,"byte_end":287213,"line_start":1097,"line_end":1097,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":287218,"byte_end":287221,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":287226,"byte_end":287246,"line_start":1099,"line_end":1099,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":287251,"byte_end":287254,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":287259,"byte_end":287273,"line_start":1101,"line_end":1101,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":287278,"byte_end":287281,"line_start":1102,"line_end":1102,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":287286,"byte_end":287293,"line_start":1103,"line_end":1103,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":287298,"byte_end":287333,"line_start":1104,"line_end":1104,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":287338,"byte_end":287369,"line_start":1105,"line_end":1105,"column_start":5,"column_end":36}},{"value":"/ let map1 = hashmap!{1 => 1, 3 => 4};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":287374,"byte_end":287414,"line_start":1106,"line_end":1106,"column_start":5,"column_end":45}},{"value":"/ let map2 = hashmap!{2 => 2, 3 => 5};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":287419,"byte_end":287459,"line_start":1107,"line_end":1107,"column_start":5,"column_end":45}},{"value":"/ let expected = hashmap!{1 => 1, 2 => 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":287464,"byte_end":287508,"line_start":1108,"line_end":1108,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(expected, map1.symmetric_difference(map2));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":287513,"byte_end":287571,"line_start":1109,"line_end":1109,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":287576,"byte_end":287583,"line_start":1110,"line_end":1110,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":287588,"byte_end":287597,"line_start":1111,"line_end":1111,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":287602,"byte_end":287613,"line_start":1112,"line_end":1112,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1852},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":288149,"byte_end":288164,"line_start":1128,"line_end":1128,"column_start":12,"column_end":27},"name":"difference_with","qualname":"<HashMap<K, V, S>>::difference_with","value":"pub fn difference_with<F>(Self, Self, F) -> Self where F: FnMut(V, V) ->\nOption<V>","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two maps by using a function\n to decide what to do if a key occurs in both.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two maps by using a function","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":287752,"byte_end":287827,"line_start":1117,"line_end":1117,"column_start":5,"column_end":80}},{"value":"/ to decide what to do if a key occurs in both.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":287832,"byte_end":287881,"line_start":1118,"line_end":1118,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":287886,"byte_end":287889,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ This is an alias for the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":287894,"byte_end":287922,"line_start":1120,"line_end":1120,"column_start":5,"column_end":33}},{"value":"/ [`symmetric_difference_with`][symmetric_difference_with] method.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":287927,"byte_end":287995,"line_start":1121,"line_end":1121,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":288000,"byte_end":288003,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":288008,"byte_end":288028,"line_start":1123,"line_end":1123,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":288033,"byte_end":288036,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ [symmetric_difference_with]: #method.symmetric_difference_with","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":288041,"byte_end":288107,"line_start":1125,"line_end":1125,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":288112,"byte_end":288121,"line_start":1126,"line_end":1126,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":288126,"byte_end":288137,"line_start":1127,"line_end":1127,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1854},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":288518,"byte_end":288543,"line_start":1141,"line_end":1141,"column_start":12,"column_end":37},"name":"symmetric_difference_with","qualname":"<HashMap<K, V, S>>::symmetric_difference_with","value":"pub fn symmetric_difference_with<F>(Self, Self, F) -> Self where\nF: FnMut(V, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two maps by using a function\n to decide what to do if a key occurs in both.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two maps by using a function","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":288314,"byte_end":288389,"line_start":1135,"line_end":1135,"column_start":5,"column_end":80}},{"value":"/ to decide what to do if a key occurs in both.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":288394,"byte_end":288443,"line_start":1136,"line_end":1136,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":288448,"byte_end":288451,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":288456,"byte_end":288476,"line_start":1138,"line_end":1138,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":288481,"byte_end":288490,"line_start":1139,"line_end":1139,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":288495,"byte_end":288506,"line_start":1140,"line_end":1140,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1857},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":289603,"byte_end":289622,"line_start":1174,"line_end":1174,"column_start":12,"column_end":31},"name":"difference_with_key","qualname":"<HashMap<K, V, S>>::difference_with_key","value":"pub fn difference_with_key<F>(Self, Self, F) -> Self where F: FnMut(&K, V, V)\n-> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two maps by using a function\n to decide what to do if a key occurs in both. The function\n receives the key as well as both values.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two maps by using a function","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":288717,"byte_end":288792,"line_start":1148,"line_end":1148,"column_start":5,"column_end":80}},{"value":"/ to decide what to do if a key occurs in both. The function","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":288797,"byte_end":288859,"line_start":1149,"line_end":1149,"column_start":5,"column_end":67}},{"value":"/ receives the key as well as both values.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":288864,"byte_end":288908,"line_start":1150,"line_end":1150,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":288913,"byte_end":288916,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ This is an alias for the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":288921,"byte_end":288949,"line_start":1152,"line_end":1152,"column_start":5,"column_end":33}},{"value":"/ [`symmetric_difference_with`_key][symmetric_difference_with_key]","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":288954,"byte_end":289022,"line_start":1153,"line_end":1153,"column_start":5,"column_end":73}},{"value":"/ method.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":289027,"byte_end":289038,"line_start":1154,"line_end":1154,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":289043,"byte_end":289046,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":289051,"byte_end":289071,"line_start":1156,"line_end":1156,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":289076,"byte_end":289079,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":289084,"byte_end":289098,"line_start":1158,"line_end":1158,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":289103,"byte_end":289106,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":289111,"byte_end":289118,"line_start":1160,"line_end":1160,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":289123,"byte_end":289158,"line_start":1161,"line_end":1161,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":289163,"byte_end":289194,"line_start":1162,"line_end":1162,"column_start":5,"column_end":36}},{"value":"/ let map1 = hashmap!{1 => 1, 3 => 4};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":289199,"byte_end":289239,"line_start":1163,"line_end":1163,"column_start":5,"column_end":45}},{"value":"/ let map2 = hashmap!{2 => 2, 3 => 5};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":289244,"byte_end":289284,"line_start":1164,"line_end":1164,"column_start":5,"column_end":45}},{"value":"/ let expected = hashmap!{1 => 1, 2 => 2, 3 => 9};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":289289,"byte_end":289341,"line_start":1165,"line_end":1165,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(expected, map1.difference_with_key(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":289346,"byte_end":289396,"line_start":1166,"line_end":1166,"column_start":5,"column_end":55}},{"value":"/     map2,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":289401,"byte_end":289414,"line_start":1167,"line_end":1167,"column_start":5,"column_end":18}},{"value":"/     |key, left, right| Some(left + right)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":289419,"byte_end":289464,"line_start":1168,"line_end":1168,"column_start":5,"column_end":50}},{"value":"/ ));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":289469,"byte_end":289476,"line_start":1169,"line_end":1169,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":289481,"byte_end":289488,"line_start":1170,"line_end":1170,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":289493,"byte_end":289496,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ [symmetric_difference_with_key]: #method.symmetric_difference_with_key","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":289501,"byte_end":289575,"line_start":1172,"line_end":1172,"column_start":5,"column_end":79}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":289580,"byte_end":289591,"line_start":1173,"line_end":1173,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1859},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":290459,"byte_end":290488,"line_start":1201,"line_end":1201,"column_start":12,"column_end":41},"name":"symmetric_difference_with_key","qualname":"<HashMap<K, V, S>>::symmetric_difference_with_key","value":"pub fn symmetric_difference_with_key<F>(Self, Self, F) -> Self where\nF: FnMut(&K, V, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two maps by using a function\n to decide what to do if a key occurs in both. The function\n receives the key as well as both values.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two maps by using a function","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":289780,"byte_end":289855,"line_start":1181,"line_end":1181,"column_start":5,"column_end":80}},{"value":"/ to decide what to do if a key occurs in both. The function","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":289860,"byte_end":289922,"line_start":1182,"line_end":1182,"column_start":5,"column_end":67}},{"value":"/ receives the key as well as both values.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":289927,"byte_end":289971,"line_start":1183,"line_end":1183,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":289976,"byte_end":289979,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":289984,"byte_end":290004,"line_start":1185,"line_end":1185,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":290009,"byte_end":290012,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":290017,"byte_end":290031,"line_start":1187,"line_end":1187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":290036,"byte_end":290039,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":290044,"byte_end":290051,"line_start":1189,"line_end":1189,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":290056,"byte_end":290091,"line_start":1190,"line_end":1190,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":290096,"byte_end":290127,"line_start":1191,"line_end":1191,"column_start":5,"column_end":36}},{"value":"/ let map1 = hashmap!{1 => 1, 3 => 4};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":290132,"byte_end":290172,"line_start":1192,"line_end":1192,"column_start":5,"column_end":45}},{"value":"/ let map2 = hashmap!{2 => 2, 3 => 5};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":290177,"byte_end":290217,"line_start":1193,"line_end":1193,"column_start":5,"column_end":45}},{"value":"/ let expected = hashmap!{1 => 1, 2 => 2, 3 => 9};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":290222,"byte_end":290274,"line_start":1194,"line_end":1194,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(expected, map1.symmetric_difference_with_key(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":290279,"byte_end":290339,"line_start":1195,"line_end":1195,"column_start":5,"column_end":65}},{"value":"/     map2,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":290344,"byte_end":290357,"line_start":1196,"line_end":1196,"column_start":5,"column_end":18}},{"value":"/     |key, left, right| Some(left + right)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":290362,"byte_end":290407,"line_start":1197,"line_end":1197,"column_start":5,"column_end":50}},{"value":"/ ));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":290412,"byte_end":290419,"line_start":1198,"line_end":1198,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":290424,"byte_end":290431,"line_start":1199,"line_end":1199,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":290436,"byte_end":290447,"line_start":1200,"line_end":1200,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1861},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291616,"byte_end":291635,"line_start":1238,"line_end":1238,"column_start":12,"column_end":31},"name":"relative_complement","qualname":"<HashMap<K, V, S>>::relative_complement","value":"pub fn relative_complement(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the relative complement between two maps by discarding keys\n which occur in `other`.","sig":null,"attributes":[{"value":"/ Construct the relative complement between two maps by discarding keys","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291076,"byte_end":291149,"line_start":1221,"line_end":1221,"column_start":5,"column_end":78}},{"value":"/ which occur in `other`.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291154,"byte_end":291181,"line_start":1222,"line_end":1222,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291186,"byte_end":291189,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8}},{"value":"/ Time: O(m log n) where m is the size of the other map","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291194,"byte_end":291251,"line_start":1224,"line_end":1224,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291256,"byte_end":291259,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291264,"byte_end":291278,"line_start":1226,"line_end":1226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291283,"byte_end":291286,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291291,"byte_end":291298,"line_start":1228,"line_end":1228,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291303,"byte_end":291338,"line_start":1229,"line_end":1229,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291343,"byte_end":291372,"line_start":1230,"line_end":1230,"column_start":5,"column_end":34}},{"value":"/ let map1 = ordmap!{1 => 1, 3 => 4};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291377,"byte_end":291416,"line_start":1231,"line_end":1231,"column_start":5,"column_end":44}},{"value":"/ let map2 = ordmap!{2 => 2, 3 => 5};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291421,"byte_end":291460,"line_start":1232,"line_end":1232,"column_start":5,"column_end":44}},{"value":"/ let expected = ordmap!{1 => 1};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291465,"byte_end":291500,"line_start":1233,"line_end":1233,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(expected, map1.relative_complement(map2));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291505,"byte_end":291562,"line_start":1234,"line_end":1234,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291567,"byte_end":291574,"line_start":1235,"line_end":1235,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291579,"byte_end":291588,"line_start":1236,"line_end":1236,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291593,"byte_end":291604,"line_start":1237,"line_end":1237,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1862},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":292262,"byte_end":292274,"line_start":1262,"line_end":1262,"column_start":12,"column_end":24},"name":"intersection","qualname":"<HashMap<K, V, S>>::intersection","value":"pub fn intersection(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the intersection of two maps, keeping the values\n from the current map.","sig":null,"attributes":[{"value":"/ Construct the intersection of two maps, keeping the values","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291774,"byte_end":291836,"line_start":1245,"line_end":1245,"column_start":5,"column_end":67}},{"value":"/ from the current map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291841,"byte_end":291866,"line_start":1246,"line_end":1246,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291871,"byte_end":291874,"line_start":1247,"line_end":1247,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291879,"byte_end":291899,"line_start":1248,"line_end":1248,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291904,"byte_end":291907,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291912,"byte_end":291926,"line_start":1250,"line_end":1250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291931,"byte_end":291934,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291939,"byte_end":291946,"line_start":1252,"line_end":1252,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291951,"byte_end":291986,"line_start":1253,"line_end":1253,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":291991,"byte_end":292022,"line_start":1254,"line_end":1254,"column_start":5,"column_end":36}},{"value":"/ let map1 = hashmap!{1 => 1, 2 => 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":292027,"byte_end":292067,"line_start":1255,"line_end":1255,"column_start":5,"column_end":45}},{"value":"/ let map2 = hashmap!{2 => 3, 3 => 4};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":292072,"byte_end":292112,"line_start":1256,"line_end":1256,"column_start":5,"column_end":45}},{"value":"/ let expected = hashmap!{2 => 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":292117,"byte_end":292153,"line_start":1257,"line_end":1257,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(expected, map1.intersection(map2));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":292158,"byte_end":292208,"line_start":1258,"line_end":1258,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":292213,"byte_end":292220,"line_start":1259,"line_end":1259,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":292225,"byte_end":292234,"line_start":1260,"line_end":1260,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":292239,"byte_end":292250,"line_start":1261,"line_end":1261,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1864},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":292600,"byte_end":292617,"line_start":1273,"line_end":1273,"column_start":12,"column_end":29},"name":"intersection_with","qualname":"<HashMap<K, V, S>>::intersection_with","value":"pub fn intersection_with<B, C, F>(Self, HashMap<K, B, S>, F)\n-> HashMap<K, C, S> where B: Clone, C: Clone, F: FnMut(V, B) -> C","parent":null,"children":[],"decl_id":null,"docs":" Construct the intersection of two maps, calling a function\n with both values for each key and using the result as the\n value for the key.","sig":null,"attributes":[{"value":"/ Construct the intersection of two maps, calling a function","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":292370,"byte_end":292432,"line_start":1266,"line_end":1266,"column_start":5,"column_end":67}},{"value":"/ with both values for each key and using the result as the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":292437,"byte_end":292498,"line_start":1267,"line_end":1267,"column_start":5,"column_end":66}},{"value":"/ value for the key.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":292503,"byte_end":292525,"line_start":1268,"line_end":1268,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":292530,"byte_end":292533,"line_start":1269,"line_end":1269,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":292538,"byte_end":292558,"line_start":1270,"line_end":1270,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":292563,"byte_end":292572,"line_start":1271,"line_end":1271,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":292577,"byte_end":292588,"line_start":1272,"line_end":1272,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1869},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":293470,"byte_end":293491,"line_start":1302,"line_end":1302,"column_start":12,"column_end":33},"name":"intersection_with_key","qualname":"<HashMap<K, V, S>>::intersection_with_key","value":"pub fn intersection_with_key<B, C, F>(Self, HashMap<K, B, S>, F)\n-> HashMap<K, C, S> where B: Clone, C: Clone, F: FnMut(&K, V, B) -> C","parent":null,"children":[],"decl_id":null,"docs":" Construct the intersection of two maps, calling a function\n with the key and both values for each key and using the result\n as the value for the key.","sig":null,"attributes":[{"value":"/ Construct the intersection of two maps, calling a function","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":292845,"byte_end":292907,"line_start":1282,"line_end":1282,"column_start":5,"column_end":67}},{"value":"/ with the key and both values for each key and using the result","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":292912,"byte_end":292978,"line_start":1283,"line_end":1283,"column_start":5,"column_end":71}},{"value":"/ as the value for the key.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":292983,"byte_end":293012,"line_start":1284,"line_end":1284,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":293017,"byte_end":293020,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":293025,"byte_end":293045,"line_start":1286,"line_end":1286,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":293050,"byte_end":293053,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":293058,"byte_end":293072,"line_start":1288,"line_end":1288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":293077,"byte_end":293080,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":293085,"byte_end":293092,"line_start":1290,"line_end":1290,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":293097,"byte_end":293132,"line_start":1291,"line_end":1291,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":293137,"byte_end":293168,"line_start":1292,"line_end":1292,"column_start":5,"column_end":36}},{"value":"/ let map1 = hashmap!{1 => 1, 2 => 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":293173,"byte_end":293213,"line_start":1293,"line_end":1293,"column_start":5,"column_end":45}},{"value":"/ let map2 = hashmap!{2 => 3, 3 => 4};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":293218,"byte_end":293258,"line_start":1294,"line_end":1294,"column_start":5,"column_end":45}},{"value":"/ let expected = hashmap!{2 => 5};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":293263,"byte_end":293299,"line_start":1295,"line_end":1295,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(expected, map1.intersection_with_key(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":293304,"byte_end":293356,"line_start":1296,"line_end":1296,"column_start":5,"column_end":57}},{"value":"/     map2,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":293361,"byte_end":293374,"line_start":1297,"line_end":1297,"column_start":5,"column_end":18}},{"value":"/     |key, left, right| left + right","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":293379,"byte_end":293418,"line_start":1298,"line_end":1298,"column_start":5,"column_end":44}},{"value":"/ ));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":293423,"byte_end":293430,"line_start":1299,"line_end":1299,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":293435,"byte_end":293442,"line_start":1300,"line_end":1300,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":293447,"byte_end":293458,"line_start":1301,"line_end":1301,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1878},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":294699,"byte_end":294707,"line_start":1346,"line_end":1346,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::hash::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":1873},"children":[],"decl_id":null,"docs":" An entry which exists in the map.\n","sig":null,"attributes":[{"value":"/ An entry which exists in the map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":294657,"byte_end":294694,"line_start":1345,"line_end":1345,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1881},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":294790,"byte_end":294796,"line_start":1348,"line_end":1348,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::hash::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":1873},"children":[],"decl_id":null,"docs":" An entry which doesn't exist in the map.\n","sig":null,"attributes":[{"value":"/ An entry which doesn't exist in the map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":294741,"byte_end":294785,"line_start":1347,"line_end":1347,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":1873},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":294566,"byte_end":294571,"line_start":1339,"line_end":1339,"column_start":10,"column_end":15},"name":"Entry","qualname":"::hash::map::Entry","value":"pub enum Entry<'a, K, V, S> where K: Hash + Eq + Clone, V: Clone,\n         S: BuildHasher {\n    Occupied(OccupiedEntry),\n    Vacant(VacantEntry),\n}","parent":null,"children":[{"krate":0,"index":1878},{"krate":0,"index":1881}],"decl_id":null,"docs":" A handle for a key and its associated value.","sig":null,"attributes":[{"value":"/ A handle for a key and its associated value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":294054,"byte_end":294102,"line_start":1328,"line_end":1328,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":294103,"byte_end":294106,"line_start":1329,"line_end":1329,"column_start":1,"column_end":4}},{"value":"/ ## Performance Note","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":294107,"byte_end":294130,"line_start":1330,"line_end":1330,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":294131,"byte_end":294134,"line_start":1331,"line_end":1331,"column_start":1,"column_end":4}},{"value":"/ When using an `Entry`, the key is only ever hashed once, when you","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":294135,"byte_end":294204,"line_start":1332,"line_end":1332,"column_start":1,"column_end":70}},{"value":"/ create the `Entry`. Operations on an `Entry` will never trigger a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":294205,"byte_end":294274,"line_start":1333,"line_end":1333,"column_start":1,"column_end":70}},{"value":"/ rehash, where eg. a `contains_key(key)` followed by an","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":294275,"byte_end":294333,"line_start":1334,"line_end":1334,"column_start":1,"column_end":59}},{"value":"/ `insert(key, default_value)` (the equivalent of","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":294334,"byte_end":294385,"line_start":1335,"line_end":1335,"column_start":1,"column_end":52}},{"value":"/ `Entry::or_insert()`) would need to hash the key once for the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":294386,"byte_end":294451,"line_start":1336,"line_end":1336,"column_start":1,"column_end":66}},{"value":"/ `contains_key` and again for the `insert`. The operations","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":294452,"byte_end":294513,"line_start":1337,"line_end":1337,"column_start":1,"column_end":62}},{"value":"/ generally perform similarly otherwise.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":294514,"byte_end":294556,"line_start":1338,"line_end":1338,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1889},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":295084,"byte_end":295093,"line_start":1359,"line_end":1359,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Insert the default value provided if there was no value\n already, and return a mutable reference to the value.\n","sig":null,"attributes":[{"value":"/ Insert the default value provided if there was no value","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":294951,"byte_end":295010,"line_start":1357,"line_end":1357,"column_start":5,"column_end":64}},{"value":"/ already, and return a mutable reference to the value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":295015,"byte_end":295072,"line_start":1358,"line_end":1358,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1891},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":295337,"byte_end":295351,"line_start":1366,"line_end":1366,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> &'a mut V where F: FnOnce() -> V","parent":null,"children":[],"decl_id":null,"docs":" Insert the default value from the provided function if there\n was no value already, and return a mutable reference to the\n value.\n","sig":null,"attributes":[{"value":"/ Insert the default value from the provided function if there","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":295178,"byte_end":295242,"line_start":1363,"line_end":1363,"column_start":5,"column_end":69}},{"value":"/ was no value already, and return a mutable reference to the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":295247,"byte_end":295310,"line_start":1364,"line_end":1364,"column_start":5,"column_end":68}},{"value":"/ value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":295315,"byte_end":295325,"line_start":1365,"line_end":1365,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1893},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":295709,"byte_end":295719,"line_start":1378,"line_end":1378,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"pub fn or_default(Self) -> &'a mut V where V: Default","parent":null,"children":[],"decl_id":null,"docs":" Insert a default value if there was no value already, and\n return a mutable reference to the value.\n","sig":null,"attributes":[{"value":"/ Insert a default value if there was no value already, and","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":295587,"byte_end":295648,"line_start":1376,"line_end":1376,"column_start":5,"column_end":66}},{"value":"/ return a mutable reference to the value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":295653,"byte_end":295697,"line_start":1377,"line_end":1377,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1894},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":295891,"byte_end":295894,"line_start":1387,"line_end":1387,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Get the key for this entry.\n","sig":null,"attributes":[{"value":"/ Get the key for this entry.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":295832,"byte_end":295863,"line_start":1385,"line_end":1385,"column_start":5,"column_end":36}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":295868,"byte_end":295879,"line_start":1386,"line_end":1386,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1895},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":296143,"byte_end":296153,"line_start":1396,"line_end":1396,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Call the provided function to modify the value if the value\n exists.\n","sig":null,"attributes":[{"value":"/ Call the provided function to modify the value if the value","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":296052,"byte_end":296115,"line_start":1394,"line_end":1394,"column_start":5,"column_end":68}},{"value":"/ exists.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":296120,"byte_end":296131,"line_start":1395,"line_end":1395,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1897},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":296454,"byte_end":296467,"line_start":1409,"line_end":1409,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::hash::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1904}],"decl_id":null,"docs":" An entry for a mapping that already exists in the map.\n","sig":null,"attributes":[{"value":"/ An entry for a mapping that already exists in the map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":296384,"byte_end":296442,"line_start":1408,"line_end":1408,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1910},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":296810,"byte_end":296813,"line_start":1428,"line_end":1428,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Get the key for this entry.\n","sig":null,"attributes":[{"value":"/ Get the key for this entry.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":296751,"byte_end":296782,"line_start":1426,"line_end":1426,"column_start":5,"column_end":36}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":296787,"byte_end":296798,"line_start":1427,"line_end":1427,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1911},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":296936,"byte_end":296948,"line_start":1433,"line_end":1433,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove this entry from the map and return the removed mapping.\n","sig":null,"attributes":[{"value":"/ Remove this entry from the map and return the removed mapping.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":296858,"byte_end":296924,"line_start":1432,"line_end":1432,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1912},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":297237,"byte_end":297240,"line_start":1442,"line_end":1442,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Get the current value.\n","sig":null,"attributes":[{"value":"/ Get the current value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":297183,"byte_end":297209,"line_start":1440,"line_end":1440,"column_start":5,"column_end":31}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":297214,"byte_end":297225,"line_start":1441,"line_end":1441,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1913},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":297407,"byte_end":297414,"line_start":1448,"line_end":1448,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the current value.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the current value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":297330,"byte_end":297379,"line_start":1446,"line_end":1446,"column_start":5,"column_end":54}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":297384,"byte_end":297395,"line_start":1447,"line_end":1447,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1914},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":297720,"byte_end":297728,"line_start":1458,"line_end":1458,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Convert this entry into a mutable reference.\n","sig":null,"attributes":[{"value":"/ Convert this entry into a mutable reference.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":297644,"byte_end":297692,"line_start":1456,"line_end":1456,"column_start":5,"column_end":53}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":297697,"byte_end":297708,"line_start":1457,"line_end":1457,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1915},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":298000,"byte_end":298006,"line_start":1467,"line_end":1467,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Overwrite the current value.\n","sig":null,"attributes":[{"value":"/ Overwrite the current value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":297956,"byte_end":297988,"line_start":1466,"line_end":1466,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1916},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":298166,"byte_end":298172,"line_start":1472,"line_end":1472,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove this entry from the map and return the removed value.\n","sig":null,"attributes":[{"value":"/ Remove this entry from the map and return the removed value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":298090,"byte_end":298154,"line_start":1471,"line_end":1471,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1917},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":298303,"byte_end":298314,"line_start":1478,"line_end":1478,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::hash::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924}],"decl_id":null,"docs":" An entry for a mapping that does not already exist in the map.\n","sig":null,"attributes":[{"value":"/ An entry for a mapping that does not already exist in the map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":298225,"byte_end":298291,"line_start":1477,"line_end":1477,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1930},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":298655,"byte_end":298658,"line_start":1497,"line_end":1497,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Get the key for this entry.\n","sig":null,"attributes":[{"value":"/ Get the key for this entry.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":298596,"byte_end":298627,"line_start":1495,"line_end":1495,"column_start":5,"column_end":36}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":298632,"byte_end":298643,"line_start":1496,"line_end":1496,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1931},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":298767,"byte_end":298775,"line_start":1503,"line_end":1503,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"pub fn into_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Convert this entry into its key.\n","sig":null,"attributes":[{"value":"/ Convert this entry into its key.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":298703,"byte_end":298739,"line_start":1501,"line_end":1501,"column_start":5,"column_end":41}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":298744,"byte_end":298755,"line_start":1502,"line_end":1502,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1932},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":298864,"byte_end":298870,"line_start":1508,"line_end":1508,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Insert a value into this entry.\n","sig":null,"attributes":[{"value":"/ Insert a value into this entry.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":298817,"byte_end":298852,"line_start":1507,"line_end":1507,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2016},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":305064,"byte_end":305068,"line_start":1795,"line_end":1795,"column_start":12,"column_end":16},"name":"Iter","qualname":"::hash::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":2020}],"decl_id":null,"docs":" An iterator over the elements of a map.\n","sig":null,"attributes":[{"value":"/ An iterator over the elements of a map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":305009,"byte_end":305052,"line_start":1794,"line_end":1794,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":2037},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":305554,"byte_end":305561,"line_start":1816,"line_end":1816,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::hash::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":2041}],"decl_id":null,"docs":" A mutable iterator over the elements of a map.\n","sig":null,"attributes":[{"value":"/ A mutable iterator over the elements of a map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":305492,"byte_end":305542,"line_start":1815,"line_end":1815,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2058},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":306205,"byte_end":306218,"line_start":1855,"line_end":1855,"column_start":12,"column_end":25},"name":"ConsumingIter","qualname":"::hash::map::ConsumingIter","value":"ConsumingIter {  }","parent":null,"children":[{"krate":0,"index":2060}],"decl_id":null,"docs":" A consuming iterator over the elements of a map.\n","sig":null,"attributes":[{"value":"/ A consuming iterator over the elements of a map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":306141,"byte_end":306193,"line_start":1854,"line_end":1854,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":2071},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":306737,"byte_end":306741,"line_start":1879,"line_end":1879,"column_start":12,"column_end":16},"name":"Keys","qualname":"::hash::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":2075}],"decl_id":null,"docs":" An iterator over the keys of a map.\n","sig":null,"attributes":[{"value":"/ An iterator over the keys of a map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":306686,"byte_end":306725,"line_start":1878,"line_end":1878,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2092},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":307204,"byte_end":307210,"line_start":1900,"line_end":1900,"column_start":12,"column_end":18},"name":"Values","qualname":"::hash::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":2096}],"decl_id":null,"docs":" An iterator over the values of a map.\n","sig":null,"attributes":[{"value":"/ An iterator over the values of a map.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":307151,"byte_end":307192,"line_start":1899,"line_end":1899,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":2192},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"set","qualname":"::hash::set","value":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","parent":null,"children":[{"krate":0,"index":2193},{"krate":0,"index":2196},{"krate":0,"index":2199},{"krate":0,"index":2202},{"krate":0,"index":2203},{"krate":0,"index":2206},{"krate":0,"index":2209},{"krate":0,"index":2210},{"krate":0,"index":2211},{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2216},{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2226},{"krate":0,"index":2229},{"krate":0,"index":2232},{"krate":0,"index":2233},{"krate":0,"index":2236},{"krate":0,"index":2239},{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2246},{"krate":0,"index":2249},{"krate":0,"index":2252},{"krate":0,"index":2253},{"krate":0,"index":2256},{"krate":0,"index":2259},{"krate":0,"index":2262},{"krate":0,"index":2265},{"krate":0,"index":2268},{"krate":0,"index":2271},{"krate":0,"index":2272},{"krate":0,"index":2275},{"krate":0,"index":2278},{"krate":0,"index":2281},{"krate":0,"index":3727},{"krate":0,"index":3731},{"krate":0,"index":3736},{"krate":0,"index":3739},{"krate":0,"index":2282},{"krate":0,"index":3742},{"krate":0,"index":3746},{"krate":0,"index":3749},{"krate":0,"index":3751},{"krate":0,"index":3753},{"krate":0,"index":3757},{"krate":0,"index":3759},{"krate":0,"index":3762},{"krate":0,"index":3765},{"krate":0,"index":3768},{"krate":0,"index":2289},{"krate":0,"index":2293},{"krate":0,"index":2298},{"krate":0,"index":2301},{"krate":0,"index":2304},{"krate":0,"index":2317},{"krate":0,"index":2328},{"krate":0,"index":2347},{"krate":0,"index":2351},{"krate":0,"index":2355},{"krate":0,"index":2358},{"krate":0,"index":2362},{"krate":0,"index":2366},{"krate":0,"index":2371},{"krate":0,"index":2375},{"krate":0,"index":2380},{"krate":0,"index":2385},{"krate":0,"index":2391},{"krate":0,"index":2397},{"krate":0,"index":2403},{"krate":0,"index":2409},{"krate":0,"index":2413},{"krate":0,"index":2417},{"krate":0,"index":2424},{"krate":0,"index":2427},{"krate":0,"index":2430},{"krate":0,"index":2433},{"krate":0,"index":2439},{"krate":0,"index":2441},{"krate":0,"index":2443},{"krate":0,"index":2449},{"krate":0,"index":2456},{"krate":0,"index":2462},{"krate":0,"index":2471},{"krate":0,"index":2476},{"krate":0,"index":2480},{"krate":0,"index":2485},{"krate":0,"index":2489},{"krate":0,"index":2494},{"krate":0,"index":2499},{"krate":0,"index":2503}],"decl_id":null,"docs":" An unordered set.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/mod.rs","byte_start":255185,"byte_end":255197,"line_start":7,"line_end":7,"column_start":1,"column_end":13}},{"value":"/ An unordered set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":323174,"byte_end":323195,"line_start":5,"line_end":5,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":323196,"byte_end":323199,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ An immutable hash set using [hash array mapped tries] [1].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":323200,"byte_end":323262,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":323263,"byte_end":323266,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Most operations on this set are O(log<sub>x</sub> n) for a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":323267,"byte_end":323329,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/ suitably high *x* that it should be nearly O(1) for most sets.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":323330,"byte_end":323396,"line_start":10,"line_end":10,"column_start":1,"column_end":67}},{"value":"/ Because of this, it's a great choice for a generic set as long as","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":323397,"byte_end":323466,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ you don't mind that values will need to implement","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":323467,"byte_end":323520,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/ [`Hash`][std::hash::Hash] and [`Eq`][std::cmp::Eq].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":323521,"byte_end":323576,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":323577,"byte_end":323580,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Values will have a predictable order based on the hasher","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":323581,"byte_end":323641,"line_start":15,"line_end":15,"column_start":1,"column_end":61}},{"value":"/ being used. Unless otherwise specified, this will be the standard","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":323642,"byte_end":323711,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/ [`RandomState`][std::collections::hash_map::RandomState] hasher.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":323712,"byte_end":323780,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":323781,"byte_end":323784,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Hash_array_mapped_trie","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":323785,"byte_end":323846,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ [std::cmp::Eq]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":323847,"byte_end":323914,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/ [std::hash::Hash]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":323915,"byte_end":323988,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/ [std::collections::hash_map::RandomState]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":323989,"byte_end":324110,"line_start":22,"line_end":22,"column_start":1,"column_end":122}}]},{"kind":"Struct","id":{"krate":0,"index":3727},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":325268,"byte_end":325279,"line_start":73,"line_end":73,"column_start":11,"column_end":22},"name":"HashSetPool","qualname":"::hash::set::HashSetPool","value":"","parent":null,"children":[],"decl_id":null,"docs":" A memory pool for the appropriate node type.\n","sig":null,"attributes":[{"value":"/ A memory pool for the appropriate node type.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/util.rs","byte_start":147360,"byte_end":147408,"line_start":110,"line_end":110,"column_start":9,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":2282},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":326250,"byte_end":326257,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"HashSet","qualname":"::hash::set::HashSet","value":"HashSet {  }","parent":null,"children":[{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2287},{"krate":0,"index":2288}],"decl_id":null,"docs":" An unordered set.","sig":null,"attributes":[{"value":"/ An unordered set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":325302,"byte_end":325323,"line_start":75,"line_end":75,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":325324,"byte_end":325327,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ An immutable hash set using [hash array mapped tries] [1].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":325328,"byte_end":325390,"line_start":77,"line_end":77,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":325391,"byte_end":325394,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Most operations on this set are O(log<sub>x</sub> n) for a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":325395,"byte_end":325457,"line_start":79,"line_end":79,"column_start":1,"column_end":63}},{"value":"/ suitably high *x* that it should be nearly O(1) for most sets.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":325458,"byte_end":325524,"line_start":80,"line_end":80,"column_start":1,"column_end":67}},{"value":"/ Because of this, it's a great choice for a generic set as long as","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":325525,"byte_end":325594,"line_start":81,"line_end":81,"column_start":1,"column_end":70}},{"value":"/ you don't mind that values will need to implement","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":325595,"byte_end":325648,"line_start":82,"line_end":82,"column_start":1,"column_end":54}},{"value":"/ [`Hash`][std::hash::Hash] and [`Eq`][std::cmp::Eq].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":325649,"byte_end":325704,"line_start":83,"line_end":83,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":325705,"byte_end":325708,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ Values will have a predictable order based on the hasher","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":325709,"byte_end":325769,"line_start":85,"line_end":85,"column_start":1,"column_end":61}},{"value":"/ being used. Unless otherwise specified, this will be the standard","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":325770,"byte_end":325839,"line_start":86,"line_end":86,"column_start":1,"column_end":70}},{"value":"/ [`RandomState`][std::collections::hash_map::RandomState] hasher.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":325840,"byte_end":325908,"line_start":87,"line_end":87,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":325909,"byte_end":325912,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Hash_array_mapped_trie","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":325913,"byte_end":325974,"line_start":89,"line_end":89,"column_start":1,"column_end":62}},{"value":"/ [std::cmp::Eq]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":325975,"byte_end":326042,"line_start":90,"line_end":90,"column_start":1,"column_end":68}},{"value":"/ [std::hash::Hash]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":326043,"byte_end":326116,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/ [std::collections::hash_map::RandomState]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":326117,"byte_end":326238,"line_start":92,"line_end":92,"column_start":1,"column_end":122}}]},{"kind":"Method","id":{"krate":0,"index":2300},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327007,"byte_end":327010,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"new","qualname":"<HashSet<A, RandomState>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty set.\n","sig":null,"attributes":[{"value":"/ Construct an empty set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":326952,"byte_end":326979,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":326984,"byte_end":326995,"line_start":129,"line_end":129,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2303},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327778,"byte_end":327782,"line_start":164,"line_end":164,"column_start":12,"column_end":16},"name":"unit","qualname":"<HashSet<A, RandomState>>::unit","value":"pub fn unit(A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a set with a single value.","sig":null,"attributes":[{"value":"/ Construct a set with a single value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327456,"byte_end":327496,"line_start":151,"line_end":151,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327501,"byte_end":327504,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327509,"byte_end":327523,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327528,"byte_end":327531,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327536,"byte_end":327543,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327548,"byte_end":327583,"line_start":156,"line_end":156,"column_start":5,"column_end":40}},{"value":"/ # use im::hashset::HashSet;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327588,"byte_end":327619,"line_start":157,"line_end":157,"column_start":5,"column_end":36}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327624,"byte_end":327649,"line_start":158,"line_end":158,"column_start":5,"column_end":30}},{"value":"/ let set = HashSet::unit(123);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327654,"byte_end":327687,"line_start":159,"line_end":159,"column_start":5,"column_end":38}},{"value":"/ assert!(set.contains(&123));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327692,"byte_end":327724,"line_start":160,"line_end":160,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327729,"byte_end":327736,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327741,"byte_end":327750,"line_start":162,"line_end":162,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327755,"byte_end":327766,"line_start":163,"line_end":163,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2307},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328247,"byte_end":328255,"line_start":188,"line_end":188,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashSet<A, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether a set is empty.","sig":null,"attributes":[{"value":"/ Test whether a set is empty.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327872,"byte_end":327904,"line_start":170,"line_end":170,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327909,"byte_end":327912,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327917,"byte_end":327931,"line_start":172,"line_end":172,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327936,"byte_end":327939,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327944,"byte_end":327958,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327963,"byte_end":327966,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327971,"byte_end":327978,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327983,"byte_end":328018,"line_start":177,"line_end":177,"column_start":5,"column_end":40}},{"value":"/ # use im::hashset::HashSet;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328023,"byte_end":328054,"line_start":178,"line_end":178,"column_start":5,"column_end":36}},{"value":"/ assert!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328059,"byte_end":328071,"line_start":179,"line_end":179,"column_start":5,"column_end":17}},{"value":"/   !hashset![1, 2, 3].is_empty()","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328076,"byte_end":328111,"line_start":180,"line_end":180,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328116,"byte_end":328122,"line_start":181,"line_end":181,"column_start":5,"column_end":11}},{"value":"/ assert!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328127,"byte_end":328139,"line_start":182,"line_end":182,"column_start":5,"column_end":17}},{"value":"/   HashSet::<i32>::new().is_empty()","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328144,"byte_end":328182,"line_start":183,"line_end":183,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328187,"byte_end":328193,"line_start":184,"line_end":184,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328198,"byte_end":328205,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328210,"byte_end":328219,"line_start":186,"line_end":186,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328224,"byte_end":328235,"line_start":187,"line_end":187,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2308},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328586,"byte_end":328589,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"len","qualname":"<HashSet<A, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the size of a set.","sig":null,"attributes":[{"value":"/ Get the size of a set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328308,"byte_end":328334,"line_start":192,"line_end":192,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328339,"byte_end":328342,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328347,"byte_end":328361,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328366,"byte_end":328369,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328374,"byte_end":328388,"line_start":196,"line_end":196,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328393,"byte_end":328396,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328401,"byte_end":328408,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328413,"byte_end":328448,"line_start":199,"line_end":199,"column_start":5,"column_end":40}},{"value":"/ # use im::hashset::HashSet;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328453,"byte_end":328484,"line_start":200,"line_end":200,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(3, hashset![1, 2, 3].len());","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328489,"byte_end":328532,"line_start":201,"line_end":201,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328537,"byte_end":328544,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328549,"byte_end":328558,"line_start":203,"line_end":203,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328563,"byte_end":328574,"line_start":204,"line_end":204,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2309},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":329013,"byte_end":329019,"line_start":218,"line_end":218,"column_start":12,"column_end":18},"name":"ptr_eq","qualname":"<HashSet<A, S>>::ptr_eq","value":"pub fn ptr_eq(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether two sets refer to the same content in memory.","sig":null,"attributes":[{"value":"/ Test whether two sets refer to the same content in memory.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328637,"byte_end":328699,"line_start":209,"line_end":209,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328704,"byte_end":328707,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ This is true if the two sides are references to the same set,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328712,"byte_end":328777,"line_start":211,"line_end":211,"column_start":5,"column_end":70}},{"value":"/ or if the two sets refer to the same root node.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328782,"byte_end":328833,"line_start":212,"line_end":212,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328838,"byte_end":328841,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ This would return true if you're comparing a set to itself, or","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328846,"byte_end":328912,"line_start":214,"line_end":214,"column_start":5,"column_end":71}},{"value":"/ if you're comparing a set to a fresh clone of itself.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328917,"byte_end":328974,"line_start":215,"line_end":215,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328979,"byte_end":328982,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":328987,"byte_end":329001,"line_start":217,"line_end":217,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2310},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":329536,"byte_end":329547,"line_start":234,"line_end":234,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<HashSet<A, S>>::with_hasher","value":"pub fn with_hasher<RS>(RS) -> Self where Ref<S>: From<RS>","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty hash set using the provided hasher.\n","sig":null,"attributes":[{"value":"/ Construct an empty hash set using the provided hasher.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":329436,"byte_end":329494,"line_start":231,"line_end":231,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":329499,"byte_end":329508,"line_start":232,"line_end":232,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":329513,"byte_end":329524,"line_start":233,"line_end":233,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2312},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":330465,"byte_end":330471,"line_start":269,"line_end":269,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashSet<A, S>>::hasher","value":"pub fn hasher(&Self) -> &Ref<S>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the set's [`BuildHasher`][BuildHasher].","sig":null,"attributes":[{"value":"/ Get a reference to the set's [`BuildHasher`][BuildHasher].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":330286,"byte_end":330348,"line_start":265,"line_end":265,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":330353,"byte_end":330356,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ [BuildHasher]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":330361,"byte_end":330437,"line_start":267,"line_end":267,"column_start":5,"column_end":81}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":330442,"byte_end":330453,"line_start":268,"line_end":268,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2313},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":330644,"byte_end":330652,"line_start":276,"line_end":276,"column_start":12,"column_end":20},"name":"new_from","qualname":"<HashSet<A, S>>::new_from","value":"pub fn new_from<A1>(&Self) -> HashSet<A1, S> where A1: Hash + Eq + Clone","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty hash set using the same hasher as the current hash set.\n","sig":null,"attributes":[{"value":"/ Construct an empty hash set using the same hasher as the current hash set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":330524,"byte_end":330602,"line_start":273,"line_end":273,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":330607,"byte_end":330616,"line_start":274,"line_end":274,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":330621,"byte_end":330632,"line_start":275,"line_end":275,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2315},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":331373,"byte_end":331378,"line_start":306,"line_end":306,"column_start":12,"column_end":17},"name":"clear","qualname":"<HashSet<A, S>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Discard all elements from the set.","sig":null,"attributes":[{"value":"/ Discard all elements from the set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":330955,"byte_end":330993,"line_start":290,"line_end":290,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":330998,"byte_end":331001,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ This leaves you with an empty set, and all elements that","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":331006,"byte_end":331066,"line_start":292,"line_end":292,"column_start":5,"column_end":65}},{"value":"/ were previously inside it are dropped.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":331071,"byte_end":331113,"line_start":293,"line_end":293,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":331118,"byte_end":331121,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":331126,"byte_end":331140,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":331145,"byte_end":331148,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":331153,"byte_end":331167,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":331172,"byte_end":331175,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":331180,"byte_end":331187,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":331192,"byte_end":331227,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/ # use im::HashSet;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":331232,"byte_end":331254,"line_start":301,"line_end":301,"column_start":5,"column_end":27}},{"value":"/ let mut set = hashset![1, 2, 3];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":331259,"byte_end":331295,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ set.clear();","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":331300,"byte_end":331316,"line_start":303,"line_end":303,"column_start":5,"column_end":21}},{"value":"/ assert!(set.is_empty());","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":331321,"byte_end":331349,"line_start":304,"line_end":304,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":331354,"byte_end":331361,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2316},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":331907,"byte_end":331911,"line_start":321,"line_end":321,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashSet<A, S>>::iter","value":"pub fn iter(&Self) -> Iter<, A>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the values in a hash set.","sig":null,"attributes":[{"value":"/ Get an iterator over the values in a hash set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":331526,"byte_end":331576,"line_start":313,"line_end":313,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":331581,"byte_end":331584,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ Please note that the order is consistent between sets using","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":331589,"byte_end":331652,"line_start":315,"line_end":315,"column_start":5,"column_end":68}},{"value":"/ the same hasher, but no other ordering guarantee is offered.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":331657,"byte_end":331721,"line_start":316,"line_end":316,"column_start":5,"column_end":69}},{"value":"/ Items will not come out in insertion order or sort order.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":331726,"byte_end":331787,"line_start":317,"line_end":317,"column_start":5,"column_end":66}},{"value":"/ They will, however, come out in the same order every time for","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":331792,"byte_end":331857,"line_start":318,"line_end":318,"column_start":5,"column_end":70}},{"value":"/ the same set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":331862,"byte_end":331879,"line_start":319,"line_end":319,"column_start":5,"column_end":22}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":331884,"byte_end":331895,"line_start":320,"line_end":320,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2321},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":332680,"byte_end":332688,"line_start":356,"line_end":356,"column_start":12,"column_end":20},"name":"contains","qualname":"<HashSet<A, S>>::contains","value":"pub fn contains<BA>(&Self, &BA) -> bool where BA: Hash + Eq + ?Sized,\nA: Borrow<BA>","parent":null,"children":[],"decl_id":null,"docs":" Test if a value is part of a set.","sig":null,"attributes":[{"value":"/ Test if a value is part of a set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":332584,"byte_end":332621,"line_start":352,"line_end":352,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":332626,"byte_end":332629,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":332634,"byte_end":332652,"line_start":354,"line_end":354,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":332657,"byte_end":332668,"line_start":355,"line_end":355,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2323},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":333049,"byte_end":333058,"line_start":369,"line_end":369,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<HashSet<A, S>>::is_subset","value":"pub fn is_subset<RS>(&Self, RS) -> bool where RS: Borrow<Self>","parent":null,"children":[],"decl_id":null,"docs":" Test whether a set is a subset of another set, meaning that\n all values in our set must also be in the other set.","sig":null,"attributes":[{"value":"/ Test whether a set is a subset of another set, meaning that","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":332864,"byte_end":332927,"line_start":364,"line_end":364,"column_start":5,"column_end":68}},{"value":"/ all values in our set must also be in the other set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":332932,"byte_end":332988,"line_start":365,"line_end":365,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":332993,"byte_end":332996,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":333001,"byte_end":333021,"line_start":367,"line_end":367,"column_start":5,"column_end":25}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":333026,"byte_end":333037,"line_start":368,"line_end":368,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2326},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":333475,"byte_end":333491,"line_start":383,"line_end":383,"column_start":12,"column_end":28},"name":"is_proper_subset","qualname":"<HashSet<A, S>>::is_proper_subset","value":"pub fn is_proper_subset<RS>(&Self, RS) -> bool where RS: Borrow<Self>","parent":null,"children":[],"decl_id":null,"docs":" Test whether a set is a proper subset of another set, meaning\n that all values in our set must also be in the other set. A\n proper subset must also be smaller than the other set.","sig":null,"attributes":[{"value":"/ Test whether a set is a proper subset of another set, meaning","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":333218,"byte_end":333283,"line_start":377,"line_end":377,"column_start":5,"column_end":70}},{"value":"/ that all values in our set must also be in the other set. A","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":333288,"byte_end":333351,"line_start":378,"line_end":378,"column_start":5,"column_end":68}},{"value":"/ proper subset must also be smaller than the other set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":333356,"byte_end":333414,"line_start":379,"line_end":379,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":333419,"byte_end":333422,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":333427,"byte_end":333447,"line_start":381,"line_end":381,"column_start":5,"column_end":25}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":333452,"byte_end":333463,"line_start":382,"line_end":382,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2331},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":333811,"byte_end":333817,"line_start":400,"line_end":400,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashSet<A, S>>::insert","value":"pub fn insert(&mut Self, A) -> Option<A>","parent":null,"children":[],"decl_id":null,"docs":" Insert a value into a set.","sig":null,"attributes":[{"value":"/ Insert a value into a set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":333724,"byte_end":333754,"line_start":396,"line_end":396,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":333759,"byte_end":333762,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":333767,"byte_end":333785,"line_start":398,"line_end":398,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":333790,"byte_end":333799,"line_start":399,"line_end":399,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2332},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":334278,"byte_end":334284,"line_start":415,"line_end":415,"column_start":12,"column_end":18},"name":"remove","qualname":"<HashSet<A, S>>::remove","value":"pub fn remove<BA>(&mut Self, &BA) -> Option<A> where BA: Hash + Eq + ?Sized,\nA: Borrow<BA>","parent":null,"children":[],"decl_id":null,"docs":" Remove a value from a set if it exists.","sig":null,"attributes":[{"value":"/ Remove a value from a set if it exists.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":334192,"byte_end":334235,"line_start":412,"line_end":412,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":334240,"byte_end":334243,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":334248,"byte_end":334266,"line_start":414,"line_end":414,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2335},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":335073,"byte_end":335079,"line_start":446,"line_end":446,"column_start":12,"column_end":18},"name":"update","qualname":"<HashSet<A, S>>::update","value":"pub fn update(&Self, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new set from the current set with the given value\n added.","sig":null,"attributes":[{"value":"/ Construct a new set from the current set with the given value","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":334649,"byte_end":334714,"line_start":428,"line_end":428,"column_start":5,"column_end":70}},{"value":"/ added.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":334719,"byte_end":334729,"line_start":429,"line_end":429,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":334734,"byte_end":334737,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":334742,"byte_end":334760,"line_start":431,"line_end":431,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":334765,"byte_end":334768,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":334773,"byte_end":334787,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":334792,"byte_end":334795,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":334800,"byte_end":334807,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":334812,"byte_end":334847,"line_start":436,"line_end":436,"column_start":5,"column_end":40}},{"value":"/ # use im::hashset::HashSet;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":334852,"byte_end":334883,"line_start":437,"line_end":437,"column_start":5,"column_end":36}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":334888,"byte_end":334913,"line_start":438,"line_end":438,"column_start":5,"column_end":30}},{"value":"/ let set = hashset![123];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":334918,"byte_end":334946,"line_start":439,"line_end":439,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":334951,"byte_end":334966,"line_start":440,"line_end":440,"column_start":5,"column_end":20}},{"value":"/   set.update(456),","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":334971,"byte_end":334993,"line_start":441,"line_end":441,"column_start":5,"column_end":27}},{"value":"/   hashset![123, 456]","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":334998,"byte_end":335022,"line_start":442,"line_end":442,"column_start":5,"column_end":29}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":335027,"byte_end":335033,"line_start":443,"line_end":443,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":335038,"byte_end":335045,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":335050,"byte_end":335061,"line_start":445,"line_end":445,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2336},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":335324,"byte_end":335331,"line_start":457,"line_end":457,"column_start":12,"column_end":19},"name":"without","qualname":"<HashSet<A, S>>::without","value":"pub fn without<BA>(&Self, &BA) -> Self where BA: Hash + Eq + ?Sized,\nA: Borrow<BA>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new set with the given value removed if it's in\n the set.","sig":null,"attributes":[{"value":"/ Construct a new set with the given value removed if it's in","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":335185,"byte_end":335248,"line_start":452,"line_end":452,"column_start":5,"column_end":68}},{"value":"/ the set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":335253,"byte_end":335265,"line_start":453,"line_end":453,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":335270,"byte_end":335273,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":335278,"byte_end":335296,"line_start":455,"line_end":455,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":335301,"byte_end":335312,"line_start":456,"line_end":456,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2338},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":336128,"byte_end":336134,"line_start":486,"line_end":486,"column_start":12,"column_end":18},"name":"retain","qualname":"<HashSet<A, S>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&A) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Filter out values from a set which don't satisfy a predicate.","sig":null,"attributes":[{"value":"/ Filter out values from a set which don't satisfy a predicate.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":335512,"byte_end":335577,"line_start":467,"line_end":467,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":335582,"byte_end":335585,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ This is slightly more efficient than filtering using an","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":335590,"byte_end":335649,"line_start":469,"line_end":469,"column_start":5,"column_end":64}},{"value":"/ iterator, in that it doesn't need to rehash the retained","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":335654,"byte_end":335714,"line_start":470,"line_end":470,"column_start":5,"column_end":65}},{"value":"/ values, but it still needs to reconstruct the entire tree","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":335719,"byte_end":335780,"line_start":471,"line_end":471,"column_start":5,"column_end":66}},{"value":"/ structure of the set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":335785,"byte_end":335810,"line_start":472,"line_end":472,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":335815,"byte_end":335818,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":335823,"byte_end":335843,"line_start":474,"line_end":474,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":335848,"byte_end":335851,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":335856,"byte_end":335870,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":335875,"byte_end":335878,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":335883,"byte_end":335890,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":335895,"byte_end":335930,"line_start":479,"line_end":479,"column_start":5,"column_end":40}},{"value":"/ # use im::HashSet;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":335935,"byte_end":335957,"line_start":480,"line_end":480,"column_start":5,"column_end":27}},{"value":"/ let mut set = hashset![1, 2, 3];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":335962,"byte_end":335998,"line_start":481,"line_end":481,"column_start":5,"column_end":41}},{"value":"/ set.retain(|v| *v > 1);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":336003,"byte_end":336030,"line_start":482,"line_end":482,"column_start":5,"column_end":32}},{"value":"/ let expected = hashset![2, 3];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":336035,"byte_end":336069,"line_start":483,"line_end":483,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(expected, set);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":336074,"byte_end":336104,"line_start":484,"line_end":484,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":336109,"byte_end":336116,"line_start":485,"line_end":485,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2340},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":336923,"byte_end":336928,"line_start":514,"line_end":514,"column_start":12,"column_end":17},"name":"union","qualname":"<HashSet<A, S>>::union","value":"pub fn union(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of two sets.","sig":null,"attributes":[{"value":"/ Construct the union of two sets.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":336531,"byte_end":336567,"line_start":499,"line_end":499,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":336572,"byte_end":336575,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":336580,"byte_end":336600,"line_start":501,"line_end":501,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":336605,"byte_end":336608,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":336613,"byte_end":336627,"line_start":503,"line_end":503,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":336632,"byte_end":336635,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":336640,"byte_end":336647,"line_start":505,"line_end":505,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":336652,"byte_end":336687,"line_start":506,"line_end":506,"column_start":5,"column_end":40}},{"value":"/ # use im::hashset::HashSet;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":336692,"byte_end":336723,"line_start":507,"line_end":507,"column_start":5,"column_end":36}},{"value":"/ let set1 = hashset!{1, 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":336728,"byte_end":336758,"line_start":508,"line_end":508,"column_start":5,"column_end":35}},{"value":"/ let set2 = hashset!{2, 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":336763,"byte_end":336793,"line_start":509,"line_end":509,"column_start":5,"column_end":35}},{"value":"/ let expected = hashset!{1, 2, 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":336798,"byte_end":336835,"line_start":510,"line_end":510,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(expected, set1.union(set2));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":336840,"byte_end":336883,"line_start":511,"line_end":511,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":336888,"byte_end":336895,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":336900,"byte_end":336911,"line_start":513,"line_end":513,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2341},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":337159,"byte_end":337165,"line_start":525,"line_end":525,"column_start":12,"column_end":18},"name":"unions","qualname":"<HashSet<A, S>>::unions","value":"pub fn unions<I>(I) -> Self where I: IntoIterator<Item = Self>, S: Default","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of multiple sets.","sig":null,"attributes":[{"value":"/ Construct the union of multiple sets.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":337057,"byte_end":337098,"line_start":521,"line_end":521,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":337103,"byte_end":337106,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":337111,"byte_end":337131,"line_start":523,"line_end":523,"column_start":5,"column_end":25}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":337136,"byte_end":337147,"line_start":524,"line_end":524,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2343},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":337912,"byte_end":337922,"line_start":553,"line_end":553,"column_start":12,"column_end":22},"name":"difference","qualname":"<HashSet<A, S>>::difference","value":"pub fn difference(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two sets.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two sets.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":337325,"byte_end":337381,"line_start":533,"line_end":533,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":337386,"byte_end":337389,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ This is an alias for the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":337394,"byte_end":337422,"line_start":535,"line_end":535,"column_start":5,"column_end":33}},{"value":"/ [`symmetric_difference`][symmetric_difference] method.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":337427,"byte_end":337485,"line_start":536,"line_end":536,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":337490,"byte_end":337493,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":337498,"byte_end":337518,"line_start":538,"line_end":538,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":337523,"byte_end":337526,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":337531,"byte_end":337545,"line_start":540,"line_end":540,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":337550,"byte_end":337553,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":337558,"byte_end":337565,"line_start":542,"line_end":542,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":337570,"byte_end":337605,"line_start":543,"line_end":543,"column_start":5,"column_end":40}},{"value":"/ # use im::hashset::HashSet;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":337610,"byte_end":337641,"line_start":544,"line_end":544,"column_start":5,"column_end":36}},{"value":"/ let set1 = hashset!{1, 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":337646,"byte_end":337676,"line_start":545,"line_end":545,"column_start":5,"column_end":35}},{"value":"/ let set2 = hashset!{2, 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":337681,"byte_end":337711,"line_start":546,"line_end":546,"column_start":5,"column_end":35}},{"value":"/ let expected = hashset!{1, 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":337716,"byte_end":337750,"line_start":547,"line_end":547,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(expected, set1.difference(set2));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":337755,"byte_end":337803,"line_start":548,"line_end":548,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":337808,"byte_end":337815,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":337820,"byte_end":337823,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ [symmetric_difference]: #method.symmetric_difference","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":337828,"byte_end":337884,"line_start":551,"line_end":551,"column_start":5,"column_end":61}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":337889,"byte_end":337900,"line_start":552,"line_end":552,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2344},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338428,"byte_end":338448,"line_start":572,"line_end":572,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<HashSet<A, S>>::symmetric_difference","value":"pub fn symmetric_difference(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two sets.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two sets.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338004,"byte_end":338060,"line_start":557,"line_end":557,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338065,"byte_end":338068,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338073,"byte_end":338093,"line_start":559,"line_end":559,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338098,"byte_end":338101,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338106,"byte_end":338120,"line_start":561,"line_end":561,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338125,"byte_end":338128,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338133,"byte_end":338140,"line_start":563,"line_end":563,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338145,"byte_end":338180,"line_start":564,"line_end":564,"column_start":5,"column_end":40}},{"value":"/ # use im::hashset::HashSet;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338185,"byte_end":338216,"line_start":565,"line_end":565,"column_start":5,"column_end":36}},{"value":"/ let set1 = hashset!{1, 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338221,"byte_end":338251,"line_start":566,"line_end":566,"column_start":5,"column_end":35}},{"value":"/ let set2 = hashset!{2, 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338256,"byte_end":338286,"line_start":567,"line_end":567,"column_start":5,"column_end":35}},{"value":"/ let expected = hashset!{1, 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338291,"byte_end":338325,"line_start":568,"line_end":568,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(expected, set1.symmetric_difference(set2));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338330,"byte_end":338388,"line_start":569,"line_end":569,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338393,"byte_end":338400,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338405,"byte_end":338416,"line_start":571,"line_end":571,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2345},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":339167,"byte_end":339186,"line_start":597,"line_end":597,"column_start":12,"column_end":31},"name":"relative_complement","qualname":"<HashSet<A, S>>::relative_complement","value":"pub fn relative_complement(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the relative complement between two sets, that is the set\n of values in `self` that do not occur in `other`.","sig":null,"attributes":[{"value":"/ Construct the relative complement between two sets, that is the set","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338642,"byte_end":338713,"line_start":581,"line_end":581,"column_start":5,"column_end":76}},{"value":"/ of values in `self` that do not occur in `other`.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338718,"byte_end":338771,"line_start":582,"line_end":582,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338776,"byte_end":338779,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ Time: O(m log n) where m is the size of the other set","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338784,"byte_end":338841,"line_start":584,"line_end":584,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338846,"byte_end":338849,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338854,"byte_end":338868,"line_start":586,"line_end":586,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338873,"byte_end":338876,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338881,"byte_end":338888,"line_start":588,"line_end":588,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338893,"byte_end":338928,"line_start":589,"line_end":589,"column_start":5,"column_end":40}},{"value":"/ # use im::ordset::OrdSet;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338933,"byte_end":338962,"line_start":590,"line_end":590,"column_start":5,"column_end":34}},{"value":"/ let set1 = ordset!{1, 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":338967,"byte_end":338996,"line_start":591,"line_end":591,"column_start":5,"column_end":34}},{"value":"/ let set2 = ordset!{2, 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":339001,"byte_end":339030,"line_start":592,"line_end":592,"column_start":5,"column_end":34}},{"value":"/ let expected = ordset!{1};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":339035,"byte_end":339065,"line_start":593,"line_end":593,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(expected, set1.relative_complement(set2));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":339070,"byte_end":339127,"line_start":594,"line_end":594,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":339132,"byte_end":339139,"line_start":595,"line_end":595,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":339144,"byte_end":339155,"line_start":596,"line_end":596,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2346},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":339724,"byte_end":339736,"line_start":619,"line_end":619,"column_start":12,"column_end":24},"name":"intersection","qualname":"<HashSet<A, S>>::intersection","value":"pub fn intersection(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the intersection of two sets.","sig":null,"attributes":[{"value":"/ Construct the intersection of two sets.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":339324,"byte_end":339367,"line_start":604,"line_end":604,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":339372,"byte_end":339375,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":339380,"byte_end":339400,"line_start":606,"line_end":606,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":339405,"byte_end":339408,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":339413,"byte_end":339427,"line_start":608,"line_end":608,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":339432,"byte_end":339435,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":339440,"byte_end":339447,"line_start":610,"line_end":610,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":339452,"byte_end":339487,"line_start":611,"line_end":611,"column_start":5,"column_end":40}},{"value":"/ # use im::hashset::HashSet;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":339492,"byte_end":339523,"line_start":612,"line_end":612,"column_start":5,"column_end":36}},{"value":"/ let set1 = hashset!{1, 2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":339528,"byte_end":339558,"line_start":613,"line_end":613,"column_start":5,"column_end":35}},{"value":"/ let set2 = hashset!{2, 3};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":339563,"byte_end":339593,"line_start":614,"line_end":614,"column_start":5,"column_end":35}},{"value":"/ let expected = hashset!{2};","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":339598,"byte_end":339629,"line_start":615,"line_end":615,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(expected, set1.intersection(set2));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":339634,"byte_end":339684,"line_start":616,"line_end":616,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":339689,"byte_end":339696,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":339701,"byte_end":339712,"line_start":618,"line_end":618,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2413},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":344000,"byte_end":344004,"line_start":836,"line_end":836,"column_start":12,"column_end":16},"name":"Iter","qualname":"::hash::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":2416}],"decl_id":null,"docs":" An iterator over the elements of a set.\n","sig":null,"attributes":[{"value":"/ An iterator over the elements of a set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":343945,"byte_end":343988,"line_start":835,"line_end":835,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":2430},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":344474,"byte_end":344487,"line_start":860,"line_end":860,"column_start":12,"column_end":25},"name":"ConsumingIter","qualname":"::hash::set::ConsumingIter","value":"ConsumingIter {  }","parent":null,"children":[{"krate":0,"index":2432}],"decl_id":null,"docs":" A consuming iterator over the elements of a set.\n","sig":null,"attributes":[{"value":"/ A consuming iterator over the elements of a set.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":344410,"byte_end":344462,"line_start":859,"line_end":859,"column_start":1,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":2514},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vector","qualname":"::vector","value":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","parent":null,"children":[{"krate":0,"index":2515},{"krate":0,"index":2518},{"krate":0,"index":2521},{"krate":0,"index":2522},{"krate":0,"index":2523},{"krate":0,"index":2525},{"krate":0,"index":2526},{"krate":0,"index":2528},{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2535},{"krate":0,"index":2538},{"krate":0,"index":2541},{"krate":0,"index":2542},{"krate":0,"index":2545},{"krate":0,"index":2548},{"krate":0,"index":2549},{"krate":0,"index":2552},{"krate":0,"index":2555},{"krate":0,"index":2556},{"krate":0,"index":2559},{"krate":0,"index":2562},{"krate":0,"index":2565},{"krate":0,"index":2568},{"krate":0,"index":2571},{"krate":0,"index":2572},{"krate":0,"index":2575},{"krate":0,"index":2578},{"krate":0,"index":2579},{"krate":0,"index":2582},{"krate":0,"index":2585},{"krate":0,"index":2588},{"krate":0,"index":2591},{"krate":0,"index":2594},{"krate":0,"index":2595},{"krate":0,"index":2598},{"krate":0,"index":2601},{"krate":0,"index":2604},{"krate":0,"index":2607},{"krate":0,"index":2610},{"krate":0,"index":2613},{"krate":0,"index":2616},{"krate":0,"index":2619},{"krate":0,"index":2620},{"krate":0,"index":2621},{"krate":0,"index":2623},{"krate":0,"index":2624},{"krate":0,"index":2626},{"krate":0,"index":2627},{"krate":0,"index":2629},{"krate":0,"index":2822},{"krate":0,"index":2823},{"krate":0,"index":2826},{"krate":0,"index":2829},{"krate":0,"index":2861},{"krate":0,"index":2864},{"krate":0,"index":2965},{"krate":0,"index":2966},{"krate":0,"index":2969},{"krate":0,"index":2983},{"krate":0,"index":2992},{"krate":0,"index":2995},{"krate":0,"index":3034},{"krate":0,"index":3060},{"krate":0,"index":3070},{"krate":0,"index":3072},{"krate":0,"index":3075},{"krate":0,"index":3078},{"krate":0,"index":3081},{"krate":0,"index":3084},{"krate":0,"index":3086},{"krate":0,"index":3089},{"krate":0,"index":3092},{"krate":0,"index":3096},{"krate":0,"index":3101},{"krate":0,"index":3105},{"krate":0,"index":3110},{"krate":0,"index":3114},{"krate":0,"index":3118},{"krate":0,"index":3121},{"krate":0,"index":3127},{"krate":0,"index":3132},{"krate":0,"index":3136},{"krate":0,"index":3143},{"krate":0,"index":3147},{"krate":0,"index":3150},{"krate":0,"index":3154},{"krate":0,"index":3160},{"krate":0,"index":3165},{"krate":0,"index":3171},{"krate":0,"index":3175},{"krate":0,"index":3178},{"krate":0,"index":3181},{"krate":0,"index":3187},{"krate":0,"index":3192},{"krate":0,"index":3198},{"krate":0,"index":3202},{"krate":0,"index":3205},{"krate":0,"index":3208},{"krate":0,"index":3211},{"krate":0,"index":3214},{"krate":0,"index":3219},{"krate":0,"index":3222},{"krate":0,"index":3224},{"krate":0,"index":3226},{"krate":0,"index":3232},{"krate":0,"index":3236},{"krate":0,"index":3241},{"krate":0,"index":3245},{"krate":0,"index":3248},{"krate":0,"index":3254},{"krate":0,"index":3258},{"krate":0,"index":3263},{"krate":0,"index":3267}],"decl_id":null,"docs":" A persistent vector.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":20005,"byte_end":20017,"line_start":365,"line_end":365,"column_start":1,"column_end":13}},{"value":"/ A persistent vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":350351,"byte_end":350375,"line_start":5,"line_end":5,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":350376,"byte_end":350379,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is a sequence of elements in insertion order - if you need a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":350380,"byte_end":350449,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ list of things, any kind of list of things, this is what you're","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":350450,"byte_end":350517,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"/ looking for.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":350518,"byte_end":350534,"line_start":9,"line_end":9,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":350535,"byte_end":350538,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ It's implemented as an [RRB vector][rrbpaper] with [smart","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":350539,"byte_end":350600,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/ head/tail chunking][chunkedseq]. In performance terms, this means","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":350601,"byte_end":350670,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ that practically every operation is O(log n), except push/pop on","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":350671,"byte_end":350739,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/ both sides, which will be O(1) amortised, and O(log n) in the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":350740,"byte_end":350805,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/ worst case. In practice, the push/pop operations will be","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":350806,"byte_end":350866,"line_start":15,"line_end":15,"column_start":1,"column_end":61}},{"value":"/ blindingly fast, nearly on par with the native","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":350867,"byte_end":350917,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/ [`VecDeque`][VecDeque], and other operations will have decent, if","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":350918,"byte_end":350987,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/ not high, performance, but they all have more or less the same","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":350988,"byte_end":351054,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/ O(log n) complexity, so you don't need to keep their performance","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":351055,"byte_end":351123,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ characteristics in mind - everything, even splitting and merging,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":351124,"byte_end":351193,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ is safe to use and never too slow.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":351194,"byte_end":351232,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":351233,"byte_end":351236,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ## Performance Notes","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":351237,"byte_end":351261,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":351262,"byte_end":351265,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Because of the head/tail chunking technique, until you push a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":351266,"byte_end":351331,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ number of items above double the tree's branching factor (that's","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":351332,"byte_end":351400,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/ `self.len()` = 2 × *k* (where *k* = 64) = 128) on either side, the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":351401,"byte_end":351472,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/ data structure is still just a handful of arrays, not yet an RRB","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":351473,"byte_end":351541,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ tree, so you'll see performance and memory characteristics fairly","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":351542,"byte_end":351611,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/ close to [`Vec`][Vec] or [`VecDeque`][VecDeque].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":351612,"byte_end":351664,"line_start":30,"line_end":30,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":351665,"byte_end":351668,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This means that the structure always preallocates four chunks of","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":351669,"byte_end":351737,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"/ size *k* (*k* being the tree's branching factor), equivalent to a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":351738,"byte_end":351807,"line_start":33,"line_end":33,"column_start":1,"column_end":70}},{"value":"/ [`Vec`][Vec] with an initial capacity of 256. Beyond that, it will","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":351808,"byte_end":351878,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ allocate tree nodes of capacity *k* as needed.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":351879,"byte_end":351929,"line_start":35,"line_end":35,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":351930,"byte_end":351933,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ In addition, vectors start out as single chunks, and only expand into the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":351934,"byte_end":352011,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ full data structure once you go past the chunk size. This makes them","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":352012,"byte_end":352084,"line_start":38,"line_end":38,"column_start":1,"column_end":73}},{"value":"/ perform identically to [`Vec`][Vec] at small sizes.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":352085,"byte_end":352140,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":352141,"byte_end":352144,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [rrbpaper]: https://infoscience.epfl.ch/record/213452/files/rrbvector.pdf","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":352145,"byte_end":352222,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ [chunkedseq]: http://deepsea.inria.fr/pasl/chunkedseq.pdf","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":352223,"byte_end":352284,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/ [Vec]: https://doc.rust-lang.org/std/vec/struct.Vec.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":352285,"byte_end":352345,"line_start":43,"line_end":43,"column_start":1,"column_end":61}},{"value":"/ [VecDeque]: https://doc.rust-lang.org/std/collections/struct.VecDeque.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":352346,"byte_end":352424,"line_start":44,"line_end":44,"column_start":1,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2699},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441447,"byte_end":441453,"line_start":88,"line_end":88,"column_start":5,"column_end":11},"name":"Single","qualname":"::vector::focus::Focus::Single","value":"Focus::Single(&'a [A])","parent":{"krate":0,"index":2696},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2702},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441487,"byte_end":441491,"line_start":90,"line_end":90,"column_start":5,"column_end":9},"name":"Full","qualname":"::vector::focus::Focus::Full","value":"Focus::Full(TreeFocus<A>)","parent":{"krate":0,"index":2696},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2696},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441409,"byte_end":441414,"line_start":86,"line_end":86,"column_start":10,"column_end":15},"name":"Focus","qualname":"::vector::focus::Focus","value":"pub enum Focus<'a, A> { Single(&'a [A]), Full(TreeFocus<A>), }","parent":null,"children":[{"krate":0,"index":2699},{"krate":0,"index":2702}],"decl_id":null,"docs":" Focused indexing over a [`Vector`][Vector].","sig":null,"attributes":[{"value":"/ Focused indexing over a [`Vector`][Vector].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":438718,"byte_end":438765,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":438766,"byte_end":438769,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ By remembering the last tree node accessed through an index lookup and the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":438770,"byte_end":438848,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ path we took to get there, we can speed up lookups for adjacent indices","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":438849,"byte_end":438924,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ tremendously. Lookups on indices in the same node are instantaneous, and","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":438925,"byte_end":439001,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ lookups on sibling nodes are also very fast.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":439002,"byte_end":439050,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":439051,"byte_end":439054,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ A `Focus` can also be used as a restricted view into a vector, using the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":439055,"byte_end":439131,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ [`narrow`][narrow] and [`split_at`][split_at] methods.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":439132,"byte_end":439190,"line_start":27,"line_end":27,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":439191,"byte_end":439194,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # When should I use a `Focus` for better performance?","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":439195,"byte_end":439252,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":439253,"byte_end":439256,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ `Focus` is useful when you need to perform a large number of index lookups","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":439257,"byte_end":439335,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ that are more likely than not to be close to each other. It's usually worth","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":439336,"byte_end":439415,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ using a `Focus` in any situation where you're batching a lot of index","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":439416,"byte_end":439489,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ lookups together, even if they're not obviously adjacent - there's likely","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":439490,"byte_end":439567,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ to be some performance gain for even completely random access.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":439568,"byte_end":439634,"line_start":35,"line_end":35,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":439635,"byte_end":439638,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ If you're just iterating forwards or backwards over the [`Vector`][Vector]","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":439639,"byte_end":439717,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ in order, you're better off with a regular iterator, which, in fact, is","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":439718,"byte_end":439793,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ implemented using a `Focus`, but provides a simpler interface.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":439794,"byte_end":439860,"line_start":39,"line_end":39,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":439861,"byte_end":439864,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ If you're just doing a very small number of index lookups, the setup cost","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":439865,"byte_end":439942,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ for the `Focus` is probably not worth it.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":439943,"byte_end":439988,"line_start":42,"line_end":42,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":439989,"byte_end":439992,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ A `Focus` is never faster than an index lookup on a small [`Vector`][Vector]","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":439993,"byte_end":440073,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ with a length below the internal RRB tree's branching factor of 64.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":440074,"byte_end":440145,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":440146,"byte_end":440149,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":440150,"byte_end":440164,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":440165,"byte_end":440168,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ This example is contrived, as the better way to iterate forwards or","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":440169,"byte_end":440240,"line_start":49,"line_end":49,"column_start":1,"column_end":72}},{"value":"/ backwards over a vector is with an actual iterator. Even so, the version","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":440241,"byte_end":440317,"line_start":50,"line_end":50,"column_start":1,"column_end":77}},{"value":"/ using a `Focus` should run nearly an order of magnitude faster than the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":440318,"byte_end":440393,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/ version using index lookups at a length of 1000. It should also be noted","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":440394,"byte_end":440470,"line_start":52,"line_end":52,"column_start":1,"column_end":77}},{"value":"/ that [`vector::Iter`][Iter] is actually implemented using a `Focus` behind","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":440471,"byte_end":440549,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/ the scenes, so the performance of the two should be identical.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":440550,"byte_end":440616,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":440617,"byte_end":440620,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":440621,"byte_end":440632,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":440633,"byte_end":440668,"line_start":57,"line_end":57,"column_start":1,"column_end":36}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":440669,"byte_end":440698,"line_start":58,"line_end":58,"column_start":1,"column_end":30}},{"value":"/ # use std::iter::FromIterator;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":440699,"byte_end":440733,"line_start":59,"line_end":59,"column_start":1,"column_end":35}},{"value":"/ let mut vec: Vector<i64> = Vector::from_iter(0..1000);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":440734,"byte_end":440792,"line_start":60,"line_end":60,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":440793,"byte_end":440796,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // Summing a vector, the slow way:","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":440797,"byte_end":440835,"line_start":62,"line_end":62,"column_start":1,"column_end":39}},{"value":"/ let mut sum = 0;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":440836,"byte_end":440856,"line_start":63,"line_end":63,"column_start":1,"column_end":21}},{"value":"/ for i in 0..1000 {","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":440857,"byte_end":440879,"line_start":64,"line_end":64,"column_start":1,"column_end":23}},{"value":"/     sum += *vec.get(i).unwrap();","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":440880,"byte_end":440916,"line_start":65,"line_end":65,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":440917,"byte_end":440922,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(499500, sum);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":440923,"byte_end":440951,"line_start":67,"line_end":67,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":440952,"byte_end":440955,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ // Summing a vector faster using a Focus:","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":440956,"byte_end":441001,"line_start":69,"line_end":69,"column_start":1,"column_end":46}},{"value":"/ let mut sum = 0;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441002,"byte_end":441022,"line_start":70,"line_end":70,"column_start":1,"column_end":21}},{"value":"/ let mut focus = vec.focus();","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441023,"byte_end":441055,"line_start":71,"line_end":71,"column_start":1,"column_end":33}},{"value":"/ for i in 0..1000 {","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441056,"byte_end":441078,"line_start":72,"line_end":72,"column_start":1,"column_end":23}},{"value":"/     sum += *focus.get(i).unwrap();","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441079,"byte_end":441117,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441118,"byte_end":441123,"line_start":74,"line_end":74,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(499500, sum);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441124,"byte_end":441152,"line_start":75,"line_end":75,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441153,"byte_end":441156,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // And the easy way, for completeness:","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441157,"byte_end":441199,"line_start":77,"line_end":77,"column_start":1,"column_end":43}},{"value":"/ let sum: i64 = vec.iter().sum();","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441200,"byte_end":441236,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(499500, sum);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441237,"byte_end":441265,"line_start":79,"line_end":79,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441266,"byte_end":441273,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441274,"byte_end":441277,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ [Vector]: enum.Vector.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441278,"byte_end":441308,"line_start":82,"line_end":82,"column_start":1,"column_end":31}},{"value":"/ [Iter]: struct.Iter.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441309,"byte_end":441337,"line_start":83,"line_end":83,"column_start":1,"column_end":29}},{"value":"/ [narrow]: #method.narrow","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441338,"byte_end":441366,"line_start":84,"line_end":84,"column_start":1,"column_end":29}},{"value":"/ [split_at]: #method.split_at","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441367,"byte_end":441399,"line_start":85,"line_end":85,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2708},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441670,"byte_end":441673,"line_start":100,"line_end":100,"column_start":12,"column_end":15},"name":"new","qualname":"<Focus>::new","value":"pub fn new(&'a Vector<A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Focus` for a [`Vector`][Vector].","sig":null,"attributes":[{"value":"/ Construct a `Focus` for a [`Vector`][Vector].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441566,"byte_end":441615,"line_start":97,"line_end":97,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441620,"byte_end":441623,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ [Vector]: enum.Vector.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441628,"byte_end":441658,"line_start":99,"line_end":99,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2709},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":442039,"byte_end":442042,"line_start":111,"line_end":111,"column_start":12,"column_end":15},"name":"len","qualname":"<Focus>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the focused [`Vector`][Vector].","sig":null,"attributes":[{"value":"/ Get the length of the focused [`Vector`][Vector].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441931,"byte_end":441984,"line_start":108,"line_end":108,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441989,"byte_end":441992,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ [Vector]: enum.Vector.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441997,"byte_end":442027,"line_start":110,"line_end":110,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2710},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":442304,"byte_end":442312,"line_start":121,"line_end":121,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Focus>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test if the focused [`Vector`][Vector] is empty.","sig":null,"attributes":[{"value":"/ Test if the focused [`Vector`][Vector] is empty.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":442197,"byte_end":442249,"line_start":118,"line_end":118,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":442254,"byte_end":442257,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ [Vector]: enum.Vector.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":442262,"byte_end":442292,"line_start":120,"line_end":120,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2711},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":442427,"byte_end":442430,"line_start":126,"line_end":126,"column_start":12,"column_end":15},"name":"get","qualname":"<Focus>::get","value":"pub fn get(&mut Self, usize) -> Option<&A>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the value at a given index.\n","sig":null,"attributes":[{"value":"/ Get a reference to the value at a given index.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":442365,"byte_end":442415,"line_start":125,"line_end":125,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2712},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":442734,"byte_end":442739,"line_start":136,"line_end":136,"column_start":12,"column_end":17},"name":"index","qualname":"<Focus>::index","value":"pub fn index(&mut Self, usize) -> &A","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the value at a given index.","sig":null,"attributes":[{"value":"/ Get a reference to the value at a given index.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":442618,"byte_end":442668,"line_start":133,"line_end":133,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":442673,"byte_end":442676,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Panics if the index is out of bounds.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":442681,"byte_end":442722,"line_start":135,"line_end":135,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2713},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":443019,"byte_end":443027,"line_start":144,"line_end":144,"column_start":12,"column_end":20},"name":"chunk_at","qualname":"<Focus>::chunk_at","value":"pub fn chunk_at(&mut Self, usize) -> (Range<usize>, &[A])","parent":null,"children":[],"decl_id":null,"docs":" Get the chunk for the given index.","sig":null,"attributes":[{"value":"/ Get the chunk for the given index.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":442838,"byte_end":442876,"line_start":140,"line_end":140,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":442881,"byte_end":442884,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This gives you a reference to the leaf node that contains the index,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":442889,"byte_end":442961,"line_start":142,"line_end":142,"column_start":5,"column_end":77}},{"value":"/ along with its start and end indices.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":442966,"byte_end":443007,"line_start":143,"line_end":143,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2714},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":444208,"byte_end":444214,"line_start":176,"line_end":176,"column_start":12,"column_end":18},"name":"narrow","qualname":"<Focus>::narrow","value":"pub fn narrow<R>(Self, R) -> Self where R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Narrow the focus onto a subslice of the vector.","sig":null,"attributes":[{"value":"/ Narrow the focus onto a subslice of the vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":443364,"byte_end":443415,"line_start":155,"line_end":155,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":443420,"byte_end":443423,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ `Focus::narrow(range)` has the same effect as `&slice[range]`, without","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":443428,"byte_end":443502,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ actually modifying the underlying vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":443507,"byte_end":443552,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":443557,"byte_end":443560,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Panics if the range isn't fully inside the current focus.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":443565,"byte_end":443626,"line_start":160,"line_end":160,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":443631,"byte_end":443634,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":443639,"byte_end":443654,"line_start":162,"line_end":162,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":443659,"byte_end":443662,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":443667,"byte_end":443678,"line_start":164,"line_end":164,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":443683,"byte_end":443718,"line_start":165,"line_end":165,"column_start":5,"column_end":40}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":443723,"byte_end":443752,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/ # use std::iter::FromIterator;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":443757,"byte_end":443791,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/ let vec = Vector::from_iter(0..1000);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":443796,"byte_end":443837,"line_start":168,"line_end":168,"column_start":5,"column_end":46}},{"value":"/ let narrowed = vec.focus().narrow(100..200);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":443842,"byte_end":443890,"line_start":169,"line_end":169,"column_start":5,"column_end":53}},{"value":"/ let narrowed_vec = narrowed.into_iter().cloned().collect();","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":443895,"byte_end":443958,"line_start":170,"line_end":170,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Vector::from_iter(100..200), narrowed_vec);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":443963,"byte_end":444021,"line_start":171,"line_end":171,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":444026,"byte_end":444033,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":444038,"byte_end":444041,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ [slice::split_at]: https://doc.rust-lang.org/std/primitive.slice.html#method.split_at","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":444046,"byte_end":444135,"line_start":174,"line_end":174,"column_start":5,"column_end":94}},{"value":"/ [Vector::split_at]: enum.Vector.html#method.split_at","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":444140,"byte_end":444196,"line_start":175,"line_end":175,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2716},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":445834,"byte_end":445842,"line_start":218,"line_end":218,"column_start":12,"column_end":20},"name":"split_at","qualname":"<Focus>::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split the focus into two.","sig":null,"attributes":[{"value":"/ Split the focus into two.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":444632,"byte_end":444661,"line_start":190,"line_end":190,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":444666,"byte_end":444669,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Given an index `index`, consume the focus and produce two new foci, the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":444674,"byte_end":444749,"line_start":192,"line_end":192,"column_start":5,"column_end":80}},{"value":"/ left onto indices `0..index`, and the right onto indices `index..N`","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":444754,"byte_end":444825,"line_start":193,"line_end":193,"column_start":5,"column_end":76}},{"value":"/ where `N` is the length of the current focus.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":444830,"byte_end":444879,"line_start":194,"line_end":194,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":444884,"byte_end":444887,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Panics if the index is out of bounds.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":444892,"byte_end":444933,"line_start":196,"line_end":196,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":444938,"byte_end":444941,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ This is the moral equivalent of [`slice::split_at`][slice::split_at], in","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":444946,"byte_end":445022,"line_start":198,"line_end":198,"column_start":5,"column_end":81}},{"value":"/ that it leaves the underlying data structure unchanged, unlike","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":445027,"byte_end":445093,"line_start":199,"line_end":199,"column_start":5,"column_end":71}},{"value":"/ [`Vector::split_at`][Vector::split_at].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":445098,"byte_end":445141,"line_start":200,"line_end":200,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":445146,"byte_end":445149,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":445154,"byte_end":445169,"line_start":202,"line_end":202,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":445174,"byte_end":445177,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":445182,"byte_end":445193,"line_start":204,"line_end":204,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":445198,"byte_end":445233,"line_start":205,"line_end":205,"column_start":5,"column_end":40}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":445238,"byte_end":445267,"line_start":206,"line_end":206,"column_start":5,"column_end":34}},{"value":"/ # use std::iter::FromIterator;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":445272,"byte_end":445306,"line_start":207,"line_end":207,"column_start":5,"column_end":39}},{"value":"/ let vec = Vector::from_iter(0..1000);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":445311,"byte_end":445352,"line_start":208,"line_end":208,"column_start":5,"column_end":46}},{"value":"/ let (left, right) = vec.focus().split_at(500);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":445357,"byte_end":445407,"line_start":209,"line_end":209,"column_start":5,"column_end":55}},{"value":"/ let left_vec = left.into_iter().cloned().collect();","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":445412,"byte_end":445467,"line_start":210,"line_end":210,"column_start":5,"column_end":60}},{"value":"/ let right_vec = right.into_iter().cloned().collect();","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":445472,"byte_end":445529,"line_start":211,"line_end":211,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(Vector::from_iter(0..500), left_vec);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":445534,"byte_end":445586,"line_start":212,"line_end":212,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Vector::from_iter(500..1000), right_vec);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":445591,"byte_end":445647,"line_start":213,"line_end":213,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":445652,"byte_end":445659,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":445664,"byte_end":445667,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ [slice::split_at]: https://doc.rust-lang.org/std/primitive.slice.html#method.split_at","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":445672,"byte_end":445761,"line_start":216,"line_end":216,"column_start":5,"column_end":94}},{"value":"/ [Vector::split_at]: enum.Vector.html#method.split_at","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":445766,"byte_end":445822,"line_start":217,"line_end":217,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2727},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":446836,"byte_end":446845,"line_start":259,"line_end":259,"column_start":12,"column_end":21},"name":"TreeFocus","qualname":"::vector::focus::TreeFocus","value":"TreeFocus {  }","parent":null,"children":[{"krate":0,"index":2729},{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2732},{"krate":0,"index":2733}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2753},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":450339,"byte_end":450342,"line_start":376,"line_end":376,"column_start":12,"column_end":15},"name":"get","qualname":"<TreeFocus<A>>::get","value":"pub fn get(&mut Self, usize) -> Option<&A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2754},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":450750,"byte_end":450759,"line_start":388,"line_end":388,"column_start":12,"column_end":21},"name":"get_chunk","qualname":"<TreeFocus<A>>::get_chunk","value":"pub fn get_chunk(&mut Self, usize) -> (Range<usize>, &[A])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2758},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":453475,"byte_end":453481,"line_start":465,"line_end":465,"column_start":5,"column_end":11},"name":"Single","qualname":"::vector::focus::FocusMut::Single","value":"FocusMut::Single(RRBPool<A>, &'a mut [A])","parent":{"krate":0,"index":2755},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2762},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":453531,"byte_end":453535,"line_start":467,"line_end":467,"column_start":5,"column_end":9},"name":"Full","qualname":"::vector::focus::FocusMut::Full","value":"FocusMut::Full(RRBPool<A>, TreeFocusMut)","parent":{"krate":0,"index":2755},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2755},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":453434,"byte_end":453442,"line_start":463,"line_end":463,"column_start":10,"column_end":18},"name":"FocusMut","qualname":"::vector::focus::FocusMut","value":"pub enum FocusMut<'a, A> {\n    Single(RRBPool<A>, &'a mut [A]),\n    Full(RRBPool<A>, TreeFocusMut),\n}","parent":null,"children":[{"krate":0,"index":2758},{"krate":0,"index":2762}],"decl_id":null,"docs":" A mutable version of [`Focus`][Focus].","sig":null,"attributes":[{"value":"/ A mutable version of [`Focus`][Focus].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":451521,"byte_end":451563,"line_start":408,"line_end":408,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":451564,"byte_end":451567,"line_start":409,"line_end":409,"column_start":1,"column_end":4}},{"value":"/ See [`Focus`][Focus] for more details.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":451568,"byte_end":451610,"line_start":410,"line_end":410,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":451611,"byte_end":451614,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ You can only build one `FocusMut` at a time for a vector, effectively","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":451615,"byte_end":451688,"line_start":412,"line_end":412,"column_start":1,"column_end":74}},{"value":"/ keeping a lock on the vector until you're done with the focus, which relies","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":451689,"byte_end":451768,"line_start":413,"line_end":413,"column_start":1,"column_end":80}},{"value":"/ on the structure of the vector not changing while it exists.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":451769,"byte_end":451833,"line_start":414,"line_end":414,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":451834,"byte_end":451837,"line_start":415,"line_end":415,"column_start":1,"column_end":4}},{"value":"/ ```rust,compile_fail","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":451838,"byte_end":451862,"line_start":416,"line_end":416,"column_start":1,"column_end":25}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":451863,"byte_end":451898,"line_start":417,"line_end":417,"column_start":1,"column_end":36}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":451899,"byte_end":451928,"line_start":418,"line_end":418,"column_start":1,"column_end":30}},{"value":"/ # use std::iter::FromIterator;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":451929,"byte_end":451963,"line_start":419,"line_end":419,"column_start":1,"column_end":35}},{"value":"/ let mut vec = Vector::from_iter(0..1000);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":451964,"byte_end":452009,"line_start":420,"line_end":420,"column_start":1,"column_end":46}},{"value":"/ let focus1 = vec.focus_mut();","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452010,"byte_end":452043,"line_start":421,"line_end":421,"column_start":1,"column_end":34}},{"value":"/ // Fails here in 2015 edition because you're creating","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452044,"byte_end":452101,"line_start":422,"line_end":422,"column_start":1,"column_end":58}},{"value":"/ // two mutable references to the same thing.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452102,"byte_end":452150,"line_start":423,"line_end":423,"column_start":1,"column_end":49}},{"value":"/ let focus2 = vec.focus_mut();","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452151,"byte_end":452184,"line_start":424,"line_end":424,"column_start":1,"column_end":34}},{"value":"/ // Fails here in 2018 edition because creating focus2","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452185,"byte_end":452242,"line_start":425,"line_end":425,"column_start":1,"column_end":58}},{"value":"/ // made focus1's lifetime go out of scope.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452243,"byte_end":452289,"line_start":426,"line_end":426,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(Some(&0), focus1.get(0));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452290,"byte_end":452330,"line_start":427,"line_end":427,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452331,"byte_end":452338,"line_start":428,"line_end":428,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452339,"byte_end":452342,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ On the other hand, you can split that one focus into multiple sub-focuses,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452343,"byte_end":452421,"line_start":430,"line_end":430,"column_start":1,"column_end":79}},{"value":"/ which is safe because they can't overlap:","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452422,"byte_end":452467,"line_start":431,"line_end":431,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452468,"byte_end":452471,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452472,"byte_end":452483,"line_start":433,"line_end":433,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452484,"byte_end":452519,"line_start":434,"line_end":434,"column_start":1,"column_end":36}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452520,"byte_end":452549,"line_start":435,"line_end":435,"column_start":1,"column_end":30}},{"value":"/ # use std::iter::FromIterator;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452550,"byte_end":452584,"line_start":436,"line_end":436,"column_start":1,"column_end":35}},{"value":"/ let mut vec = Vector::from_iter(0..1000);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452585,"byte_end":452630,"line_start":437,"line_end":437,"column_start":1,"column_end":46}},{"value":"/ let focus = vec.focus_mut();","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452631,"byte_end":452663,"line_start":438,"line_end":438,"column_start":1,"column_end":33}},{"value":"/ let (mut left, mut right) = focus.split_at(500);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452664,"byte_end":452716,"line_start":439,"line_end":439,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(Some(&0), left.get(0));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452717,"byte_end":452755,"line_start":440,"line_end":440,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(Some(&500), right.get(0));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452756,"byte_end":452797,"line_start":441,"line_end":441,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452798,"byte_end":452805,"line_start":442,"line_end":442,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452806,"byte_end":452809,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ These sub-foci also work as a lock on the vector, even if the focus they","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452810,"byte_end":452886,"line_start":444,"line_end":444,"column_start":1,"column_end":77}},{"value":"/ were created from goes out of scope.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452887,"byte_end":452927,"line_start":445,"line_end":445,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452928,"byte_end":452931,"line_start":446,"line_end":446,"column_start":1,"column_end":4}},{"value":"/ ```rust,compile_fail","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452932,"byte_end":452956,"line_start":447,"line_end":447,"column_start":1,"column_end":25}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452957,"byte_end":452992,"line_start":448,"line_end":448,"column_start":1,"column_end":36}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":452993,"byte_end":453022,"line_start":449,"line_end":449,"column_start":1,"column_end":30}},{"value":"/ # use std::iter::FromIterator;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":453023,"byte_end":453057,"line_start":450,"line_end":450,"column_start":1,"column_end":35}},{"value":"/ let mut vec = Vector::from_iter(0..1000);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":453058,"byte_end":453103,"line_start":451,"line_end":451,"column_start":1,"column_end":46}},{"value":"/ let (left, right) = {","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":453104,"byte_end":453129,"line_start":452,"line_end":452,"column_start":1,"column_end":26}},{"value":"/     let focus = vec.focus_mut();","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":453130,"byte_end":453166,"line_start":453,"line_end":453,"column_start":1,"column_end":37}},{"value":"/     focus.split_at(500)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":453167,"byte_end":453194,"line_start":454,"line_end":454,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":453195,"byte_end":453201,"line_start":455,"line_end":455,"column_start":1,"column_end":7}},{"value":"/ // `left` and `right` are still in scope even if `focus` isn't, so we can't","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":453202,"byte_end":453281,"line_start":456,"line_end":456,"column_start":1,"column_end":80}},{"value":"/ // create another focus:","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":453282,"byte_end":453310,"line_start":457,"line_end":457,"column_start":1,"column_end":29}},{"value":"/ let focus2 = vec.focus_mut();","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":453311,"byte_end":453344,"line_start":458,"line_end":458,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(Some(&0), left.get(0));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":453345,"byte_end":453383,"line_start":459,"line_end":459,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":453384,"byte_end":453391,"line_start":460,"line_end":460,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":453392,"byte_end":453395,"line_start":461,"line_end":461,"column_start":1,"column_end":4}},{"value":"/ [Focus]: enum.Focus.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":453396,"byte_end":453424,"line_start":462,"line_end":462,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2769},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":453686,"byte_end":453689,"line_start":475,"line_end":475,"column_start":12,"column_end":15},"name":"new","qualname":"<FocusMut>::new","value":"pub fn new(&'a mut Vector<A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `FocusMut` for a `Vector`.\n","sig":null,"attributes":[{"value":"/ Construct a `FocusMut` for a `Vector`.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":453632,"byte_end":453674,"line_start":474,"line_end":474,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2770},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":454172,"byte_end":454175,"line_start":487,"line_end":487,"column_start":12,"column_end":15},"name":"len","qualname":"<FocusMut>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the focused `Vector`.\n","sig":null,"attributes":[{"value":"/ Get the length of the focused `Vector`.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":454117,"byte_end":454160,"line_start":486,"line_end":486,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2771},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":454396,"byte_end":454404,"line_start":495,"line_end":495,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FocusMut>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test if the focused `Vector` is empty.\n","sig":null,"attributes":[{"value":"/ Test if the focused `Vector` is empty.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":454342,"byte_end":454384,"line_start":494,"line_end":494,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2772},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":454519,"byte_end":454522,"line_start":500,"line_end":500,"column_start":12,"column_end":15},"name":"get","qualname":"<FocusMut>::get","value":"pub fn get(&mut Self, usize) -> Option<&A>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the value at a given index.\n","sig":null,"attributes":[{"value":"/ Get a reference to the value at a given index.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":454457,"byte_end":454507,"line_start":499,"line_end":499,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2774},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":454686,"byte_end":454693,"line_start":505,"line_end":505,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FocusMut>::get_mut","value":"pub fn get_mut(&mut Self, usize) -> Option<&mut A>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the value at a given index.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the value at a given index.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":454616,"byte_end":454674,"line_start":504,"line_end":504,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2775},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":455026,"byte_end":455031,"line_start":515,"line_end":515,"column_start":12,"column_end":17},"name":"index","qualname":"<FocusMut>::index","value":"pub fn index(&mut Self, usize) -> &A","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the value at a given index.","sig":null,"attributes":[{"value":"/ Get a reference to the value at a given index.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":454910,"byte_end":454960,"line_start":512,"line_end":512,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":454965,"byte_end":454968,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Panics if the index is out of bounds.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":454973,"byte_end":455014,"line_start":514,"line_end":514,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2776},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":455297,"byte_end":455306,"line_start":523,"line_end":523,"column_start":12,"column_end":21},"name":"index_mut","qualname":"<FocusMut>::index_mut","value":"pub fn index_mut(&mut Self, usize) -> &mut A","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the value at a given index.","sig":null,"attributes":[{"value":"/ Get a mutable reference to the value at a given index.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":455108,"byte_end":455166,"line_start":519,"line_end":519,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":455171,"byte_end":455174,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ Panics if the index is out of bounds.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":455179,"byte_end":455220,"line_start":521,"line_end":521,"column_start":5,"column_end":46}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":455225,"byte_end":455265,"line_start":522,"line_end":522,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2777},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":455566,"byte_end":455569,"line_start":531,"line_end":531,"column_start":12,"column_end":15},"name":"set","qualname":"<FocusMut>::set","value":"pub fn set(&mut Self, usize, A) -> Option<A>","parent":null,"children":[],"decl_id":null,"docs":" Update the value at a given index.","sig":null,"attributes":[{"value":"/ Update the value at a given index.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":455413,"byte_end":455451,"line_start":527,"line_end":527,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":455456,"byte_end":455459,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the index is out of bounds, or the replaced value","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":455464,"byte_end":455535,"line_start":529,"line_end":529,"column_start":5,"column_end":76}},{"value":"/ otherwise.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":455540,"byte_end":455554,"line_start":530,"line_end":530,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2778},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":455961,"byte_end":455965,"line_start":543,"line_end":543,"column_start":12,"column_end":16},"name":"swap","qualname":"<FocusMut>::swap","value":"pub fn swap(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swap the values at two given indices.","sig":null,"attributes":[{"value":"/ Swap the values at two given indices.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":455763,"byte_end":455804,"line_start":538,"line_end":538,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":455809,"byte_end":455812,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ Panics if either index is out of bounds.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":455817,"byte_end":455861,"line_start":540,"line_end":540,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":455866,"byte_end":455869,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ If the indices are equal, this function returns without doing anything.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":455874,"byte_end":455949,"line_start":542,"line_end":542,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2780},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":456792,"byte_end":456796,"line_start":568,"line_end":568,"column_start":12,"column_end":16},"name":"pair","qualname":"<FocusMut>::pair","value":"pub fn pair<F, B>(&mut Self, usize, usize, F) -> B where\nF: FnMut(&mut A, &mut A) -> B","parent":null,"children":[],"decl_id":null,"docs":" Lookup two indices simultaneously and run a function over them.","sig":null,"attributes":[{"value":"/ Lookup two indices simultaneously and run a function over them.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":456118,"byte_end":456185,"line_start":550,"line_end":550,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":456190,"byte_end":456193,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ Useful because the borrow checker won't let you have more than one","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":456198,"byte_end":456268,"line_start":552,"line_end":552,"column_start":5,"column_end":75}},{"value":"/ mutable reference into the same data structure at any given time.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":456273,"byte_end":456342,"line_start":553,"line_end":553,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":456347,"byte_end":456350,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ Panics if either index is out of bounds, or if they are the same index.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":456355,"byte_end":456430,"line_start":555,"line_end":555,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":456435,"byte_end":456438,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":456443,"byte_end":456457,"line_start":557,"line_end":557,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":456462,"byte_end":456465,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":456470,"byte_end":456481,"line_start":559,"line_end":559,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":456486,"byte_end":456521,"line_start":560,"line_end":560,"column_start":5,"column_end":40}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":456526,"byte_end":456555,"line_start":561,"line_end":561,"column_start":5,"column_end":34}},{"value":"/ # use std::iter::FromIterator;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":456560,"byte_end":456594,"line_start":562,"line_end":562,"column_start":5,"column_end":39}},{"value":"/ let mut vec = vector![1, 2, 3, 4, 5];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":456599,"byte_end":456640,"line_start":563,"line_end":563,"column_start":5,"column_end":46}},{"value":"/ vec.focus_mut().pair(1, 3, |a, b| *a += *b);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":456645,"byte_end":456693,"line_start":564,"line_end":564,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(vector![1, 6, 3, 4, 5], vec);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":456698,"byte_end":456742,"line_start":565,"line_end":565,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":456747,"byte_end":456754,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"allow(unsafe_code)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":456759,"byte_end":456780,"line_start":567,"line_end":567,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2783},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":457831,"byte_end":457838,"line_start":598,"line_end":598,"column_start":12,"column_end":19},"name":"triplet","qualname":"<FocusMut>::triplet","value":"pub fn triplet<F, B>(&mut Self, usize, usize, usize, F) -> B where\nF: FnMut(&mut A, &mut A, &mut A) -> B","parent":null,"children":[],"decl_id":null,"docs":" Lookup three indices simultaneously and run a function over them.","sig":null,"attributes":[{"value":"/ Lookup three indices simultaneously and run a function over them.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":457146,"byte_end":457215,"line_start":580,"line_end":580,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":457220,"byte_end":457223,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ Useful because the borrow checker won't let you have more than one","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":457228,"byte_end":457298,"line_start":582,"line_end":582,"column_start":5,"column_end":75}},{"value":"/ mutable reference into the same data structure at any given time.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":457303,"byte_end":457372,"line_start":583,"line_end":583,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":457377,"byte_end":457380,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Panics if any index is out of bounds, or if any indices are equal.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":457385,"byte_end":457455,"line_start":585,"line_end":585,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":457460,"byte_end":457463,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":457468,"byte_end":457482,"line_start":587,"line_end":587,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":457487,"byte_end":457490,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":457495,"byte_end":457506,"line_start":589,"line_end":589,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":457511,"byte_end":457546,"line_start":590,"line_end":590,"column_start":5,"column_end":40}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":457551,"byte_end":457580,"line_start":591,"line_end":591,"column_start":5,"column_end":34}},{"value":"/ # use std::iter::FromIterator;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":457585,"byte_end":457619,"line_start":592,"line_end":592,"column_start":5,"column_end":39}},{"value":"/ let mut vec = vector![1, 2, 3, 4, 5];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":457624,"byte_end":457665,"line_start":593,"line_end":593,"column_start":5,"column_end":46}},{"value":"/ vec.focus_mut().triplet(0, 2, 4, |a, b, c| *a += *b + *c);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":457670,"byte_end":457732,"line_start":594,"line_end":594,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(vector![9, 2, 3, 4, 5], vec);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":457737,"byte_end":457781,"line_start":595,"line_end":595,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":457786,"byte_end":457793,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"allow(unsafe_code)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":457798,"byte_end":457819,"line_start":597,"line_end":597,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2786},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":458464,"byte_end":458472,"line_start":615,"line_end":615,"column_start":12,"column_end":20},"name":"chunk_at","qualname":"<FocusMut>::chunk_at","value":"pub fn chunk_at(&mut Self, usize) -> (Range<usize>, &mut [A])","parent":null,"children":[],"decl_id":null,"docs":" Get the chunk for the given index.","sig":null,"attributes":[{"value":"/ Get the chunk for the given index.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":458283,"byte_end":458321,"line_start":611,"line_end":611,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":458326,"byte_end":458329,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ This gives you a reference to the leaf node that contains the index,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":458334,"byte_end":458406,"line_start":613,"line_end":613,"column_start":5,"column_end":77}},{"value":"/ along with its start and end indices.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":458411,"byte_end":458452,"line_start":614,"line_end":614,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2787},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":459784,"byte_end":459790,"line_start":650,"line_end":650,"column_start":12,"column_end":18},"name":"narrow","qualname":"<FocusMut>::narrow","value":"pub fn narrow<R>(Self, R) -> Self where R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Narrow the focus onto a subslice of the vector.","sig":null,"attributes":[{"value":"/ Narrow the focus onto a subslice of the vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":458921,"byte_end":458972,"line_start":629,"line_end":629,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":458977,"byte_end":458980,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ `FocusMut::narrow(range)` has the same effect as `&slice[range]`, without","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":458985,"byte_end":459062,"line_start":631,"line_end":631,"column_start":5,"column_end":82}},{"value":"/ actually modifying the underlying vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":459067,"byte_end":459112,"line_start":632,"line_end":632,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":459117,"byte_end":459120,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ Panics if the range isn't fully inside the current focus.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":459125,"byte_end":459186,"line_start":634,"line_end":634,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":459191,"byte_end":459194,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":459199,"byte_end":459214,"line_start":636,"line_end":636,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":459219,"byte_end":459222,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":459227,"byte_end":459238,"line_start":638,"line_end":638,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":459243,"byte_end":459278,"line_start":639,"line_end":639,"column_start":5,"column_end":40}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":459283,"byte_end":459312,"line_start":640,"line_end":640,"column_start":5,"column_end":34}},{"value":"/ # use std::iter::FromIterator;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":459317,"byte_end":459351,"line_start":641,"line_end":641,"column_start":5,"column_end":39}},{"value":"/ let mut vec = Vector::from_iter(0..1000);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":459356,"byte_end":459401,"line_start":642,"line_end":642,"column_start":5,"column_end":50}},{"value":"/ let narrowed = vec.focus_mut().narrow(100..200);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":459406,"byte_end":459458,"line_start":643,"line_end":643,"column_start":5,"column_end":57}},{"value":"/ let narrowed_vec = narrowed.unmut().into_iter().cloned().collect();","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":459463,"byte_end":459534,"line_start":644,"line_end":644,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(Vector::from_iter(100..200), narrowed_vec);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":459539,"byte_end":459597,"line_start":645,"line_end":645,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":459602,"byte_end":459609,"line_start":646,"line_end":646,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":459614,"byte_end":459617,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ [slice::split_at]: https://doc.rust-lang.org/std/primitive.slice.html#method.split_at","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":459622,"byte_end":459711,"line_start":648,"line_end":648,"column_start":5,"column_end":94}},{"value":"/ [Vector::split_at]: enum.Vector.html#method.split_at","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":459716,"byte_end":459772,"line_start":649,"line_end":649,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2789},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":461566,"byte_end":461574,"line_start":700,"line_end":700,"column_start":12,"column_end":20},"name":"split_at","qualname":"<FocusMut>::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split the focus into two.","sig":null,"attributes":[{"value":"/ Split the focus into two.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":460249,"byte_end":460278,"line_start":664,"line_end":664,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":460283,"byte_end":460286,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ Given an index `index`, consume the focus and produce two new foci, the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":460291,"byte_end":460366,"line_start":666,"line_end":666,"column_start":5,"column_end":80}},{"value":"/ left onto indices `0..index`, and the right onto indices `index..N`","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":460371,"byte_end":460442,"line_start":667,"line_end":667,"column_start":5,"column_end":76}},{"value":"/ where `N` is the length of the current focus.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":460447,"byte_end":460496,"line_start":668,"line_end":668,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":460501,"byte_end":460504,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ Panics if the index is out of bounds.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":460509,"byte_end":460550,"line_start":670,"line_end":670,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":460555,"byte_end":460558,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ This is the moral equivalent of [`slice::split_at`][slice::split_at], in","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":460563,"byte_end":460639,"line_start":672,"line_end":672,"column_start":5,"column_end":81}},{"value":"/ that it leaves the underlying data structure unchanged, unlike","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":460644,"byte_end":460710,"line_start":673,"line_end":673,"column_start":5,"column_end":71}},{"value":"/ [`Vector::split_at`][Vector::split_at].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":460715,"byte_end":460758,"line_start":674,"line_end":674,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":460763,"byte_end":460766,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":460771,"byte_end":460786,"line_start":676,"line_end":676,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":460791,"byte_end":460794,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":460799,"byte_end":460810,"line_start":678,"line_end":678,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":460815,"byte_end":460850,"line_start":679,"line_end":679,"column_start":5,"column_end":40}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":460855,"byte_end":460884,"line_start":680,"line_end":680,"column_start":5,"column_end":34}},{"value":"/ # use std::iter::FromIterator;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":460889,"byte_end":460923,"line_start":681,"line_end":681,"column_start":5,"column_end":39}},{"value":"/ let mut vec = Vector::from_iter(0..1000);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":460928,"byte_end":460973,"line_start":682,"line_end":682,"column_start":5,"column_end":50}},{"value":"/ {","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":460978,"byte_end":460983,"line_start":683,"line_end":683,"column_start":5,"column_end":10}},{"value":"/     let (left, right) = vec.focus_mut().split_at(500);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":460988,"byte_end":461046,"line_start":684,"line_end":684,"column_start":5,"column_end":63}},{"value":"/     for ptr in left {","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":461051,"byte_end":461076,"line_start":685,"line_end":685,"column_start":5,"column_end":30}},{"value":"/         *ptr += 100;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":461081,"byte_end":461105,"line_start":686,"line_end":686,"column_start":5,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":461110,"byte_end":461119,"line_start":687,"line_end":687,"column_start":5,"column_end":14}},{"value":"/     for ptr in right {","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":461124,"byte_end":461150,"line_start":688,"line_end":688,"column_start":5,"column_end":31}},{"value":"/         *ptr -= 100;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":461155,"byte_end":461179,"line_start":689,"line_end":689,"column_start":5,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":461184,"byte_end":461193,"line_start":690,"line_end":690,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":461198,"byte_end":461203,"line_start":691,"line_end":691,"column_start":5,"column_end":10}},{"value":"/ let expected = Vector::from_iter(100..600)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":461208,"byte_end":461254,"line_start":692,"line_end":692,"column_start":5,"column_end":51}},{"value":"/              + Vector::from_iter(400..900);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":461259,"byte_end":461306,"line_start":693,"line_end":693,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(expected, vec);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":461311,"byte_end":461341,"line_start":694,"line_end":694,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":461346,"byte_end":461353,"line_start":695,"line_end":695,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":461358,"byte_end":461361,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ [slice::split_at]: https://doc.rust-lang.org/std/primitive.slice.html#method.split_at","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":461366,"byte_end":461455,"line_start":697,"line_end":697,"column_start":5,"column_end":94}},{"value":"/ [Vector::split_at]: enum.Vector.html#method.split_at","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":461460,"byte_end":461516,"line_start":698,"line_end":698,"column_start":5,"column_end":61}},{"value":"allow(clippy :: redundant_clone)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":461521,"byte_end":461554,"line_start":699,"line_end":699,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2790},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":462346,"byte_end":462351,"line_start":723,"line_end":723,"column_start":12,"column_end":17},"name":"unmut","qualname":"<FocusMut>::unmut","value":"pub fn unmut(Self) -> Focus","parent":null,"children":[],"decl_id":null,"docs":" Convert a `FocusMut` into a `Focus`.\n","sig":null,"attributes":[{"value":"/ Convert a `FocusMut` into a `Focus`.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":462294,"byte_end":462334,"line_start":722,"line_end":722,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":2801},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":463241,"byte_end":463253,"line_start":761,"line_end":761,"column_start":12,"column_end":24},"name":"TreeFocusMut","qualname":"::vector::focus::TreeFocusMut","value":"TreeFocusMut {  }","parent":null,"children":[{"krate":0,"index":2804},{"krate":0,"index":2805},{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2808}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2820},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":467489,"byte_end":467492,"line_start":882,"line_end":882,"column_start":12,"column_end":15},"name":"get","qualname":"<TreeFocusMut>::get","value":"pub fn get(&mut Self, &RRBPool<A>, usize) -> Option<&mut A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2821},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":467933,"byte_end":467942,"line_start":894,"line_end":894,"column_start":12,"column_end":21},"name":"get_chunk","qualname":"<TreeFocusMut>::get_chunk","value":"pub fn get_chunk(&mut Self, &RRBPool<A>, usize) -> (Range<usize>, &mut [A])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2842},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/pool.rs","byte_start":469163,"byte_end":469170,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"RRBPool","qualname":"::vector::pool::RRBPool","value":"RRBPool {  }","parent":null,"children":[{"krate":0,"index":2844},{"krate":0,"index":2845},{"krate":0,"index":2846}],"decl_id":null,"docs":" A memory pool for `Vector`.\n","sig":null,"attributes":[{"value":"/ A memory pool for `Vector`.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/pool.rs","byte_start":469120,"byte_end":469151,"line_start":10,"line_end":10,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2849},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/pool.rs","byte_start":469402,"byte_end":469405,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<RRBPool<A>>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new memory pool with the given size.\n","sig":null,"attributes":[{"value":"/ Create a new memory pool with the given size.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/pool.rs","byte_start":469341,"byte_end":469390,"line_start":18,"line_end":18,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2850},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/pool.rs","byte_start":469562,"byte_end":469572,"line_start":24,"line_end":24,"column_start":12,"column_end":22},"name":"with_sizes","qualname":"<RRBPool<A>>::with_sizes","value":"pub fn with_sizes(usize, usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new memory pool with the given sizes for each subpool.\n","sig":null,"attributes":[{"value":"/ Create a new memory pool with the given sizes for each subpool.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/pool.rs","byte_start":469483,"byte_end":469550,"line_start":23,"line_end":23,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2851},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/pool.rs","byte_start":469944,"byte_end":469948,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"fill","qualname":"<RRBPool<A>>::fill","value":"pub fn fill(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Fill the memory pool with preallocated chunks.\n","sig":null,"attributes":[{"value":"/ Fill the memory pool with preallocated chunks.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/pool.rs","byte_start":469882,"byte_end":469932,"line_start":36,"line_end":36,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2852},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/pool.rs","byte_start":470112,"byte_end":470126,"line_start":44,"line_end":44,"column_start":12,"column_end":26},"name":"node_pool_size","qualname":"<RRBPool<A>>::node_pool_size","value":"pub fn node_pool_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the size of the node subpool.\n","sig":null,"attributes":[{"value":"/ Get the size of the node subpool.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/pool.rs","byte_start":470063,"byte_end":470100,"line_start":43,"line_end":43,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2853},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/pool.rs","byte_start":470249,"byte_end":470263,"line_start":49,"line_end":49,"column_start":12,"column_end":26},"name":"leaf_pool_size","qualname":"<RRBPool<A>>::leaf_pool_size","value":"pub fn leaf_pool_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the size of the leaf node subpool.\n","sig":null,"attributes":[{"value":"/ Get the size of the leaf node subpool.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/pool.rs","byte_start":470195,"byte_end":470237,"line_start":48,"line_end":48,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2854},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/pool.rs","byte_start":470388,"byte_end":470408,"line_start":54,"line_end":54,"column_start":12,"column_end":32},"name":"size_table_pool_size","qualname":"<RRBPool<A>>::size_table_pool_size","value":"pub fn size_table_pool_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the size of the size table subpool.\n","sig":null,"attributes":[{"value":"/ Get the size of the size table subpool.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/pool.rs","byte_start":470333,"byte_end":470376,"line_start":53,"line_end":53,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":2864},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rayon","qualname":"::vector::rayon","value":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","parent":null,"children":[{"krate":0,"index":2865},{"krate":0,"index":2866},{"krate":0,"index":2867},{"krate":0,"index":2870},{"krate":0,"index":2873},{"krate":0,"index":2876},{"krate":0,"index":2879},{"krate":0,"index":2882},{"krate":0,"index":2883},{"krate":0,"index":2886},{"krate":0,"index":2889},{"krate":0,"index":2892},{"krate":0,"index":2895},{"krate":0,"index":2901},{"krate":0,"index":2907},{"krate":0,"index":2911},{"krate":0,"index":2917},{"krate":0,"index":2925},{"krate":0,"index":2929},{"krate":0,"index":2935},{"krate":0,"index":2943},{"krate":0,"index":2947},{"krate":0,"index":2954},{"krate":0,"index":2958}],"decl_id":null,"docs":" Parallel iterators.","sig":null,"attributes":[{"value":"cfg(all(threadsafe, any(test, feature = \"rayon\")))","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":353093,"byte_end":353146,"line_start":71,"line_end":71,"column_start":1,"column_end":54}},{"value":"/ Parallel iterators.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":470873,"byte_end":470896,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":470897,"byte_end":470900,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ These are only available when using the `rayon` feature flag.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":470901,"byte_end":470966,"line_start":3,"line_end":3,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2907},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":471853,"byte_end":471860,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"ParIter","qualname":"::vector::rayon::ParIter","value":"ParIter {  }","parent":null,"children":[{"krate":0,"index":2910}],"decl_id":null,"docs":" A parallel iterator for [`Vector`][Vector].","sig":null,"attributes":[{"value":"/ A parallel iterator for [`Vector`][Vector].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":471754,"byte_end":471801,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":471802,"byte_end":471805,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [Vector]: ../struct.Vector.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":471806,"byte_end":471841,"line_start":41,"line_end":41,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2925},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":472790,"byte_end":472800,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"ParIterMut","qualname":"::vector::rayon::ParIterMut","value":"ParIterMut {  }","parent":null,"children":[{"krate":0,"index":2928}],"decl_id":null,"docs":" A mutable parallel iterator for [`Vector`][Vector].","sig":null,"attributes":[{"value":"/ A mutable parallel iterator for [`Vector`][Vector].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":472683,"byte_end":472738,"line_start":86,"line_end":86,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":472739,"byte_end":472742,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [Vector]: ../struct.Vector.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":472743,"byte_end":472778,"line_start":88,"line_end":88,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2966},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":355882,"byte_end":355888,"line_start":145,"line_end":145,"column_start":12,"column_end":18},"name":"Vector","qualname":"::vector::Vector","value":"Vector {  }","parent":null,"children":[{"krate":0,"index":2968}],"decl_id":null,"docs":" A persistent vector.","sig":null,"attributes":[{"value":"/ A persistent vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":353818,"byte_end":353842,"line_start":109,"line_end":109,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":353843,"byte_end":353846,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ This is a sequence of elements in insertion order - if you need a list of","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":353847,"byte_end":353924,"line_start":111,"line_end":111,"column_start":1,"column_end":78}},{"value":"/ things, any kind of list of things, this is what you're looking for.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":353925,"byte_end":353997,"line_start":112,"line_end":112,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":353998,"byte_end":354001,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ It's implemented as an [RRB vector][rrbpaper] with [smart head/tail","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":354002,"byte_end":354073,"line_start":114,"line_end":114,"column_start":1,"column_end":72}},{"value":"/ chunking][chunkedseq]. In performance terms, this means that practically","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":354074,"byte_end":354150,"line_start":115,"line_end":115,"column_start":1,"column_end":77}},{"value":"/ every operation is O(log n), except push/pop on both sides, which will be","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":354151,"byte_end":354228,"line_start":116,"line_end":116,"column_start":1,"column_end":78}},{"value":"/ O(1) amortised, and O(log n) in the worst case. In practice, the push/pop","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":354229,"byte_end":354306,"line_start":117,"line_end":117,"column_start":1,"column_end":78}},{"value":"/ operations will be blindingly fast, nearly on par with the native","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":354307,"byte_end":354376,"line_start":118,"line_end":118,"column_start":1,"column_end":70}},{"value":"/ [`VecDeque`][VecDeque], and other operations will have decent, if not high,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":354377,"byte_end":354456,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ performance, but they all have more or less the same O(log n) complexity, so","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":354457,"byte_end":354537,"line_start":120,"line_end":120,"column_start":1,"column_end":81}},{"value":"/ you don't need to keep their performance characteristics in mind -","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":354538,"byte_end":354608,"line_start":121,"line_end":121,"column_start":1,"column_end":71}},{"value":"/ everything, even splitting and merging, is safe to use and never too slow.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":354609,"byte_end":354687,"line_start":122,"line_end":122,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":354688,"byte_end":354691,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ## Performance Notes","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":354692,"byte_end":354716,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":354717,"byte_end":354720,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Because of the head/tail chunking technique, until you push a number of","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":354721,"byte_end":354796,"line_start":126,"line_end":126,"column_start":1,"column_end":76}},{"value":"/ items above double the tree's branching factor (that's `self.len()` = 2 ×","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":354797,"byte_end":354875,"line_start":127,"line_end":127,"column_start":1,"column_end":78}},{"value":"/ *k* (where *k* = 64) = 128) on either side, the data structure is still just","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":354876,"byte_end":354956,"line_start":128,"line_end":128,"column_start":1,"column_end":81}},{"value":"/ a handful of arrays, not yet an RRB tree, so you'll see performance and","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":354957,"byte_end":355032,"line_start":129,"line_end":129,"column_start":1,"column_end":76}},{"value":"/ memory characteristics similar to [`Vec`][Vec] or [`VecDeque`][VecDeque].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":355033,"byte_end":355110,"line_start":130,"line_end":130,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":355111,"byte_end":355114,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ This means that the structure always preallocates four chunks of size *k*","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":355115,"byte_end":355192,"line_start":132,"line_end":132,"column_start":1,"column_end":78}},{"value":"/ (*k* being the tree's branching factor), equivalent to a [`Vec`][Vec] with","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":355193,"byte_end":355271,"line_start":133,"line_end":133,"column_start":1,"column_end":79}},{"value":"/ an initial capacity of 256. Beyond that, it will allocate tree nodes of","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":355272,"byte_end":355347,"line_start":134,"line_end":134,"column_start":1,"column_end":76}},{"value":"/ capacity *k* as needed.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":355348,"byte_end":355375,"line_start":135,"line_end":135,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":355376,"byte_end":355379,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ In addition, vectors start out as single chunks, and only expand into the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":355380,"byte_end":355457,"line_start":137,"line_end":137,"column_start":1,"column_end":78}},{"value":"/ full data structure once you go past the chunk size. This makes them","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":355458,"byte_end":355530,"line_start":138,"line_end":138,"column_start":1,"column_end":73}},{"value":"/ perform identically to [`Vec`][Vec] at small sizes.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":355531,"byte_end":355586,"line_start":139,"line_end":139,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":355587,"byte_end":355590,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ [rrbpaper]: https://infoscience.epfl.ch/record/213452/files/rrbvector.pdf","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":355591,"byte_end":355668,"line_start":141,"line_end":141,"column_start":1,"column_end":78}},{"value":"/ [chunkedseq]: http://deepsea.inria.fr/pasl/chunkedseq.pdf","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":355669,"byte_end":355730,"line_start":142,"line_end":142,"column_start":1,"column_end":62}},{"value":"/ [Vec]: https://doc.rust-lang.org/std/vec/struct.Vec.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":355731,"byte_end":355791,"line_start":143,"line_end":143,"column_start":1,"column_end":61}},{"value":"/ [VecDeque]: https://doc.rust-lang.org/std/collections/struct.VecDeque.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":355792,"byte_end":355870,"line_start":144,"line_end":144,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":2983},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":356097,"byte_end":356100,"line_start":156,"line_end":156,"column_start":12,"column_end":15},"name":"RRB","qualname":"::vector::RRB","value":"RRB {  }","parent":null,"children":[{"krate":0,"index":2985},{"krate":0,"index":2986},{"krate":0,"index":2987},{"krate":0,"index":2988},{"krate":0,"index":2989},{"krate":0,"index":2990},{"krate":0,"index":2991}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2997},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":356984,"byte_end":356988,"line_start":186,"line_end":186,"column_start":12,"column_end":16},"name":"pool","qualname":"<Vector<A>>::pool","value":"pub fn pool(&Self) -> &RRBPool<A>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the memory pool this `Vector` is using.","sig":null,"attributes":[{"value":"/ Get a reference to the memory pool this `Vector` is using.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":356719,"byte_end":356781,"line_start":181,"line_end":181,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":356786,"byte_end":356789,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Note that if you didn't specifically construct it with a pool, you'll","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":356794,"byte_end":356867,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ get back a reference to a pool of size 0.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":356872,"byte_end":356917,"line_start":184,"line_end":184,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3002},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":359788,"byte_end":359791,"line_start":265,"line_end":265,"column_start":12,"column_end":15},"name":"new","qualname":"<Vector<A>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty vector.\n","sig":null,"attributes":[{"value":"/ Construct an empty vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":359730,"byte_end":359760,"line_start":263,"line_end":263,"column_start":5,"column_end":35}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":359765,"byte_end":359776,"line_start":264,"line_end":264,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3003},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360413,"byte_end":360416,"line_start":292,"line_end":292,"column_start":12,"column_end":15},"name":"len","qualname":"<Vector<A>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of a vector.","sig":null,"attributes":[{"value":"/ Get the length of a vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360161,"byte_end":360192,"line_start":280,"line_end":280,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360197,"byte_end":360200,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360205,"byte_end":360219,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360224,"byte_end":360227,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360232,"byte_end":360246,"line_start":284,"line_end":284,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360251,"byte_end":360254,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360259,"byte_end":360266,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360271,"byte_end":360306,"line_start":287,"line_end":287,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(5, vector![1, 2, 3, 4, 5].len());","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360311,"byte_end":360359,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360364,"byte_end":360371,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360376,"byte_end":360385,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360390,"byte_end":360401,"line_start":291,"line_end":291,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3004},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":361000,"byte_end":361008,"line_start":315,"line_end":315,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Vector<A>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether a vector is empty.","sig":null,"attributes":[{"value":"/ Test whether a vector is empty.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360617,"byte_end":360652,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360657,"byte_end":360660,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360665,"byte_end":360679,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360684,"byte_end":360687,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360692,"byte_end":360706,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360711,"byte_end":360714,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360719,"byte_end":360726,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360731,"byte_end":360766,"line_start":307,"line_end":307,"column_start":5,"column_end":40}},{"value":"/ # use im::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360771,"byte_end":360792,"line_start":308,"line_end":308,"column_start":5,"column_end":26}},{"value":"/ let vec = vector![\"Joe\", \"Mike\", \"Robert\"];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360797,"byte_end":360844,"line_start":309,"line_end":309,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(false, vec.is_empty());","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360849,"byte_end":360887,"line_start":310,"line_end":310,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(true, Vector::<i32>::new().is_empty());","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360892,"byte_end":360946,"line_start":311,"line_end":311,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360951,"byte_end":360958,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360963,"byte_end":360972,"line_start":313,"line_end":313,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":360977,"byte_end":360988,"line_start":314,"line_end":314,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3005},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":361791,"byte_end":361800,"line_start":336,"line_end":336,"column_start":12,"column_end":21},"name":"is_inline","qualname":"<Vector<A>>::is_inline","value":"pub fn is_inline(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether a vector is currently inlined.","sig":null,"attributes":[{"value":"/ Test whether a vector is currently inlined.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":361061,"byte_end":361108,"line_start":319,"line_end":319,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":361113,"byte_end":361116,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ Vectors small enough that their contents could be stored entirely inside","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":361121,"byte_end":361197,"line_start":321,"line_end":321,"column_start":5,"column_end":81}},{"value":"/ the space of `std::mem::size_of::<Vector<A>>()` bytes are stored inline on","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":361202,"byte_end":361280,"line_start":322,"line_end":322,"column_start":5,"column_end":83}},{"value":"/ the stack instead of allocating any chunks. This method returns `true` if","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":361285,"byte_end":361362,"line_start":323,"line_end":323,"column_start":5,"column_end":82}},{"value":"/ this vector is currently inlined, or `false` if it currently has chunks allocated","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":361367,"byte_end":361452,"line_start":324,"line_end":324,"column_start":5,"column_end":90}},{"value":"/ on the heap.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":361457,"byte_end":361473,"line_start":325,"line_end":325,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":361478,"byte_end":361481,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ This may be useful in conjunction with [`ptr_eq()`][ptr_eq], which checks if","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":361486,"byte_end":361566,"line_start":327,"line_end":327,"column_start":5,"column_end":85}},{"value":"/ two vectors' heap allocations are the same, and thus will never return `true`","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":361571,"byte_end":361652,"line_start":328,"line_end":328,"column_start":5,"column_end":86}},{"value":"/ for inlined vectors.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":361657,"byte_end":361681,"line_start":329,"line_end":329,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":361686,"byte_end":361689,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":361694,"byte_end":361708,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":361713,"byte_end":361716,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ [ptr_eq]: #method.ptr_eq","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":361721,"byte_end":361749,"line_start":333,"line_end":333,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":361754,"byte_end":361763,"line_start":334,"line_end":334,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":361768,"byte_end":361779,"line_start":335,"line_end":335,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3006},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":362784,"byte_end":362790,"line_start":359,"line_end":359,"column_start":12,"column_end":18},"name":"ptr_eq","qualname":"<Vector<A>>::ptr_eq","value":"pub fn ptr_eq(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether two vectors refer to the same content in memory.","sig":null,"attributes":[{"value":"/ Test whether two vectors refer to the same content in memory.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":361936,"byte_end":362001,"line_start":344,"line_end":344,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":362006,"byte_end":362009,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This uses the following rules to determine equality:","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":362014,"byte_end":362070,"line_start":346,"line_end":346,"column_start":5,"column_end":61}},{"value":"/ * If the two sides are references to the same vector, return true.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":362075,"byte_end":362145,"line_start":347,"line_end":347,"column_start":5,"column_end":75}},{"value":"/ * If the two sides are single chunk vectors pointing to the same chunk, return true.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":362150,"byte_end":362238,"line_start":348,"line_end":348,"column_start":5,"column_end":93}},{"value":"/ * If the two sides are full trees pointing to the same chunks, return true.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":362243,"byte_end":362322,"line_start":349,"line_end":349,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":362327,"byte_end":362330,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ This would return true if you're comparing a vector to itself, or","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":362335,"byte_end":362404,"line_start":351,"line_end":351,"column_start":5,"column_end":74}},{"value":"/ if you're comparing a vector to a fresh clone of itself. The exception to this is","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":362409,"byte_end":362494,"line_start":352,"line_end":352,"column_start":5,"column_end":90}},{"value":"/ if you've cloned an inline array (ie. an array with so few elements they can fit","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":362499,"byte_end":362583,"line_start":353,"line_end":353,"column_start":5,"column_end":89}},{"value":"/ inside the space a `Vector` allocates for its pointers, so there are no heap allocations","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":362588,"byte_end":362680,"line_start":354,"line_end":354,"column_start":5,"column_end":97}},{"value":"/ to compare).","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":362685,"byte_end":362701,"line_start":355,"line_end":355,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":362706,"byte_end":362709,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Time: O(1), or O(n) for inline vectors","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":362714,"byte_end":362756,"line_start":357,"line_end":357,"column_start":5,"column_end":47}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":362761,"byte_end":362772,"line_start":358,"line_end":358,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3009},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":363803,"byte_end":363807,"line_start":387,"line_end":387,"column_start":12,"column_end":16},"name":"iter","qualname":"<Vector<A>>::iter","value":"pub fn iter(&Self) -> Iter<, A>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over a vector.","sig":null,"attributes":[{"value":"/ Get an iterator over a vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":363700,"byte_end":363734,"line_start":382,"line_end":382,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":363739,"byte_end":363742,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":363747,"byte_end":363761,"line_start":384,"line_end":384,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":363766,"byte_end":363775,"line_start":385,"line_end":385,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":363780,"byte_end":363791,"line_start":386,"line_end":386,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3010},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":363977,"byte_end":363985,"line_start":396,"line_end":396,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Vector<A>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, A>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable iterator over a vector.","sig":null,"attributes":[{"value":"/ Get a mutable iterator over a vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":363867,"byte_end":363908,"line_start":391,"line_end":391,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":363913,"byte_end":363916,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":363921,"byte_end":363935,"line_start":393,"line_end":393,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":363940,"byte_end":363949,"line_start":394,"line_end":394,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":363954,"byte_end":363965,"line_start":395,"line_end":395,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3011},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":364457,"byte_end":364463,"line_start":411,"line_end":411,"column_start":12,"column_end":18},"name":"leaves","qualname":"<Vector<A>>::leaves","value":"pub fn leaves(&Self) -> Chunks<, A>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the leaf nodes of a vector.","sig":null,"attributes":[{"value":"/ Get an iterator over the leaf nodes of a vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":364055,"byte_end":364107,"line_start":400,"line_end":400,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":364112,"byte_end":364115,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ This returns an iterator over the [`Chunk`s][Chunk] at the leaves of the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":364120,"byte_end":364196,"line_start":402,"line_end":402,"column_start":5,"column_end":81}},{"value":"/ RRB tree. These are useful for efficient parallelisation of work on","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":364201,"byte_end":364272,"line_start":403,"line_end":403,"column_start":5,"column_end":76}},{"value":"/ the vector, but should not be used for basic iteration.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":364277,"byte_end":364336,"line_start":404,"line_end":404,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":364341,"byte_end":364344,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":364349,"byte_end":364363,"line_start":406,"line_end":406,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":364368,"byte_end":364371,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ [Chunk]: ../chunk/struct.Chunk.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":364376,"byte_end":364415,"line_start":408,"line_end":408,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":364420,"byte_end":364429,"line_start":409,"line_end":409,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":364434,"byte_end":364445,"line_start":410,"line_end":410,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3012},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":364935,"byte_end":364945,"line_start":426,"line_end":426,"column_start":12,"column_end":22},"name":"leaves_mut","qualname":"<Vector<A>>::leaves_mut","value":"pub fn leaves_mut(&mut Self) -> ChunksMut<, A>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable iterator over the leaf nodes of a vector.\n This returns an iterator over the [`Chunk`s][Chunk] at the leaves of the\n RRB tree. These are useful for efficient parallelisation of work on\n the vector, but should not be used for basic iteration.","sig":null,"attributes":[{"value":"/ Get a mutable iterator over the leaf nodes of a vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":364527,"byte_end":364586,"line_start":415,"line_end":415,"column_start":5,"column_end":64}},{"value":"/ This returns an iterator over the [`Chunk`s][Chunk] at the leaves of the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":364598,"byte_end":364674,"line_start":417,"line_end":417,"column_start":5,"column_end":81}},{"value":"/ RRB tree. These are useful for efficient parallelisation of work on","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":364679,"byte_end":364750,"line_start":418,"line_end":418,"column_start":5,"column_end":76}},{"value":"/ the vector, but should not be used for basic iteration.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":364755,"byte_end":364814,"line_start":419,"line_end":419,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":364819,"byte_end":364822,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":364827,"byte_end":364841,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":364846,"byte_end":364849,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ [Chunk]: ../chunk/struct.Chunk.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":364854,"byte_end":364893,"line_start":423,"line_end":423,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":364898,"byte_end":364907,"line_start":424,"line_end":424,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":364912,"byte_end":364923,"line_start":425,"line_end":425,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3013},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365175,"byte_end":365180,"line_start":437,"line_end":437,"column_start":12,"column_end":17},"name":"focus","qualname":"<Vector<A>>::focus","value":"pub fn focus(&Self) -> Focus<, A>","parent":null,"children":[],"decl_id":null,"docs":" Construct a [`Focus`][Focus] for a vector.","sig":null,"attributes":[{"value":"/ Construct a [`Focus`][Focus] for a vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365019,"byte_end":365065,"line_start":430,"line_end":430,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365070,"byte_end":365073,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365078,"byte_end":365092,"line_start":432,"line_end":432,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365097,"byte_end":365100,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ [Focus]: enum.Focus.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365105,"byte_end":365133,"line_start":434,"line_end":434,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365138,"byte_end":365147,"line_start":435,"line_end":435,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365152,"byte_end":365163,"line_start":436,"line_end":436,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3014},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365410,"byte_end":365419,"line_start":448,"line_end":448,"column_start":12,"column_end":21},"name":"focus_mut","qualname":"<Vector<A>>::focus_mut","value":"pub fn focus_mut(&mut Self) -> FocusMut<, A>","parent":null,"children":[],"decl_id":null,"docs":" Construct a [`FocusMut`][FocusMut] for a vector.","sig":null,"attributes":[{"value":"/ Construct a [`FocusMut`][FocusMut] for a vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365242,"byte_end":365294,"line_start":441,"line_end":441,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365299,"byte_end":365302,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365307,"byte_end":365321,"line_start":443,"line_end":443,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365326,"byte_end":365329,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ [FocusMut]: enum.FocusMut.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365334,"byte_end":365368,"line_start":445,"line_end":445,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365373,"byte_end":365382,"line_start":446,"line_end":446,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365387,"byte_end":365398,"line_start":447,"line_end":447,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3015},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365938,"byte_end":365941,"line_start":468,"line_end":468,"column_start":12,"column_end":15},"name":"get","qualname":"<Vector<A>>::get","value":"pub fn get(&Self, usize) -> Option<&A>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the value at index `index` in a vector.","sig":null,"attributes":[{"value":"/ Get a reference to the value at index `index` in a vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365491,"byte_end":365553,"line_start":452,"line_end":452,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365558,"byte_end":365561,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the index is out of bounds.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365566,"byte_end":365615,"line_start":454,"line_end":454,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365620,"byte_end":365623,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365628,"byte_end":365646,"line_start":456,"line_end":456,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365651,"byte_end":365654,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365659,"byte_end":365673,"line_start":458,"line_end":458,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365678,"byte_end":365681,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365686,"byte_end":365693,"line_start":460,"line_end":460,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365698,"byte_end":365733,"line_start":461,"line_end":461,"column_start":5,"column_end":40}},{"value":"/ # use im::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365738,"byte_end":365759,"line_start":462,"line_end":462,"column_start":5,"column_end":26}},{"value":"/ let vec = vector![\"Joe\", \"Mike\", \"Robert\"];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365764,"byte_end":365811,"line_start":463,"line_end":463,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(Some(&\"Robert\"), vec.get(2));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365816,"byte_end":365860,"line_start":464,"line_end":464,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, vec.get(5));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365865,"byte_end":365898,"line_start":465,"line_end":465,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365903,"byte_end":365910,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":365915,"byte_end":365926,"line_start":467,"line_end":467,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3016},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":367687,"byte_end":367694,"line_start":525,"line_end":525,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Vector<A>>::get_mut","value":"pub fn get_mut(&mut Self, usize) -> Option<&mut A>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the value at index `index` in a\n vector.","sig":null,"attributes":[{"value":"/ Get a mutable reference to the value at index `index` in a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":367099,"byte_end":367161,"line_start":504,"line_end":504,"column_start":5,"column_end":67}},{"value":"/ vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":367166,"byte_end":367177,"line_start":505,"line_end":505,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":367182,"byte_end":367185,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the index is out of bounds.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":367190,"byte_end":367239,"line_start":507,"line_end":507,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":367244,"byte_end":367247,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":367252,"byte_end":367270,"line_start":509,"line_end":509,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":367275,"byte_end":367278,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":367283,"byte_end":367297,"line_start":511,"line_end":511,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":367302,"byte_end":367305,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":367310,"byte_end":367317,"line_start":513,"line_end":513,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":367322,"byte_end":367357,"line_start":514,"line_end":514,"column_start":5,"column_end":40}},{"value":"/ # use im::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":367362,"byte_end":367383,"line_start":515,"line_end":515,"column_start":5,"column_end":26}},{"value":"/ let mut vec = vector![\"Joe\", \"Mike\", \"Robert\"];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":367388,"byte_end":367439,"line_start":516,"line_end":516,"column_start":5,"column_end":56}},{"value":"/ {","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":367444,"byte_end":367449,"line_start":517,"line_end":517,"column_start":5,"column_end":10}},{"value":"/     let robert = vec.get_mut(2).unwrap();","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":367454,"byte_end":367499,"line_start":518,"line_end":518,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(&mut \"Robert\", robert);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":367504,"byte_end":367546,"line_start":519,"line_end":519,"column_start":5,"column_end":47}},{"value":"/     *robert = \"Bjarne\";","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":367551,"byte_end":367578,"line_start":520,"line_end":520,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":367583,"byte_end":367588,"line_start":521,"line_end":521,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(vector![\"Joe\", \"Mike\", \"Bjarne\"], vec);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":367593,"byte_end":367647,"line_start":522,"line_end":522,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":367652,"byte_end":367659,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":367664,"byte_end":367675,"line_start":524,"line_end":524,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3017},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":369509,"byte_end":369514,"line_start":573,"line_end":573,"column_start":12,"column_end":17},"name":"front","qualname":"<Vector<A>>::front","value":"pub fn front(&Self) -> Option<&A>","parent":null,"children":[],"decl_id":null,"docs":" Get the first element of a vector.","sig":null,"attributes":[{"value":"/ Get the first element of a vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":369338,"byte_end":369376,"line_start":566,"line_end":566,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":369381,"byte_end":369384,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If the vector is empty, `None` is returned.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":369389,"byte_end":369436,"line_start":568,"line_end":568,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":369441,"byte_end":369444,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":369449,"byte_end":369467,"line_start":570,"line_end":570,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":369472,"byte_end":369481,"line_start":571,"line_end":571,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":369486,"byte_end":369497,"line_start":572,"line_end":572,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3018},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":369763,"byte_end":369772,"line_start":584,"line_end":584,"column_start":12,"column_end":21},"name":"front_mut","qualname":"<Vector<A>>::front_mut","value":"pub fn front_mut(&mut Self) -> Option<&mut A>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the first element of a vector.","sig":null,"attributes":[{"value":"/ Get a mutable reference to the first element of a vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":369569,"byte_end":369630,"line_start":577,"line_end":577,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":369635,"byte_end":369638,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ If the vector is empty, `None` is returned.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":369643,"byte_end":369690,"line_start":579,"line_end":579,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":369695,"byte_end":369698,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":369703,"byte_end":369721,"line_start":581,"line_end":581,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":369726,"byte_end":369735,"line_start":582,"line_end":582,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":369740,"byte_end":369751,"line_start":583,"line_end":583,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3019},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":370115,"byte_end":370119,"line_start":599,"line_end":599,"column_start":12,"column_end":16},"name":"head","qualname":"<Vector<A>>::head","value":"pub fn head(&Self) -> Option<&A>","parent":null,"children":[],"decl_id":null,"docs":" Get the first element of a vector.","sig":null,"attributes":[{"value":"/ Get the first element of a vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":369839,"byte_end":369877,"line_start":588,"line_end":588,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":369882,"byte_end":369885,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ If the vector is empty, `None` is returned.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":369890,"byte_end":369937,"line_start":590,"line_end":590,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":369942,"byte_end":369945,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ This is an alias for the [`front`][front] method.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":369950,"byte_end":370003,"line_start":592,"line_end":592,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":370008,"byte_end":370011,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":370016,"byte_end":370034,"line_start":594,"line_end":594,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":370039,"byte_end":370042,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ [front]: #method.front","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":370047,"byte_end":370073,"line_start":596,"line_end":596,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":370078,"byte_end":370087,"line_start":597,"line_end":597,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":370092,"byte_end":370103,"line_start":598,"line_end":598,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3020},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":370330,"byte_end":370334,"line_start":609,"line_end":609,"column_start":12,"column_end":16},"name":"back","qualname":"<Vector<A>>::back","value":"pub fn back(&Self) -> Option<&A>","parent":null,"children":[],"decl_id":null,"docs":" Get the last element of a vector.","sig":null,"attributes":[{"value":"/ Get the last element of a vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":370174,"byte_end":370211,"line_start":603,"line_end":603,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":370216,"byte_end":370219,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ If the vector is empty, `None` is returned.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":370224,"byte_end":370271,"line_start":605,"line_end":605,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":370276,"byte_end":370279,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":370284,"byte_end":370302,"line_start":607,"line_end":607,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":370307,"byte_end":370318,"line_start":608,"line_end":608,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3021},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":370658,"byte_end":370666,"line_start":623,"line_end":623,"column_start":12,"column_end":20},"name":"back_mut","qualname":"<Vector<A>>::back_mut","value":"pub fn back_mut(&mut Self) -> Option<&mut A>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the last element of a vector.","sig":null,"attributes":[{"value":"/ Get a mutable reference to the last element of a vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":370479,"byte_end":370539,"line_start":617,"line_end":617,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":370544,"byte_end":370547,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ If the vector is empty, `None` is returned.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":370552,"byte_end":370599,"line_start":619,"line_end":619,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":370604,"byte_end":370607,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":370612,"byte_end":370630,"line_start":621,"line_end":621,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":370635,"byte_end":370646,"line_start":622,"line_end":622,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3022},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371121,"byte_end":371125,"line_start":643,"line_end":643,"column_start":12,"column_end":16},"name":"last","qualname":"<Vector<A>>::last","value":"pub fn last(&Self) -> Option<&A>","parent":null,"children":[],"decl_id":null,"docs":" Get the last element of a vector.","sig":null,"attributes":[{"value":"/ Get the last element of a vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":370850,"byte_end":370887,"line_start":632,"line_end":632,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":370892,"byte_end":370895,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ If the vector is empty, `None` is returned.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":370900,"byte_end":370947,"line_start":634,"line_end":634,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":370952,"byte_end":370955,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ This is an alias for the [`back`][back] method.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":370960,"byte_end":371011,"line_start":636,"line_end":636,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371016,"byte_end":371019,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371024,"byte_end":371042,"line_start":638,"line_end":638,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371047,"byte_end":371050,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ [back]: #method.back","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371055,"byte_end":371079,"line_start":640,"line_end":640,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371084,"byte_end":371093,"line_start":641,"line_end":641,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371098,"byte_end":371109,"line_start":642,"line_end":642,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3023},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371727,"byte_end":371735,"line_start":665,"line_end":665,"column_start":12,"column_end":20},"name":"index_of","qualname":"<Vector<A>>::index_of","value":"pub fn index_of(&Self, &A) -> Option<usize> where A: PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Get the index of a given element in the vector.","sig":null,"attributes":[{"value":"/ Get the index of a given element in the vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371180,"byte_end":371231,"line_start":647,"line_end":647,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371236,"byte_end":371239,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ Searches the vector for the first occurrence of a given value,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371244,"byte_end":371310,"line_start":649,"line_end":649,"column_start":5,"column_end":71}},{"value":"/ and returns the index of the value if it's there. Otherwise,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371315,"byte_end":371379,"line_start":650,"line_end":650,"column_start":5,"column_end":69}},{"value":"/ it returns `None`.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371384,"byte_end":371406,"line_start":651,"line_end":651,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371411,"byte_end":371414,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371419,"byte_end":371433,"line_start":653,"line_end":653,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371438,"byte_end":371441,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371446,"byte_end":371460,"line_start":655,"line_end":655,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371465,"byte_end":371468,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371473,"byte_end":371480,"line_start":657,"line_end":657,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371485,"byte_end":371520,"line_start":658,"line_end":658,"column_start":5,"column_end":40}},{"value":"/ # use im::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371525,"byte_end":371546,"line_start":659,"line_end":659,"column_start":5,"column_end":26}},{"value":"/ let mut vec = vector![1, 2, 3, 4, 5];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371551,"byte_end":371592,"line_start":660,"line_end":660,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(Some(2), vec.index_of(&3));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371597,"byte_end":371639,"line_start":661,"line_end":661,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(None, vec.index_of(&31337));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371644,"byte_end":371687,"line_start":662,"line_end":662,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371692,"byte_end":371699,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371704,"byte_end":371715,"line_start":664,"line_end":664,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3024},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":372548,"byte_end":372556,"line_start":696,"line_end":696,"column_start":12,"column_end":20},"name":"contains","qualname":"<Vector<A>>::contains","value":"pub fn contains(&Self, &A) -> bool where A: PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Test if a given element is in the vector.","sig":null,"attributes":[{"value":"/ Test if a given element is in the vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":371979,"byte_end":372024,"line_start":677,"line_end":677,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":372029,"byte_end":372032,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ Searches the vector for the first occurrence of a given value,","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":372037,"byte_end":372103,"line_start":679,"line_end":679,"column_start":5,"column_end":71}},{"value":"/ and returns `true if it's there. If it's nowhere to be found","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":372108,"byte_end":372172,"line_start":680,"line_end":680,"column_start":5,"column_end":69}},{"value":"/ in the vector, it returns `false`.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":372177,"byte_end":372215,"line_start":681,"line_end":681,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":372220,"byte_end":372223,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":372228,"byte_end":372242,"line_start":683,"line_end":683,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":372247,"byte_end":372250,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":372255,"byte_end":372269,"line_start":685,"line_end":685,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":372274,"byte_end":372277,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":372282,"byte_end":372289,"line_start":687,"line_end":687,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":372294,"byte_end":372329,"line_start":688,"line_end":688,"column_start":5,"column_end":40}},{"value":"/ # use im::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":372334,"byte_end":372355,"line_start":689,"line_end":689,"column_start":5,"column_end":26}},{"value":"/ let mut vec = vector![1, 2, 3, 4, 5];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":372360,"byte_end":372401,"line_start":690,"line_end":690,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(true, vec.contains(&3));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":372406,"byte_end":372445,"line_start":691,"line_end":691,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(false, vec.contains(&31337));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":372450,"byte_end":372494,"line_start":692,"line_end":692,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":372499,"byte_end":372506,"line_start":693,"line_end":693,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":372511,"byte_end":372520,"line_start":694,"line_end":694,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":372525,"byte_end":372536,"line_start":695,"line_end":695,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3025},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":372874,"byte_end":372879,"line_start":709,"line_end":709,"column_start":12,"column_end":17},"name":"clear","qualname":"<Vector<A>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Discard all elements from the vector.","sig":null,"attributes":[{"value":"/ Discard all elements from the vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":372671,"byte_end":372712,"line_start":703,"line_end":703,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":372717,"byte_end":372720,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ This leaves you with an empty vector, and all elements that","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":372725,"byte_end":372788,"line_start":705,"line_end":705,"column_start":5,"column_end":68}},{"value":"/ were previously inside it are dropped.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":372793,"byte_end":372835,"line_start":706,"line_end":706,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":372840,"byte_end":372843,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":372848,"byte_end":372862,"line_start":708,"line_end":708,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":3026},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":373612,"byte_end":373628,"line_start":729,"line_end":729,"column_start":12,"column_end":28},"name":"binary_search_by","qualname":"<Vector<A>>::binary_search_by","value":"pub fn binary_search_by<F>(&Self, F) -> Result<usize, usize> where\nF: FnMut(&A) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Binary search a sorted vector for a given element using a comparator\n function.","sig":null,"attributes":[{"value":"/ Binary search a sorted vector for a given element using a comparator","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":373019,"byte_end":373091,"line_start":715,"line_end":715,"column_start":5,"column_end":77}},{"value":"/ function.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":373096,"byte_end":373109,"line_start":716,"line_end":716,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":373114,"byte_end":373117,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ Assumes the vector has already been sorted using the same comparator","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":373122,"byte_end":373194,"line_start":718,"line_end":718,"column_start":5,"column_end":77}},{"value":"/ function, eg. by using [`sort_by`][sort_by].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":373199,"byte_end":373247,"line_start":719,"line_end":719,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":373252,"byte_end":373255,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ If the value is found, it returns `Ok(index)` where `index` is the index","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":373260,"byte_end":373336,"line_start":721,"line_end":721,"column_start":5,"column_end":81}},{"value":"/ of the element. If the value isn't found, it returns `Err(index)` where","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":373341,"byte_end":373416,"line_start":722,"line_end":722,"column_start":5,"column_end":80}},{"value":"/ `index` is the index at which the element would need to be inserted to","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":373421,"byte_end":373495,"line_start":723,"line_end":723,"column_start":5,"column_end":79}},{"value":"/ maintain sorted order.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":373500,"byte_end":373526,"line_start":724,"line_end":724,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":373531,"byte_end":373534,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":373539,"byte_end":373557,"line_start":726,"line_end":726,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":373562,"byte_end":373565,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ [sort_by]: #method.sort_by","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":373570,"byte_end":373600,"line_start":728,"line_end":728,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3028},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":374656,"byte_end":374669,"line_start":762,"line_end":762,"column_start":12,"column_end":25},"name":"binary_search","qualname":"<Vector<A>>::binary_search","value":"pub fn binary_search(&Self, &A) -> Result<usize, usize> where A: Ord","parent":null,"children":[],"decl_id":null,"docs":" Binary search a sorted vector for a given element.","sig":null,"attributes":[{"value":"/ Binary search a sorted vector for a given element.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":374280,"byte_end":374334,"line_start":754,"line_end":754,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":374339,"byte_end":374342,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ If the value is found, it returns `Ok(index)` where `index` is the index","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":374347,"byte_end":374423,"line_start":756,"line_end":756,"column_start":5,"column_end":81}},{"value":"/ of the element. If the value isn't found, it returns `Err(index)` where","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":374428,"byte_end":374503,"line_start":757,"line_end":757,"column_start":5,"column_end":80}},{"value":"/ `index` is the index at which the element would need to be inserted to","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":374508,"byte_end":374582,"line_start":758,"line_end":758,"column_start":5,"column_end":79}},{"value":"/ maintain sorted order.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":374587,"byte_end":374613,"line_start":759,"line_end":759,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":374618,"byte_end":374621,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":374626,"byte_end":374644,"line_start":761,"line_end":761,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3030},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375413,"byte_end":375433,"line_start":783,"line_end":783,"column_start":12,"column_end":32},"name":"binary_search_by_key","qualname":"<Vector<A>>::binary_search_by_key","value":"pub fn binary_search_by_key<B, F>(&Self, &B, F) -> Result<usize, usize> where\nF: FnMut(&A) -> B, B: Ord","parent":null,"children":[],"decl_id":null,"docs":" Binary search a sorted vector for a given element with a key extract\n function.","sig":null,"attributes":[{"value":"/ Binary search a sorted vector for a given element with a key extract","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":374803,"byte_end":374875,"line_start":769,"line_end":769,"column_start":5,"column_end":77}},{"value":"/ function.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":374880,"byte_end":374893,"line_start":770,"line_end":770,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":374898,"byte_end":374901,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ Assumes the vector has already been sorted using the same key extract","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":374906,"byte_end":374979,"line_start":772,"line_end":772,"column_start":5,"column_end":78}},{"value":"/ function, eg. by using [`sort_by_key`][sort_by_key].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":374984,"byte_end":375040,"line_start":773,"line_end":773,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375045,"byte_end":375048,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ If the value is found, it returns `Ok(index)` where `index` is the index","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375053,"byte_end":375129,"line_start":775,"line_end":775,"column_start":5,"column_end":81}},{"value":"/ of the element. If the value isn't found, it returns `Err(index)` where","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375134,"byte_end":375209,"line_start":776,"line_end":776,"column_start":5,"column_end":80}},{"value":"/ `index` is the index at which the element would need to be inserted to","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375214,"byte_end":375288,"line_start":777,"line_end":777,"column_start":5,"column_end":79}},{"value":"/ maintain sorted order.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375293,"byte_end":375319,"line_start":778,"line_end":778,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375324,"byte_end":375327,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375332,"byte_end":375350,"line_start":780,"line_end":780,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375355,"byte_end":375358,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ [sort_by_key]: #method.sort_by_key","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375363,"byte_end":375401,"line_start":782,"line_end":782,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3036},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375999,"byte_end":376003,"line_start":809,"line_end":809,"column_start":12,"column_end":16},"name":"unit","qualname":"<Vector<A>>::unit","value":"pub fn unit(A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a vector with a single value.","sig":null,"attributes":[{"value":"/ Construct a vector with a single value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375634,"byte_end":375677,"line_start":793,"line_end":793,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375682,"byte_end":375685,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375690,"byte_end":375704,"line_start":795,"line_end":795,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375709,"byte_end":375712,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375717,"byte_end":375724,"line_start":797,"line_end":797,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375729,"byte_end":375764,"line_start":798,"line_end":798,"column_start":5,"column_end":40}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375769,"byte_end":375798,"line_start":799,"line_end":799,"column_start":5,"column_end":34}},{"value":"/ let vec = Vector::unit(1337);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375803,"byte_end":375836,"line_start":800,"line_end":800,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(1, vec.len());","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375841,"byte_end":375870,"line_start":801,"line_end":801,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375875,"byte_end":375890,"line_start":802,"line_end":802,"column_start":5,"column_end":20}},{"value":"/   vec.get(0),","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375895,"byte_end":375912,"line_start":803,"line_end":803,"column_start":5,"column_end":22}},{"value":"/   Some(&1337)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375917,"byte_end":375934,"line_start":804,"line_end":804,"column_start":5,"column_end":22}},{"value":"/ );","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375939,"byte_end":375945,"line_start":805,"line_end":805,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375950,"byte_end":375957,"line_start":806,"line_end":806,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375962,"byte_end":375971,"line_start":807,"line_end":807,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375976,"byte_end":375987,"line_start":808,"line_end":808,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3037},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":376850,"byte_end":376856,"line_start":840,"line_end":840,"column_start":12,"column_end":18},"name":"update","qualname":"<Vector<A>>::update","value":"pub fn update(&Self, usize, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new vector with the value at index `index` updated.","sig":null,"attributes":[{"value":"/ Create a new vector with the value at index `index` updated.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":376452,"byte_end":376516,"line_start":825,"line_end":825,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":376521,"byte_end":376524,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ Panics if the index is out of bounds.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":376529,"byte_end":376570,"line_start":827,"line_end":827,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":376575,"byte_end":376578,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":376583,"byte_end":376601,"line_start":829,"line_end":829,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":376606,"byte_end":376609,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":376614,"byte_end":376628,"line_start":831,"line_end":831,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":376633,"byte_end":376636,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":376641,"byte_end":376648,"line_start":833,"line_end":833,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":376653,"byte_end":376688,"line_start":834,"line_end":834,"column_start":5,"column_end":40}},{"value":"/ # use im::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":376693,"byte_end":376714,"line_start":835,"line_end":835,"column_start":5,"column_end":26}},{"value":"/ let mut vec = vector![1, 2, 3];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":376719,"byte_end":376754,"line_start":836,"line_end":836,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(vector![1, 5, 3], vec.update(1, 5));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":376759,"byte_end":376810,"line_start":837,"line_end":837,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":376815,"byte_end":376822,"line_start":838,"line_end":838,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":376827,"byte_end":376838,"line_start":839,"line_end":839,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3038},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":377203,"byte_end":377206,"line_start":854,"line_end":854,"column_start":12,"column_end":15},"name":"set","qualname":"<Vector<A>>::set","value":"pub fn set(&mut Self, usize, A) -> A","parent":null,"children":[],"decl_id":null,"docs":" Update the value at index `index` in a vector.","sig":null,"attributes":[{"value":"/ Update the value at index `index` in a vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":376985,"byte_end":377035,"line_start":846,"line_end":846,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":377040,"byte_end":377043,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ Returns the previous value at the index.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":377048,"byte_end":377092,"line_start":848,"line_end":848,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":377097,"byte_end":377100,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Panics if the index is out of bounds.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":377105,"byte_end":377146,"line_start":850,"line_end":850,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":377151,"byte_end":377154,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":377159,"byte_end":377177,"line_start":852,"line_end":852,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":377182,"byte_end":377191,"line_start":853,"line_end":853,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3039},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":377389,"byte_end":377393,"line_start":861,"line_end":861,"column_start":12,"column_end":16},"name":"swap","qualname":"<Vector<A>>::swap","value":"pub fn swap(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swap the elements at indices `i` and `j`.","sig":null,"attributes":[{"value":"/ Swap the elements at indices `i` and `j`.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":377301,"byte_end":377346,"line_start":858,"line_end":858,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":377351,"byte_end":377354,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":377359,"byte_end":377377,"line_start":860,"line_end":860,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3040},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":377791,"byte_end":377801,"line_start":878,"line_end":878,"column_start":12,"column_end":22},"name":"push_front","qualname":"<Vector<A>>::push_front","value":"pub fn push_front(&mut Self, A)","parent":null,"children":[],"decl_id":null,"docs":" Push a value to the front of a vector.","sig":null,"attributes":[{"value":"/ Push a value to the front of a vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":377471,"byte_end":377513,"line_start":865,"line_end":865,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":377518,"byte_end":377521,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)*","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":377526,"byte_end":377541,"line_start":867,"line_end":867,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":377546,"byte_end":377549,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":377554,"byte_end":377568,"line_start":869,"line_end":869,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":377573,"byte_end":377576,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":377581,"byte_end":377588,"line_start":871,"line_end":871,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":377593,"byte_end":377628,"line_start":872,"line_end":872,"column_start":5,"column_end":40}},{"value":"/ # use im::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":377633,"byte_end":377654,"line_start":873,"line_end":873,"column_start":5,"column_end":26}},{"value":"/ let mut vec = vector![5, 6, 7];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":377659,"byte_end":377694,"line_start":874,"line_end":874,"column_start":5,"column_end":40}},{"value":"/ vec.push_front(4);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":377699,"byte_end":377721,"line_start":875,"line_end":875,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(vector![4, 5, 6, 7], vec);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":377726,"byte_end":377767,"line_start":876,"line_end":876,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":377772,"byte_end":377779,"line_start":877,"line_end":877,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3041},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":378523,"byte_end":378532,"line_start":904,"line_end":904,"column_start":12,"column_end":21},"name":"push_back","qualname":"<Vector<A>>::push_back","value":"pub fn push_back(&mut Self, A)","parent":null,"children":[],"decl_id":null,"docs":" Push a value to the back of a vector.","sig":null,"attributes":[{"value":"/ Push a value to the back of a vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":378205,"byte_end":378246,"line_start":891,"line_end":891,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":378251,"byte_end":378254,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)*","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":378259,"byte_end":378274,"line_start":893,"line_end":893,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":378279,"byte_end":378282,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":378287,"byte_end":378301,"line_start":895,"line_end":895,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":378306,"byte_end":378309,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":378314,"byte_end":378321,"line_start":897,"line_end":897,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":378326,"byte_end":378361,"line_start":898,"line_end":898,"column_start":5,"column_end":40}},{"value":"/ # use im::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":378366,"byte_end":378387,"line_start":899,"line_end":899,"column_start":5,"column_end":26}},{"value":"/ let mut vec = vector![1, 2, 3];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":378392,"byte_end":378427,"line_start":900,"line_end":900,"column_start":5,"column_end":40}},{"value":"/ vec.push_back(4);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":378432,"byte_end":378453,"line_start":901,"line_end":901,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(vector![1, 2, 3, 4], vec);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":378458,"byte_end":378499,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":378504,"byte_end":378511,"line_start":903,"line_end":903,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3042},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":379278,"byte_end":379287,"line_start":930,"line_end":930,"column_start":12,"column_end":21},"name":"pop_front","qualname":"<Vector<A>>::pop_front","value":"pub fn pop_front(&mut Self) -> Option<A>","parent":null,"children":[],"decl_id":null,"docs":" Remove the first element from a vector and return it.","sig":null,"attributes":[{"value":"/ Remove the first element from a vector and return it.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":378930,"byte_end":378987,"line_start":917,"line_end":917,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":378992,"byte_end":378995,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)*","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":379000,"byte_end":379015,"line_start":919,"line_end":919,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":379020,"byte_end":379023,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":379028,"byte_end":379042,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":379047,"byte_end":379050,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":379055,"byte_end":379062,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":379067,"byte_end":379102,"line_start":924,"line_end":924,"column_start":5,"column_end":40}},{"value":"/ # use im::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":379107,"byte_end":379128,"line_start":925,"line_end":925,"column_start":5,"column_end":26}},{"value":"/ let mut vec = vector![1, 2, 3];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":379133,"byte_end":379168,"line_start":926,"line_end":926,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(Some(1), vec.pop_front());","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":379173,"byte_end":379214,"line_start":927,"line_end":927,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(vector![2, 3], vec);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":379219,"byte_end":379254,"line_start":928,"line_end":928,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":379259,"byte_end":379266,"line_start":929,"line_end":929,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3043},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":380007,"byte_end":380015,"line_start":955,"line_end":955,"column_start":12,"column_end":20},"name":"pop_back","qualname":"<Vector<A>>::pop_back","value":"pub fn pop_back(&mut Self) -> Option<A>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last element from a vector and return it.","sig":null,"attributes":[{"value":"/ Remove the last element from a vector and return it.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":379661,"byte_end":379717,"line_start":942,"line_end":942,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":379722,"byte_end":379725,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)*","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":379730,"byte_end":379745,"line_start":944,"line_end":944,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":379750,"byte_end":379753,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":379758,"byte_end":379772,"line_start":946,"line_end":946,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":379777,"byte_end":379780,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":379785,"byte_end":379792,"line_start":948,"line_end":948,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":379797,"byte_end":379832,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/ # use im::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":379837,"byte_end":379858,"line_start":950,"line_end":950,"column_start":5,"column_end":26}},{"value":"/ let mut vec = vector![1, 2, 3];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":379863,"byte_end":379898,"line_start":951,"line_end":951,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(Some(3), vec.pop_back());","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":379903,"byte_end":379943,"line_start":952,"line_end":952,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vector![1, 2], vec);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":379948,"byte_end":379983,"line_start":953,"line_end":953,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":379988,"byte_end":379995,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3044},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":380752,"byte_end":380758,"line_start":980,"line_end":980,"column_start":12,"column_end":18},"name":"append","qualname":"<Vector<A>>::append","value":"pub fn append(&mut Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Append the vector `other` to the end of the current vector.","sig":null,"attributes":[{"value":"/ Append the vector `other` to the end of the current vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":380383,"byte_end":380446,"line_start":967,"line_end":967,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":380451,"byte_end":380454,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":380459,"byte_end":380477,"line_start":969,"line_end":969,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":380482,"byte_end":380485,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":380490,"byte_end":380504,"line_start":971,"line_end":971,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":380509,"byte_end":380512,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":380517,"byte_end":380524,"line_start":973,"line_end":973,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":380529,"byte_end":380564,"line_start":974,"line_end":974,"column_start":5,"column_end":40}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":380569,"byte_end":380598,"line_start":975,"line_end":975,"column_start":5,"column_end":34}},{"value":"/ let mut vec = vector![1, 2, 3];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":380603,"byte_end":380638,"line_start":976,"line_end":976,"column_start":5,"column_end":40}},{"value":"/ vec.append(vector![7, 8, 9]);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":380643,"byte_end":380676,"line_start":977,"line_end":977,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(vector![1, 2, 3, 7, 8, 9], vec);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":380681,"byte_end":380728,"line_start":978,"line_end":978,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":380733,"byte_end":380740,"line_start":979,"line_end":979,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3045},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":385922,"byte_end":385928,"line_start":1096,"line_end":1096,"column_start":12,"column_end":18},"name":"retain","qualname":"<Vector<A>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&A) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Retain only the elements specified by the predicate.","sig":null,"attributes":[{"value":"/ Retain only the elements specified by the predicate.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":385716,"byte_end":385772,"line_start":1090,"line_end":1090,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":385777,"byte_end":385780,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ Remove all elements for which the provided function `f`","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":385785,"byte_end":385844,"line_start":1092,"line_end":1092,"column_start":5,"column_end":64}},{"value":"/ returns false from the vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":385849,"byte_end":385883,"line_start":1093,"line_end":1093,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":385888,"byte_end":385891,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":385896,"byte_end":385910,"line_start":1095,"line_end":1095,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":3047},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":386975,"byte_end":386983,"line_start":1135,"line_end":1135,"column_start":12,"column_end":20},"name":"split_at","qualname":"<Vector<A>>::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split a vector at a given index.","sig":null,"attributes":[{"value":"/ Split a vector at a given index.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":386413,"byte_end":386449,"line_start":1117,"line_end":1117,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":386454,"byte_end":386457,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ Split a vector at a given index, consuming the vector and","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":386462,"byte_end":386523,"line_start":1119,"line_end":1119,"column_start":5,"column_end":66}},{"value":"/ returning a pair of the left hand side and the right hand side","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":386528,"byte_end":386594,"line_start":1120,"line_end":1120,"column_start":5,"column_end":71}},{"value":"/ of the split.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":386599,"byte_end":386616,"line_start":1121,"line_end":1121,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":386621,"byte_end":386624,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":386629,"byte_end":386647,"line_start":1123,"line_end":1123,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":386652,"byte_end":386655,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":386660,"byte_end":386674,"line_start":1125,"line_end":1125,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":386679,"byte_end":386682,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":386687,"byte_end":386694,"line_start":1127,"line_end":1127,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":386699,"byte_end":386734,"line_start":1128,"line_end":1128,"column_start":5,"column_end":40}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":386739,"byte_end":386768,"line_start":1129,"line_end":1129,"column_start":5,"column_end":34}},{"value":"/ let mut vec = vector![1, 2, 3, 7, 8, 9];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":386773,"byte_end":386817,"line_start":1130,"line_end":1130,"column_start":5,"column_end":49}},{"value":"/ let (left, right) = vec.split_at(3);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":386822,"byte_end":386862,"line_start":1131,"line_end":1131,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vector![1, 2, 3], left);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":386867,"byte_end":386906,"line_start":1132,"line_end":1132,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(vector![7, 8, 9], right);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":386911,"byte_end":386951,"line_start":1133,"line_end":1133,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":386956,"byte_end":386963,"line_start":1134,"line_end":1134,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3048},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":387665,"byte_end":387674,"line_start":1158,"line_end":1158,"column_start":12,"column_end":21},"name":"split_off","qualname":"<Vector<A>>::split_off","value":"pub fn split_off(&mut Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Split a vector at a given index.","sig":null,"attributes":[{"value":"/ Split a vector at a given index.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":387102,"byte_end":387138,"line_start":1140,"line_end":1140,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":387143,"byte_end":387146,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ Split a vector at a given index, leaving the left hand side in","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":387151,"byte_end":387217,"line_start":1142,"line_end":1142,"column_start":5,"column_end":71}},{"value":"/ the current vector and returning a new vector containing the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":387222,"byte_end":387286,"line_start":1143,"line_end":1143,"column_start":5,"column_end":69}},{"value":"/ right hand side.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":387291,"byte_end":387311,"line_start":1144,"line_end":1144,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":387316,"byte_end":387319,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":387324,"byte_end":387342,"line_start":1146,"line_end":1146,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":387347,"byte_end":387350,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":387355,"byte_end":387369,"line_start":1148,"line_end":1148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":387374,"byte_end":387377,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":387382,"byte_end":387389,"line_start":1150,"line_end":1150,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":387394,"byte_end":387429,"line_start":1151,"line_end":1151,"column_start":5,"column_end":40}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":387434,"byte_end":387463,"line_start":1152,"line_end":1152,"column_start":5,"column_end":34}},{"value":"/ let mut left = vector![1, 2, 3, 7, 8, 9];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":387468,"byte_end":387513,"line_start":1153,"line_end":1153,"column_start":5,"column_end":50}},{"value":"/ let right = left.split_off(3);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":387518,"byte_end":387552,"line_start":1154,"line_end":1154,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(vector![1, 2, 3], left);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":387557,"byte_end":387596,"line_start":1155,"line_end":1155,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(vector![7, 8, 9], right);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":387601,"byte_end":387641,"line_start":1156,"line_end":1156,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":387646,"byte_end":387653,"line_start":1157,"line_end":1157,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3049},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":394216,"byte_end":394220,"line_start":1303,"line_end":1303,"column_start":12,"column_end":16},"name":"skip","qualname":"<Vector<A>>::skip","value":"pub fn skip(&Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a vector with `count` elements removed from the\n start of the current vector.","sig":null,"attributes":[{"value":"/ Construct a vector with `count` elements removed from the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":394059,"byte_end":394120,"line_start":1298,"line_end":1298,"column_start":5,"column_end":66}},{"value":"/ start of the current vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":394125,"byte_end":394157,"line_start":1299,"line_end":1299,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":394162,"byte_end":394165,"line_start":1300,"line_end":1300,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":394170,"byte_end":394188,"line_start":1301,"line_end":1301,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":394193,"byte_end":394204,"line_start":1302,"line_end":1302,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3050},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":394543,"byte_end":394547,"line_start":1313,"line_end":1313,"column_start":12,"column_end":16},"name":"take","qualname":"<Vector<A>>::take","value":"pub fn take(&Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a vector of the first `count` elements from the\n current vector.","sig":null,"attributes":[{"value":"/ Construct a vector of the first `count` elements from the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":394399,"byte_end":394460,"line_start":1308,"line_end":1308,"column_start":5,"column_end":66}},{"value":"/ current vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":394465,"byte_end":394484,"line_start":1309,"line_end":1309,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":394489,"byte_end":394492,"line_start":1310,"line_end":1310,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":394497,"byte_end":394515,"line_start":1311,"line_end":1311,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":394520,"byte_end":394531,"line_start":1312,"line_end":1312,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3051},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":395006,"byte_end":395014,"line_start":1327,"line_end":1327,"column_start":12,"column_end":20},"name":"truncate","qualname":"<Vector<A>>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Truncate a vector to the given size.","sig":null,"attributes":[{"value":"/ Truncate a vector to the given size.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":394769,"byte_end":394809,"line_start":1320,"line_end":1320,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":394814,"byte_end":394817,"line_start":1321,"line_end":1321,"column_start":5,"column_end":8}},{"value":"/ Discards all elements in the vector beyond the given length.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":394822,"byte_end":394886,"line_start":1322,"line_end":1322,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":394891,"byte_end":394894,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ Panics if the new length is greater than the current length.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":394899,"byte_end":394963,"line_start":1324,"line_end":1324,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":394968,"byte_end":394971,"line_start":1325,"line_end":1325,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":394976,"byte_end":394994,"line_start":1326,"line_end":1326,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3052},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":395412,"byte_end":395417,"line_start":1339,"line_end":1339,"column_start":12,"column_end":17},"name":"slice","qualname":"<Vector<A>>::slice","value":"pub fn slice<R>(&mut Self, R) -> Self where R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Extract a slice from a vector.","sig":null,"attributes":[{"value":"/ Extract a slice from a vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":395178,"byte_end":395212,"line_start":1332,"line_end":1332,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":395217,"byte_end":395220,"line_start":1333,"line_end":1333,"column_start":5,"column_end":8}},{"value":"/ Remove the elements from `start_index` until `end_index` in","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":395225,"byte_end":395288,"line_start":1334,"line_end":1334,"column_start":5,"column_end":68}},{"value":"/ the current vector and return the removed slice as a new","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":395293,"byte_end":395353,"line_start":1335,"line_end":1335,"column_start":5,"column_end":65}},{"value":"/ vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":395358,"byte_end":395369,"line_start":1336,"line_end":1336,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":395374,"byte_end":395377,"line_start":1337,"line_end":1337,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":395382,"byte_end":395400,"line_start":1338,"line_end":1338,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3054},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":396529,"byte_end":396535,"line_start":1370,"line_end":1370,"column_start":12,"column_end":18},"name":"insert","qualname":"<Vector<A>>::insert","value":"pub fn insert(&mut Self, usize, A)","parent":null,"children":[],"decl_id":null,"docs":" Insert an element into a vector.","sig":null,"attributes":[{"value":"/ Insert an element into a vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":395801,"byte_end":395837,"line_start":1353,"line_end":1353,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":395842,"byte_end":395845,"line_start":1354,"line_end":1354,"column_start":5,"column_end":8}},{"value":"/ Insert an element at position `index`, shifting all elements","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":395850,"byte_end":395914,"line_start":1355,"line_end":1355,"column_start":5,"column_end":69}},{"value":"/ after it to the right.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":395919,"byte_end":395945,"line_start":1356,"line_end":1356,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":395950,"byte_end":395953,"line_start":1357,"line_end":1357,"column_start":5,"column_end":8}},{"value":"/ ## Performance Note","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":395958,"byte_end":395981,"line_start":1358,"line_end":1358,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":395986,"byte_end":395989,"line_start":1359,"line_end":1359,"column_start":5,"column_end":8}},{"value":"/ While `push_front` and `push_back` are heavily optimised","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":395994,"byte_end":396054,"line_start":1360,"line_end":1360,"column_start":5,"column_end":65}},{"value":"/ operations, `insert` in the middle of a vector requires a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":396059,"byte_end":396120,"line_start":1361,"line_end":1361,"column_start":5,"column_end":66}},{"value":"/ split, a push, and an append. Thus, if you want to insert","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":396125,"byte_end":396186,"line_start":1362,"line_end":1362,"column_start":5,"column_end":66}},{"value":"/ many elements at the same location, instead of `insert`ing","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":396191,"byte_end":396253,"line_start":1363,"line_end":1363,"column_start":5,"column_end":67}},{"value":"/ them one by one, you should rather create a new vector","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":396258,"byte_end":396316,"line_start":1364,"line_end":1364,"column_start":5,"column_end":63}},{"value":"/ containing the elements to insert, split the vector at the","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":396321,"byte_end":396383,"line_start":1365,"line_end":1365,"column_start":5,"column_end":67}},{"value":"/ insertion point, and append the left hand, the new vector and","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":396388,"byte_end":396453,"line_start":1366,"line_end":1366,"column_start":5,"column_end":70}},{"value":"/ the right hand in order.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":396458,"byte_end":396486,"line_start":1367,"line_end":1367,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":396491,"byte_end":396494,"line_start":1368,"line_end":1368,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":396499,"byte_end":396517,"line_start":1369,"line_end":1369,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3055},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":398106,"byte_end":398112,"line_start":1417,"line_end":1417,"column_start":12,"column_end":18},"name":"remove","qualname":"<Vector<A>>::remove","value":"pub fn remove(&mut Self, usize) -> A","parent":null,"children":[],"decl_id":null,"docs":" Remove an element from a vector.","sig":null,"attributes":[{"value":"/ Remove an element from a vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":397471,"byte_end":397507,"line_start":1401,"line_end":1401,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":397512,"byte_end":397515,"line_start":1402,"line_end":1402,"column_start":5,"column_end":8}},{"value":"/ Remove the element from position 'index', shifting all","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":397520,"byte_end":397578,"line_start":1403,"line_end":1403,"column_start":5,"column_end":63}},{"value":"/ elements after it to the left, and return the removec element.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":397583,"byte_end":397649,"line_start":1404,"line_end":1404,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":397654,"byte_end":397657,"line_start":1405,"line_end":1405,"column_start":5,"column_end":8}},{"value":"/ ## Performance Note","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":397662,"byte_end":397685,"line_start":1406,"line_end":1406,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":397690,"byte_end":397693,"line_start":1407,"line_end":1407,"column_start":5,"column_end":8}},{"value":"/ While `pop_front` and `pop_back` are heavily optimised","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":397698,"byte_end":397756,"line_start":1408,"line_end":1408,"column_start":5,"column_end":63}},{"value":"/ operations, `remove` in the middle of a vector requires a","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":397761,"byte_end":397822,"line_start":1409,"line_end":1409,"column_start":5,"column_end":66}},{"value":"/ split, a pop, and an append. Thus, if you want to remove many","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":397827,"byte_end":397892,"line_start":1410,"line_end":1410,"column_start":5,"column_end":70}},{"value":"/ elements from the same location, instead of `remove`ing them","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":397897,"byte_end":397961,"line_start":1411,"line_end":1411,"column_start":5,"column_end":69}},{"value":"/ one by one, it is much better to use [`slice`][slice].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":397966,"byte_end":398024,"line_start":1412,"line_end":1412,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":398029,"byte_end":398032,"line_start":1413,"line_end":1413,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":398037,"byte_end":398055,"line_start":1414,"line_end":1414,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":398060,"byte_end":398063,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ [slice]: #method.slice","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":398068,"byte_end":398094,"line_start":1416,"line_end":1416,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3056},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399351,"byte_end":399361,"line_start":1454,"line_end":1454,"column_start":12,"column_end":22},"name":"insert_ord","qualname":"<Vector<A>>::insert_ord","value":"pub fn insert_ord(&mut Self, A) where A: Ord","parent":null,"children":[],"decl_id":null,"docs":" Insert an element into a sorted vector.","sig":null,"attributes":[{"value":"/ Insert an element into a sorted vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":398880,"byte_end":398923,"line_start":1438,"line_end":1438,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":398928,"byte_end":398931,"line_start":1439,"line_end":1439,"column_start":5,"column_end":8}},{"value":"/ Insert an element into a vector in sorted order, assuming the vector is","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":398936,"byte_end":399011,"line_start":1440,"line_end":1440,"column_start":5,"column_end":80}},{"value":"/ already in sorted order.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399016,"byte_end":399044,"line_start":1441,"line_end":1441,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399049,"byte_end":399052,"line_start":1442,"line_end":1442,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399057,"byte_end":399075,"line_start":1443,"line_end":1443,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399080,"byte_end":399083,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399088,"byte_end":399102,"line_start":1445,"line_end":1445,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399107,"byte_end":399110,"line_start":1446,"line_end":1446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399115,"byte_end":399122,"line_start":1447,"line_end":1447,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399127,"byte_end":399162,"line_start":1448,"line_end":1448,"column_start":5,"column_end":40}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399167,"byte_end":399196,"line_start":1449,"line_end":1449,"column_start":5,"column_end":34}},{"value":"/ let mut vec = vector![1, 2, 3, 7, 8, 9];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399201,"byte_end":399245,"line_start":1450,"line_end":1450,"column_start":5,"column_end":49}},{"value":"/ vec.insert_ord(5);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399250,"byte_end":399272,"line_start":1451,"line_end":1451,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(vector![1, 2, 3, 5, 7, 8, 9], vec);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399277,"byte_end":399327,"line_start":1452,"line_end":1452,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399332,"byte_end":399339,"line_start":1453,"line_end":1453,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3057},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399891,"byte_end":399895,"line_start":1477,"line_end":1477,"column_start":12,"column_end":16},"name":"sort","qualname":"<Vector<A>>::sort","value":"pub fn sort(&mut Self) where A: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort a vector.","sig":null,"attributes":[{"value":"/ Sort a vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399580,"byte_end":399598,"line_start":1464,"line_end":1464,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399603,"byte_end":399606,"line_start":1465,"line_end":1465,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399611,"byte_end":399631,"line_start":1466,"line_end":1466,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399636,"byte_end":399639,"line_start":1467,"line_end":1467,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399644,"byte_end":399658,"line_start":1468,"line_end":1468,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399663,"byte_end":399666,"line_start":1469,"line_end":1469,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399671,"byte_end":399678,"line_start":1470,"line_end":1470,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399683,"byte_end":399718,"line_start":1471,"line_end":1471,"column_start":5,"column_end":40}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399723,"byte_end":399752,"line_start":1472,"line_end":1472,"column_start":5,"column_end":34}},{"value":"/ let mut vec = vector![3, 2, 5, 4, 1];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399757,"byte_end":399798,"line_start":1473,"line_end":1473,"column_start":5,"column_end":46}},{"value":"/ vec.sort();","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399803,"byte_end":399818,"line_start":1474,"line_end":1474,"column_start":5,"column_end":20}},{"value":"/ assert_eq!(vector![1, 2, 3, 4, 5], vec);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399823,"byte_end":399867,"line_start":1475,"line_end":1475,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399872,"byte_end":399879,"line_start":1476,"line_end":1476,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3058},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":400352,"byte_end":400359,"line_start":1497,"line_end":1497,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<Vector<A>>::sort_by","value":"pub fn sort_by<F>(&mut Self, F) where F: Fn(&A, &A) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort a vector using a comparator function.","sig":null,"attributes":[{"value":"/ Sort a vector using a comparator function.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":399981,"byte_end":400027,"line_start":1484,"line_end":1484,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":400032,"byte_end":400035,"line_start":1485,"line_end":1485,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":400040,"byte_end":400060,"line_start":1486,"line_end":1486,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":400065,"byte_end":400068,"line_start":1487,"line_end":1487,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":400073,"byte_end":400087,"line_start":1488,"line_end":1488,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":400092,"byte_end":400095,"line_start":1489,"line_end":1489,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":400100,"byte_end":400107,"line_start":1490,"line_end":1490,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":400112,"byte_end":400147,"line_start":1491,"line_end":1491,"column_start":5,"column_end":40}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":400152,"byte_end":400181,"line_start":1492,"line_end":1492,"column_start":5,"column_end":34}},{"value":"/ let mut vec = vector![3, 2, 5, 4, 1];","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":400186,"byte_end":400227,"line_start":1493,"line_end":1493,"column_start":5,"column_end":46}},{"value":"/ vec.sort_by(|left, right| left.cmp(right));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":400232,"byte_end":400279,"line_start":1494,"line_end":1494,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(vector![1, 2, 3, 4, 5], vec);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":400284,"byte_end":400328,"line_start":1495,"line_end":1495,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":400333,"byte_end":400340,"line_start":1496,"line_end":1496,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3154},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":413976,"byte_end":413980,"line_start":1951,"line_end":1951,"column_start":12,"column_end":16},"name":"Iter","qualname":"::vector::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":3157},{"krate":0,"index":3158},{"krate":0,"index":3159}],"decl_id":null,"docs":" An iterator over vectors with values of type `A`.","sig":null,"attributes":[{"value":"/ An iterator over vectors with values of type `A`.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":413813,"byte_end":413866,"line_start":1946,"line_end":1946,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":413867,"byte_end":413870,"line_start":1947,"line_end":1947,"column_start":1,"column_end":4}},{"value":"/ To obtain one, use [`Vector::iter()`][iter].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":413871,"byte_end":413919,"line_start":1948,"line_end":1948,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":413920,"byte_end":413923,"line_start":1949,"line_end":1949,"column_start":1,"column_end":4}},{"value":"/ [iter]: enum.Vector.html#method.iter","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":413924,"byte_end":413964,"line_start":1950,"line_end":1950,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3181},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":415860,"byte_end":415867,"line_start":2022,"line_end":2022,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::vector::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":3184},{"krate":0,"index":3185},{"krate":0,"index":3186}],"decl_id":null,"docs":" A mutable iterator over vectors with values of type `A`.","sig":null,"attributes":[{"value":"/ A mutable iterator over vectors with values of type `A`.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":415674,"byte_end":415734,"line_start":2017,"line_end":2017,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":415735,"byte_end":415738,"line_start":2018,"line_end":2018,"column_start":1,"column_end":4}},{"value":"/ To obtain one, use [`Vector::iter_mut()`][iter_mut].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":415739,"byte_end":415795,"line_start":2019,"line_end":2019,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":415796,"byte_end":415799,"line_start":2020,"line_end":2020,"column_start":1,"column_end":4}},{"value":"/ [iter_mut]: enum.Vector.html#method.iter_mut","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":415800,"byte_end":415848,"line_start":2021,"line_end":2021,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3208},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":417794,"byte_end":417807,"line_start":2100,"line_end":2100,"column_start":12,"column_end":25},"name":"ConsumingIter","qualname":"::vector::ConsumingIter","value":"ConsumingIter {  }","parent":null,"children":[{"krate":0,"index":3210}],"decl_id":null,"docs":" A consuming iterator over vectors with values of type `A`.\n","sig":null,"attributes":[{"value":"/ A consuming iterator over vectors with values of type `A`.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":417720,"byte_end":417782,"line_start":2099,"line_end":2099,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":3226},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":418830,"byte_end":418836,"line_start":2144,"line_end":2144,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::vector::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":3229},{"krate":0,"index":3230},{"krate":0,"index":3231}],"decl_id":null,"docs":" An iterator over the leaf nodes of a vector.","sig":null,"attributes":[{"value":"/ An iterator over the leaf nodes of a vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":418664,"byte_end":418712,"line_start":2139,"line_end":2139,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":418713,"byte_end":418716,"line_start":2140,"line_end":2140,"column_start":1,"column_end":4}},{"value":"/ To obtain one, use [`Vector::chunks()`][chunks].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":418717,"byte_end":418769,"line_start":2141,"line_end":2141,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":418770,"byte_end":418773,"line_start":2142,"line_end":2142,"column_start":1,"column_end":4}},{"value":"/ [chunks]: enum.Vector.html#method.chunks","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":418774,"byte_end":418818,"line_start":2143,"line_end":2143,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":3248},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":420478,"byte_end":420487,"line_start":2202,"line_end":2202,"column_start":12,"column_end":21},"name":"ChunksMut","qualname":"::vector::ChunksMut","value":"ChunksMut {  }","parent":null,"children":[{"krate":0,"index":3251},{"krate":0,"index":3252},{"krate":0,"index":3253}],"decl_id":null,"docs":" A mutable iterator over the leaf nodes of a vector.","sig":null,"attributes":[{"value":"/ A mutable iterator over the leaf nodes of a vector.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":420289,"byte_end":420344,"line_start":2197,"line_end":2197,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":420345,"byte_end":420348,"line_start":2198,"line_end":2198,"column_start":1,"column_end":4}},{"value":"/ To obtain one, use [`Vector::chunks_mut()`][chunks_mut].","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":420349,"byte_end":420409,"line_start":2199,"line_end":2199,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":420410,"byte_end":420413,"line_start":2200,"line_end":2200,"column_start":1,"column_end":4}},{"value":"/ [chunks_mut]: enum.Vector.html#method.chunks_mut","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":420414,"byte_end":420466,"line_start":2201,"line_end":2201,"column_start":1,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":3270},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iter","value":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","parent":null,"children":[{"krate":0,"index":3271}],"decl_id":null,"docs":" Iterators over immutable data.\n","sig":null,"attributes":[{"value":"/ Iterators over immutable data.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":475743,"byte_end":475777,"line_start":5,"line_end":5,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":3271},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":476779,"byte_end":476785,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"unfold","qualname":"::iter::unfold","value":"pub fn unfold<F, S, A>(S, F) -> /*impl Trait*/ where F: Fn(S) ->\nOption<(A, S)>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator of values using a function to update an owned state\n value.","sig":null,"attributes":[{"value":"/ Create an iterator of values using a function to update an owned state","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":475779,"byte_end":475853,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ value.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":475854,"byte_end":475864,"line_start":8,"line_end":8,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":475865,"byte_end":475868,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The function is called with the current state as its argument, and should","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":475869,"byte_end":475946,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ return an [`Option`][std::option::Option] of a tuple of the next value to","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":475947,"byte_end":476024,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ yield from the iterator and the updated state. If the function returns","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":476025,"byte_end":476099,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ [`None`][std::option::Option::None], the iterator ends.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":476100,"byte_end":476159,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":476160,"byte_end":476163,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":476164,"byte_end":476178,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":476179,"byte_end":476186,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":476187,"byte_end":476222,"line_start":17,"line_end":17,"column_start":1,"column_end":36}},{"value":"/ # use im::iter::unfold;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":476223,"byte_end":476250,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":476251,"byte_end":476280,"line_start":19,"line_end":19,"column_start":1,"column_end":30}},{"value":"/ # use std::iter::FromIterator;","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":476281,"byte_end":476315,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/ // Create an infinite stream of numbers, starting at 0.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":476316,"byte_end":476375,"line_start":21,"line_end":21,"column_start":1,"column_end":60}},{"value":"/ let mut it = unfold(0, |i| Some((i, i + 1)));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":476376,"byte_end":476425,"line_start":22,"line_end":22,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":476426,"byte_end":476429,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ // Make a list out of its first five elements.","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":476430,"byte_end":476480,"line_start":24,"line_end":24,"column_start":1,"column_end":51}},{"value":"/ let numbers = Vector::from_iter(it.take(5));","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":476481,"byte_end":476529,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(numbers, vector![0, 1, 2, 3, 4]);","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":476530,"byte_end":476578,"line_start":26,"line_end":26,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":476579,"byte_end":476586,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":476587,"byte_end":476590,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [std::option::Option]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":476591,"byte_end":476671,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ [std::option::Option::None]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/iter.rs","byte_start":476672,"byte_end":476771,"line_start":30,"line_end":30,"column_start":1,"column_end":100}}]},{"kind":"Mod","id":{"krate":0,"index":3278},"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ser","qualname":"::ser","value":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","parent":null,"children":[{"krate":0,"index":3279},{"krate":0,"index":3280},{"krate":0,"index":3283},{"krate":0,"index":3286},{"krate":0,"index":3289},{"krate":0,"index":3292},{"krate":0,"index":3295},{"krate":0,"index":3296},{"krate":0,"index":3299},{"krate":0,"index":3302},{"krate":0,"index":3305},{"krate":0,"index":3308},{"krate":0,"index":3311},{"krate":0,"index":3312},{"krate":0,"index":3315},{"krate":0,"index":3316},{"krate":0,"index":3318},{"krate":0,"index":3319},{"krate":0,"index":3321},{"krate":0,"index":3324},{"krate":0,"index":3327},{"krate":0,"index":3330},{"krate":0,"index":3333},{"krate":0,"index":3336},{"krate":0,"index":3339},{"krate":0,"index":3346},{"krate":0,"index":3351},{"krate":0,"index":3359},{"krate":0,"index":3368},{"krate":0,"index":3374},{"krate":0,"index":3383},{"krate":0,"index":3388},{"krate":0,"index":3392},{"krate":0,"index":3398},{"krate":0,"index":3403},{"krate":0,"index":3410},{"krate":0,"index":3416},{"krate":0,"index":3422},{"krate":0,"index":3427},{"krate":0,"index":3432}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(test, feature = \"serde\"))","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":20109,"byte_end":20145,"line_start":373,"line_end":373,"column_start":1,"column_end":37}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":26967,"byte_end":26971,"line_start":52,"line_end":52,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":27346,"byte_end":27350,"line_start":63,"line_end":63,"column_start":23,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":28187,"byte_end":28191,"line_start":105,"line_end":105,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":28383,"byte_end":28387,"line_start":117,"line_end":117,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":28535,"byte_end":28539,"line_start":126,"line_end":126,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":29767,"byte_end":29771,"line_start":181,"line_end":181,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":57732,"byte_end":57736,"line_start":917,"line_end":917,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":62818,"byte_end":62822,"line_start":1050,"line_end":1050,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":63539,"byte_end":63543,"line_start":1074,"line_end":1074,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":64412,"byte_end":64425,"line_start":1107,"line_end":1107,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":66033,"byte_end":66046,"line_start":1153,"line_end":1153,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":67164,"byte_end":67177,"line_start":1189,"line_end":1189,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":68197,"byte_end":68210,"line_start":1219,"line_end":1219,"column_start":51,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":68920,"byte_end":68928,"line_start":1250,"line_end":1250,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":69920,"byte_end":69928,"line_start":1282,"line_end":1282,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":74508,"byte_end":74512,"line_start":49,"line_end":49,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":74895,"byte_end":74899,"line_start":63,"line_end":63,"column_start":23,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":75498,"byte_end":75503,"line_start":91,"line_end":91,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":75794,"byte_end":75799,"line_start":101,"line_end":101,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":76286,"byte_end":76291,"line_start":121,"line_end":121,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":76413,"byte_end":76417,"line_start":127,"line_end":127,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":76487,"byte_end":76491,"line_start":133,"line_end":133,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":77370,"byte_end":77374,"line_start":172,"line_end":172,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":85623,"byte_end":85636,"line_start":401,"line_end":401,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":87518,"byte_end":87522,"line_start":482,"line_end":482,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":87835,"byte_end":87839,"line_start":496,"line_end":496,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":89343,"byte_end":89347,"line_start":548,"line_end":548,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":89401,"byte_end":89405,"line_start":550,"line_end":550,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":89706,"byte_end":89713,"line_start":562,"line_end":562,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":90091,"byte_end":90098,"line_start":577,"line_end":577,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":91752,"byte_end":91759,"line_start":631,"line_end":631,"column_start":35,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":91821,"byte_end":91828,"line_start":633,"line_end":633,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":92096,"byte_end":92101,"line_start":648,"line_end":648,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":92418,"byte_end":92423,"line_start":663,"line_end":663,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":93882,"byte_end":93887,"line_start":712,"line_end":712,"column_start":42,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":93947,"byte_end":93952,"line_start":714,"line_end":714,"column_start":38,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":94022,"byte_end":94026,"line_start":716,"line_end":716,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/rrb.rs","byte_start":95080,"byte_end":95084,"line_start":25,"line_end":25,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/rrb.rs","byte_start":95279,"byte_end":95283,"line_start":34,"line_end":34,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/rrb.rs","byte_start":99583,"byte_end":99588,"line_start":168,"line_end":168,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/rrb.rs","byte_start":99844,"byte_end":99849,"line_start":178,"line_end":178,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/rrb.rs","byte_start":101879,"byte_end":101883,"line_start":251,"line_end":251,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/rrb.rs","byte_start":102025,"byte_end":102029,"line_start":259,"line_end":259,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/rrb.rs","byte_start":102106,"byte_end":102110,"line_start":265,"line_end":265,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/sync.rs","byte_start":143207,"byte_end":143211,"line_start":16,"line_end":16,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/sync.rs","byte_start":143518,"byte_end":143522,"line_start":29,"line_end":29,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":153405,"byte_end":153411,"line_start":172,"line_end":172,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":156793,"byte_end":156799,"line_start":311,"line_end":311,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":887},{"krate":0,"index":890},{"krate":0,"index":893},{"krate":0,"index":896},{"krate":0,"index":899},{"krate":0,"index":901},{"krate":0,"index":907},{"krate":0,"index":911},{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165336,"byte_end":165342,"line_start":620,"line_end":620,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":958},{"krate":0,"index":960},{"krate":0,"index":962},{"krate":0,"index":966},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":973},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":980},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":985},{"krate":0,"index":990},{"krate":0,"index":994},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1001},{"krate":0,"index":1003},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1008},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":192202,"byte_end":192207,"line_start":1494,"line_end":1494,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":193894,"byte_end":193907,"line_start":1560,"line_end":1560,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":195259,"byte_end":195270,"line_start":1617,"line_end":1617,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":195842,"byte_end":195848,"line_start":1644,"line_end":1644,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1065}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":196145,"byte_end":196151,"line_start":1659,"line_end":1659,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":196885,"byte_end":196891,"line_start":1692,"line_end":1692,"column_start":33,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":196928,"byte_end":196934,"line_start":1694,"line_end":1694,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":197116,"byte_end":197122,"line_start":1704,"line_end":1704,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":197274,"byte_end":197280,"line_start":1714,"line_end":1714,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":197499,"byte_end":197505,"line_start":1729,"line_end":1729,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":197803,"byte_end":197809,"line_start":1747,"line_end":1747,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1099},{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":197993,"byte_end":197999,"line_start":1759,"line_end":1759,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":198223,"byte_end":198229,"line_start":1772,"line_end":1772,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":198547,"byte_end":198553,"line_start":1787,"line_end":1787,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1119},{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":198885,"byte_end":198891,"line_start":1802,"line_end":1802,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":199305,"byte_end":199311,"line_start":1817,"line_end":1817,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":199716,"byte_end":199720,"line_start":1838,"line_end":1838,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":200052,"byte_end":200056,"line_start":1853,"line_end":1853,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1148}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":200251,"byte_end":200255,"line_start":1862,"line_end":1862,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":200920,"byte_end":200928,"line_start":1885,"line_end":1885,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1163},{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":201617,"byte_end":201621,"line_start":1911,"line_end":1911,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":201913,"byte_end":201917,"line_start":1927,"line_end":1927,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":202171,"byte_end":202175,"line_start":1940,"line_end":1940,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":202352,"byte_end":202358,"line_start":1952,"line_end":1952,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":202650,"byte_end":202656,"line_start":1968,"line_end":1968,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":202910,"byte_end":202916,"line_start":1981,"line_end":1981,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":203012,"byte_end":203018,"line_start":1988,"line_end":1988,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1215}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":203565,"byte_end":203571,"line_start":2017,"line_end":2017,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":203841,"byte_end":203847,"line_start":2032,"line_end":2032,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1233}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":203976,"byte_end":203982,"line_start":2038,"line_end":2038,"column_start":67,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":204348,"byte_end":204354,"line_start":2052,"line_end":2052,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":204729,"byte_end":204735,"line_start":2068,"line_end":2068,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":204959,"byte_end":204965,"line_start":2078,"line_end":2078,"column_start":65,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":205374,"byte_end":205380,"line_start":2094,"line_end":2094,"column_start":75,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":205629,"byte_end":205635,"line_start":2104,"line_end":2104,"column_start":75,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":206052,"byte_end":206058,"line_start":2120,"line_end":2120,"column_start":65,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":206314,"byte_end":206320,"line_start":2130,"line_end":2130,"column_start":81,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":206754,"byte_end":206760,"line_start":2146,"line_end":2146,"column_start":87,"column_end":93},"value":"","parent":null,"children":[{"krate":0,"index":1306}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":206951,"byte_end":206957,"line_start":2153,"line_end":2153,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":224408,"byte_end":224413,"line_start":69,"line_end":69,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1405},{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":224691,"byte_end":224696,"line_start":79,"line_end":79,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1414},{"krate":0,"index":1416},{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":227449,"byte_end":227455,"line_start":181,"line_end":181,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230671,"byte_end":230677,"line_start":313,"line_end":313,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1440},{"krate":0,"index":1442},{"krate":0,"index":1444},{"krate":0,"index":1446},{"krate":0,"index":1448},{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":235230,"byte_end":235236,"line_start":469,"line_end":469,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1474},{"krate":0,"index":1476},{"krate":0,"index":1477}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":244769,"byte_end":244775,"line_start":825,"line_end":825,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1480}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":245039,"byte_end":245045,"line_start":839,"line_end":839,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":245255,"byte_end":245261,"line_start":846,"line_end":846,"column_start":26,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":245297,"byte_end":245303,"line_start":848,"line_end":848,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1488}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":245447,"byte_end":245453,"line_start":854,"line_end":854,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1491}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":245581,"byte_end":245587,"line_start":860,"line_end":860,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1494}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":245762,"byte_end":245768,"line_start":871,"line_end":871,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1498}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":245861,"byte_end":245867,"line_start":877,"line_end":877,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1501},{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":246193,"byte_end":246199,"line_start":893,"line_end":893,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1510},{"krate":0,"index":1511}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":246539,"byte_end":246545,"line_start":909,"line_end":909,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1519}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":246707,"byte_end":246713,"line_start":918,"line_end":918,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1525}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":246965,"byte_end":246971,"line_start":932,"line_end":932,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1529}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":247245,"byte_end":247249,"line_start":945,"line_end":945,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":247635,"byte_end":247639,"line_start":963,"line_end":963,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1543}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":247813,"byte_end":247817,"line_start":972,"line_end":972,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":248177,"byte_end":248187,"line_start":983,"line_end":983,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":248548,"byte_end":248558,"line_start":1001,"line_end":1001,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":248842,"byte_end":248855,"line_start":1015,"line_end":1015,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1566},{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":249230,"byte_end":249238,"line_start":1034,"line_end":1034,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1576},{"krate":0,"index":1577}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":249810,"byte_end":249816,"line_start":1055,"line_end":1055,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":250297,"byte_end":250303,"line_start":1083,"line_end":1083,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":250606,"byte_end":250612,"line_start":1099,"line_end":1099,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1600}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":250834,"byte_end":250840,"line_start":1109,"line_end":1109,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":250997,"byte_end":251003,"line_start":1118,"line_end":1118,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1608}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":251133,"byte_end":251139,"line_start":1124,"line_end":1124,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1612}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":251295,"byte_end":251301,"line_start":1130,"line_end":1130,"column_start":68,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":251487,"byte_end":251493,"line_start":1136,"line_end":1136,"column_start":76,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":1619}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":251665,"byte_end":251671,"line_start":1142,"line_end":1142,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1622}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":251849,"byte_end":251855,"line_start":1148,"line_end":1148,"column_start":65,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1626}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":252047,"byte_end":252053,"line_start":1154,"line_end":1154,"column_start":74,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":252233,"byte_end":252239,"line_start":1160,"line_end":1160,"column_start":82,"column_end":88},"value":"","parent":null,"children":[{"krate":0,"index":1635}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":258985,"byte_end":258992,"line_start":122,"line_end":122,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1749}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":259509,"byte_end":259516,"line_start":144,"line_end":144,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1753}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260047,"byte_end":260054,"line_start":169,"line_end":169,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1761},{"krate":0,"index":1763},{"krate":0,"index":1764},{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":265383,"byte_end":265390,"line_start":364,"line_end":364,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1779},{"krate":0,"index":1782},{"krate":0,"index":1784},{"krate":0,"index":1790},{"krate":0,"index":1794},{"krate":0,"index":1796}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":270593,"byte_end":270600,"line_start":561,"line_end":561,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1805},{"krate":0,"index":1807},{"krate":0,"index":1810},{"krate":0,"index":1812},{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1816},{"krate":0,"index":1818},{"krate":0,"index":1820},{"krate":0,"index":1823},{"krate":0,"index":1825},{"krate":0,"index":1827},{"krate":0,"index":1830},{"krate":0,"index":1833},{"krate":0,"index":1834},{"krate":0,"index":1837},{"krate":0,"index":1839},{"krate":0,"index":1841},{"krate":0,"index":1845},{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1852},{"krate":0,"index":1854},{"krate":0,"index":1857},{"krate":0,"index":1859},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1864},{"krate":0,"index":1869}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":294845,"byte_end":294850,"line_start":1351,"line_end":1351,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1889},{"krate":0,"index":1891},{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1895}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":296637,"byte_end":296650,"line_start":1420,"line_end":1420,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1910},{"krate":0,"index":1911},{"krate":0,"index":1912},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1916}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":298484,"byte_end":298495,"line_start":1489,"line_end":1489,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1930},{"krate":0,"index":1931},{"krate":0,"index":1932}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":299423,"byte_end":299430,"line_start":1527,"line_end":1527,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1937}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":299809,"byte_end":299816,"line_start":1547,"line_end":1547,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":300507,"byte_end":300514,"line_start":1585,"line_end":1585,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":300613,"byte_end":300620,"line_start":1593,"line_end":1593,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1951}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":300985,"byte_end":300992,"line_start":1607,"line_end":1607,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1956}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":301312,"byte_end":301319,"line_start":1621,"line_end":1621,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1961}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":301563,"byte_end":301570,"line_start":1637,"line_end":1637,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1967}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":301905,"byte_end":301912,"line_start":1654,"line_end":1654,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1972},{"krate":0,"index":1973}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":302383,"byte_end":302390,"line_start":1680,"line_end":1680,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1985}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":302656,"byte_end":302663,"line_start":1694,"line_end":1694,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1994}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":303013,"byte_end":303020,"line_start":1710,"line_end":1710,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2002},{"krate":0,"index":2003}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":303421,"byte_end":303428,"line_start":1726,"line_end":1726,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2010}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":303947,"byte_end":303954,"line_start":1743,"line_end":1743,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2015}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":305142,"byte_end":305146,"line_start":1799,"line_end":1799,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":2028}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":305421,"byte_end":305425,"line_start":1811,"line_end":1811,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":305473,"byte_end":305477,"line_start":1813,"line_end":1813,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":305672,"byte_end":305679,"line_start":1824,"line_end":1824,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":2049}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":305994,"byte_end":306001,"line_start":1840,"line_end":1840,"column_start":38,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":306084,"byte_end":306091,"line_start":1847,"line_end":1847,"column_start":34,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":306281,"byte_end":306294,"line_start":1859,"line_end":1859,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2066}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":306564,"byte_end":306577,"line_start":1874,"line_end":1874,"column_start":31,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":306638,"byte_end":306651,"line_start":1876,"line_end":1876,"column_start":27,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":306815,"byte_end":306819,"line_start":1883,"line_end":1883,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2083}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":307080,"byte_end":307084,"line_start":1895,"line_end":1895,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":307132,"byte_end":307136,"line_start":1897,"line_end":1897,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":307284,"byte_end":307290,"line_start":1904,"line_end":1904,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2104}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":307551,"byte_end":307557,"line_start":1916,"line_end":1916,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":307605,"byte_end":307611,"line_start":1918,"line_end":1918,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":307914,"byte_end":307921,"line_start":1934,"line_end":1934,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2125},{"krate":0,"index":2126},{"krate":0,"index":2127}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":308290,"byte_end":308297,"line_start":1953,"line_end":1953,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2132}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":308643,"byte_end":308650,"line_start":1971,"line_end":1971,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2138}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":308809,"byte_end":308816,"line_start":1978,"line_end":1978,"column_start":80,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":2149}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":309240,"byte_end":309247,"line_start":1994,"line_end":1994,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2156}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":309455,"byte_end":309462,"line_start":2005,"line_end":2005,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2161}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":309673,"byte_end":309680,"line_start":2016,"line_end":2016,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2167}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":309906,"byte_end":309913,"line_start":2027,"line_end":2027,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2172}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":310154,"byte_end":310161,"line_start":2038,"line_end":2038,"column_start":60,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2178}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":310431,"byte_end":310438,"line_start":2049,"line_end":2049,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2184}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":310681,"byte_end":310688,"line_start":2060,"line_end":2060,"column_start":61,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":2190}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":326482,"byte_end":326487,"line_start":103,"line_end":103,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2291},{"krate":0,"index":2292}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":326726,"byte_end":326731,"line_start":112,"line_end":112,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2295},{"krate":0,"index":2296},{"krate":0,"index":2297}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":326922,"byte_end":326929,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2300}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327394,"byte_end":327401,"line_start":147,"line_end":147,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2303}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327852,"byte_end":327859,"line_start":169,"line_end":169,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2307},{"krate":0,"index":2308},{"krate":0,"index":2309},{"krate":0,"index":2310},{"krate":0,"index":2312},{"krate":0,"index":2313},{"krate":0,"index":2315},{"krate":0,"index":2316}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":332035,"byte_end":332042,"line_start":328,"line_end":328,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2320},{"krate":0,"index":2321},{"krate":0,"index":2323},{"krate":0,"index":2326}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":333652,"byte_end":333659,"line_start":391,"line_end":391,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2331},{"krate":0,"index":2332},{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2338},{"krate":0,"index":2340},{"krate":0,"index":2341},{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":2345},{"krate":0,"index":2346}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":339990,"byte_end":339997,"line_start":632,"line_end":632,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2350}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":340324,"byte_end":340331,"line_start":650,"line_end":650,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2354}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":340490,"byte_end":340497,"line_start":660,"line_end":660,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":340589,"byte_end":340596,"line_start":667,"line_end":667,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2361}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":340938,"byte_end":340945,"line_start":680,"line_end":680,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2365}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":341249,"byte_end":341256,"line_start":693,"line_end":693,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2369}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":341491,"byte_end":341498,"line_start":708,"line_end":708,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2374}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":341813,"byte_end":341820,"line_start":724,"line_end":724,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2378},{"krate":0,"index":2379}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":342017,"byte_end":342024,"line_start":736,"line_end":736,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2383},{"krate":0,"index":2384}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":342691,"byte_end":342698,"line_start":772,"line_end":772,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2400}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":342932,"byte_end":342939,"line_start":785,"line_end":785,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2407}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":343242,"byte_end":343249,"line_start":801,"line_end":801,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2412}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":344074,"byte_end":344078,"line_start":840,"line_end":840,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2423}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":344348,"byte_end":344352,"line_start":855,"line_end":855,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":344394,"byte_end":344398,"line_start":857,"line_end":857,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":344578,"byte_end":344591,"line_start":867,"line_end":867,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2435},{"krate":0,"index":2436},{"krate":0,"index":2438}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":344863,"byte_end":344876,"line_start":882,"line_end":882,"column_start":31,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":344937,"byte_end":344950,"line_start":884,"line_end":884,"column_start":27,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":345046,"byte_end":345053,"line_start":888,"line_end":888,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2447}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":345612,"byte_end":345619,"line_start":918,"line_end":918,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2461}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":345978,"byte_end":345985,"line_start":935,"line_end":935,"column_start":62,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2469}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":346283,"byte_end":346290,"line_start":947,"line_end":947,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2475}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":346476,"byte_end":346483,"line_start":957,"line_end":957,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2479}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":346668,"byte_end":346675,"line_start":967,"line_end":967,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2484}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":346874,"byte_end":346881,"line_start":977,"line_end":977,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2488}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":347110,"byte_end":347117,"line_start":987,"line_end":987,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2493}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":347339,"byte_end":347346,"line_start":997,"line_end":997,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2498}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":347548,"byte_end":347555,"line_start":1007,"line_end":1007,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2502}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":347758,"byte_end":347765,"line_start":1017,"line_end":1017,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2507}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441522,"byte_end":441527,"line_start":93,"line_end":93,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2708},{"krate":0,"index":2709},{"krate":0,"index":2710},{"krate":0,"index":2711},{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2714},{"krate":0,"index":2716}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":446395,"byte_end":446400,"line_start":235,"line_end":235,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2720},{"krate":0,"index":2721},{"krate":0,"index":2722}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":446597,"byte_end":446602,"line_start":247,"line_end":247,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2726}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":447011,"byte_end":447020,"line_start":267,"line_end":267,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2736}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":447370,"byte_end":447379,"line_start":282,"line_end":282,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":447451,"byte_end":447460,"line_start":285,"line_end":285,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":447596,"byte_end":447605,"line_start":292,"line_end":292,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2751},{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2754}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":453585,"byte_end":453593,"line_start":470,"line_end":470,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2769},{"krate":0,"index":2770},{"krate":0,"index":2771},{"krate":0,"index":2772},{"krate":0,"index":2774},{"krate":0,"index":2775},{"krate":0,"index":2776},{"krate":0,"index":2777},{"krate":0,"index":2778},{"krate":0,"index":2780},{"krate":0,"index":2783},{"krate":0,"index":2786},{"krate":0,"index":2787},{"krate":0,"index":2789},{"krate":0,"index":2790}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":462893,"byte_end":462901,"line_start":740,"line_end":740,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2794},{"krate":0,"index":2795},{"krate":0,"index":2796}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":463121,"byte_end":463129,"line_start":752,"line_end":752,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2800}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":463435,"byte_end":463447,"line_start":769,"line_end":769,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2812},{"krate":0,"index":2813},{"krate":0,"index":2814},{"krate":0,"index":2815},{"krate":0,"index":2816},{"krate":0,"index":2817},{"krate":0,"index":2818},{"krate":0,"index":2819},{"krate":0,"index":2820},{"krate":0,"index":2821}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/pool.rs","byte_start":469324,"byte_end":469331,"line_start":17,"line_end":17,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2849},{"krate":0,"index":2850},{"krate":0,"index":2851},{"krate":0,"index":2852},{"krate":0,"index":2853},{"krate":0,"index":2854}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/pool.rs","byte_start":470495,"byte_end":470502,"line_start":59,"line_end":59,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2857}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/pool.rs","byte_start":470653,"byte_end":470660,"line_start":66,"line_end":66,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2860}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":471247,"byte_end":471253,"line_start":11,"line_end":11,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2898},{"krate":0,"index":2899},{"krate":0,"index":2900}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":471513,"byte_end":471519,"line_start":25,"line_end":25,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2904},{"krate":0,"index":2905},{"krate":0,"index":2906}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":471965,"byte_end":471972,"line_start":49,"line_end":49,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2914},{"krate":0,"index":2915}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":472241,"byte_end":472248,"line_start":63,"line_end":63,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2920},{"krate":0,"index":2922},{"krate":0,"index":2923}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":472908,"byte_end":472918,"line_start":96,"line_end":96,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2932},{"krate":0,"index":2933}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":473191,"byte_end":473201,"line_start":110,"line_end":110,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2938},{"krate":0,"index":2940},{"krate":0,"index":2941}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":473757,"byte_end":473771,"line_start":140,"line_end":140,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2950},{"krate":0,"index":2951},{"krate":0,"index":2952},{"krate":0,"index":2953}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":474310,"byte_end":474327,"line_start":167,"line_end":167,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2961},{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":2964}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":356325,"byte_end":356328,"line_start":166,"line_end":166,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2994}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":356703,"byte_end":356709,"line_start":180,"line_end":180,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2997},{"krate":0,"index":2998},{"krate":0,"index":2999},{"krate":0,"index":3000},{"krate":0,"index":3001},{"krate":0,"index":3002},{"krate":0,"index":3003},{"krate":0,"index":3004},{"krate":0,"index":3005},{"krate":0,"index":3006},{"krate":0,"index":3009},{"krate":0,"index":3010},{"krate":0,"index":3011},{"krate":0,"index":3012},{"krate":0,"index":3013},{"krate":0,"index":3014},{"krate":0,"index":3015},{"krate":0,"index":3016},{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3019},{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":3023},{"krate":0,"index":3024},{"krate":0,"index":3025},{"krate":0,"index":3026},{"krate":0,"index":3028},{"krate":0,"index":3030}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375618,"byte_end":375624,"line_start":792,"line_end":792,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3036},{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":3039},{"krate":0,"index":3040},{"krate":0,"index":3041},{"krate":0,"index":3042},{"krate":0,"index":3043},{"krate":0,"index":3044},{"krate":0,"index":3045},{"krate":0,"index":3047},{"krate":0,"index":3048},{"krate":0,"index":3049},{"krate":0,"index":3050},{"krate":0,"index":3051},{"krate":0,"index":3052},{"krate":0,"index":3054},{"krate":0,"index":3055},{"krate":0,"index":3056},{"krate":0,"index":3057},{"krate":0,"index":3058}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":401088,"byte_end":401091,"line_start":1524,"line_end":1524,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3062},{"krate":0,"index":3063},{"krate":0,"index":3064},{"krate":0,"index":3065},{"krate":0,"index":3066},{"krate":0,"index":3067},{"krate":0,"index":3068},{"krate":0,"index":3069}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":406958,"byte_end":406964,"line_start":1684,"line_end":1684,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3074}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":407051,"byte_end":407057,"line_start":1690,"line_end":1690,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3077}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":407551,"byte_end":407557,"line_start":1705,"line_end":1705,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3080}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":408109,"byte_end":408115,"line_start":1720,"line_end":1720,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3083}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":409861,"byte_end":409867,"line_start":1772,"line_end":1772,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":409918,"byte_end":409924,"line_start":1774,"line_end":1774,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3088}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":410076,"byte_end":410082,"line_start":1780,"line_end":1780,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3091}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":410212,"byte_end":410218,"line_start":1786,"line_end":1786,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3094}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":410363,"byte_end":410369,"line_start":1794,"line_end":1794,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3098}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":410529,"byte_end":410535,"line_start":1803,"line_end":1803,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3103},{"krate":0,"index":3104}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":411043,"byte_end":411049,"line_start":1828,"line_end":1828,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3112}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":411349,"byte_end":411355,"line_start":1842,"line_end":1842,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3116},{"krate":0,"index":3117}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":411811,"byte_end":411817,"line_start":1859,"line_end":1859,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3120}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":412391,"byte_end":412397,"line_start":1882,"line_end":1882,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3129},{"krate":0,"index":3130},{"krate":0,"index":3131}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":412580,"byte_end":412586,"line_start":1890,"line_end":1890,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3134}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":412922,"byte_end":412928,"line_start":1906,"line_end":1906,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3141}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":413136,"byte_end":413142,"line_start":1916,"line_end":1916,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3146}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":413264,"byte_end":413270,"line_start":1922,"line_end":1922,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3149}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":413549,"byte_end":413555,"line_start":1933,"line_end":1933,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3153}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":414084,"byte_end":414088,"line_start":1957,"line_end":1957,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3163},{"krate":0,"index":3164}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":414465,"byte_end":414469,"line_start":1975,"line_end":1975,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3168},{"krate":0,"index":3169},{"krate":0,"index":3170}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":415138,"byte_end":415142,"line_start":1998,"line_end":1998,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3174}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":415605,"byte_end":415609,"line_start":2013,"line_end":2013,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":415658,"byte_end":415662,"line_start":2015,"line_end":2015,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":415967,"byte_end":415974,"line_start":2028,"line_end":2028,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3190},{"krate":0,"index":3191}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":416426,"byte_end":416433,"line_start":2051,"line_end":2051,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3195},{"krate":0,"index":3196},{"krate":0,"index":3197}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":417131,"byte_end":417138,"line_start":2077,"line_end":2077,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3201}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":417645,"byte_end":417652,"line_start":2095,"line_end":2095,"column_start":42,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":417701,"byte_end":417708,"line_start":2097,"line_end":2097,"column_start":38,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":417854,"byte_end":417867,"line_start":2104,"line_end":2104,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3213}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":417974,"byte_end":417987,"line_start":2110,"line_end":2110,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3216},{"krate":0,"index":3217},{"krate":0,"index":3218}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":418345,"byte_end":418358,"line_start":2126,"line_end":2126,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3221}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":418589,"byte_end":418602,"line_start":2135,"line_end":2135,"column_start":38,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":418643,"byte_end":418656,"line_start":2137,"line_end":2137,"column_start":34,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":418940,"byte_end":418946,"line_start":2150,"line_end":2150,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3235}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":419160,"byte_end":419166,"line_start":2160,"line_end":2160,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3239},{"krate":0,"index":3240}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":419708,"byte_end":419714,"line_start":2178,"line_end":2178,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3244}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":420271,"byte_end":420277,"line_start":2195,"line_end":2195,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":420594,"byte_end":420603,"line_start":2208,"line_end":2208,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3257}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":420851,"byte_end":420860,"line_start":2219,"line_end":2219,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3261},{"krate":0,"index":3262}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":421409,"byte_end":421418,"line_start":2237,"line_end":2237,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3266}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":421978,"byte_end":421987,"line_start":2254,"line_end":2254,"column_start":38,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":477867,"byte_end":477877,"line_start":28,"line_end":28,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3350}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":478182,"byte_end":478192,"line_start":42,"line_end":42,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3355},{"krate":0,"index":3356},{"krate":0,"index":3357}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":479081,"byte_end":479091,"line_start":80,"line_end":80,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3373}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":479471,"byte_end":479481,"line_start":96,"line_end":96,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3379},{"krate":0,"index":3380},{"krate":0,"index":3381}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":480205,"byte_end":480211,"line_start":125,"line_end":125,"column_start":67,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":3386}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":480422,"byte_end":480428,"line_start":134,"line_end":134,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3390}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":480811,"byte_end":480817,"line_start":150,"line_end":150,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3396}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":481080,"byte_end":481086,"line_start":160,"line_end":160,"column_start":70,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":3401}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":481431,"byte_end":481438,"line_start":175,"line_end":175,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3408}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":481781,"byte_end":481788,"line_start":189,"line_end":189,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3414}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":482308,"byte_end":482315,"line_start":210,"line_end":210,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3420}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":482561,"byte_end":482568,"line_start":220,"line_end":220,"column_start":80,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":3425}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":482928,"byte_end":482934,"line_start":235,"line_end":235,"column_start":61,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3430}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":483160,"byte_end":483166,"line_start":244,"line_end":244,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3434}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":485065,"byte_end":485070,"line_start":17,"line_end":17,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":485099,"byte_end":485104,"line_start":18,"line_end":18,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":485179,"byte_end":485183,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3464},{"krate":0,"index":3465},{"krate":0,"index":3466}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":485389,"byte_end":485393,"line_start":34,"line_end":34,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3469}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":485527,"byte_end":485529,"line_start":45,"line_end":45,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3472},{"krate":0,"index":3473},{"krate":0,"index":3474},{"krate":0,"index":3475},{"krate":0,"index":3477},{"krate":0,"index":3478}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":486466,"byte_end":486468,"line_start":88,"line_end":88,"column_start":19,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3482}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":486580,"byte_end":486582,"line_start":95,"line_end":95,"column_start":19,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3485},{"krate":0,"index":3486}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":486724,"byte_end":486726,"line_start":103,"line_end":103,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3489}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":486869,"byte_end":486871,"line_start":113,"line_end":113,"column_start":16,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":486919,"byte_end":486921,"line_start":115,"line_end":115,"column_start":29,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3494}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":487165,"byte_end":487168,"line_start":130,"line_end":130,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3497},{"krate":0,"index":3498},{"krate":0,"index":3499},{"krate":0,"index":3500},{"krate":0,"index":3502},{"krate":0,"index":3503}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":488114,"byte_end":488117,"line_start":173,"line_end":173,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3507}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":488231,"byte_end":488234,"line_start":180,"line_end":180,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3510},{"krate":0,"index":3511}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":488376,"byte_end":488379,"line_start":188,"line_end":188,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3514}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":488522,"byte_end":488525,"line_start":198,"line_end":198,"column_start":16,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":488573,"byte_end":488576,"line_start":200,"line_end":200,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3519}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/mod.rs","byte_start":148510,"byte_end":148513,"line_start":6,"line_end":6,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":753}},{"kind":"Mod","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/mod.rs","byte_start":148536,"byte_end":148539,"line_start":8,"line_end":8,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1314}},{"kind":"Mod","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/mod.rs","byte_start":255180,"byte_end":255183,"line_start":6,"line_end":6,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1643}},{"kind":"Mod","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/mod.rs","byte_start":255206,"byte_end":255209,"line_start":8,"line_end":8,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2192}},{"kind":"Mod","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":20026,"byte_end":20032,"line_start":366,"line_end":366,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2514}},{"kind":"Mod","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":353155,"byte_end":353160,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2864}},{"kind":"Mod","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":20043,"byte_end":20047,"line_start":368,"line_end":368,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3270}},{"kind":"Mod","span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/lib.rs","byte_start":20169,"byte_end":20172,"line_start":375,"line_end":375,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":3278}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":26967,"byte_end":26971,"line_start":52,"line_end":52,"column_start":25,"column_end":29},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":66},"to":{"krate":0,"index":3452}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":27346,"byte_end":27350,"line_start":63,"line_end":63,"column_start":23,"column_end":27},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":66},"to":{"krate":0,"index":3453}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":28187,"byte_end":28191,"line_start":105,"line_end":105,"column_start":19,"column_end":23},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":28383,"byte_end":28387,"line_start":117,"line_end":117,"column_start":21,"column_end":25},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":28535,"byte_end":28539,"line_start":126,"line_end":126,"column_start":9,"column_end":13},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":66},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":29767,"byte_end":29771,"line_start":181,"line_end":181,"column_start":21,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":66},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":57732,"byte_end":57736,"line_start":917,"line_end":917,"column_start":25,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":62818,"byte_end":62822,"line_start":1050,"line_end":1050,"column_start":43,"column_end":47},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":197},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":63539,"byte_end":63543,"line_start":1074,"line_end":1074,"column_start":54,"column_end":58},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":197},"to":{"krate":2,"index":7677}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":64412,"byte_end":64425,"line_start":1107,"line_end":1107,"column_start":16,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":66033,"byte_end":66046,"line_start":1153,"line_end":1153,"column_start":22,"column_end":35},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":230},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":67164,"byte_end":67177,"line_start":1189,"line_end":1189,"column_start":33,"column_end":46},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":230},"to":{"krate":2,"index":7677}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":68197,"byte_end":68210,"line_start":1219,"line_end":1219,"column_start":51,"column_end":64},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":230},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":68920,"byte_end":68928,"line_start":1250,"line_end":1250,"column_start":17,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/btree.rs","byte_start":69920,"byte_end":69928,"line_start":1282,"line_end":1282,"column_start":26,"column_end":34},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":74508,"byte_end":74512,"line_start":49,"line_end":49,"column_start":25,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3568},"to":{"krate":0,"index":3452}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":74895,"byte_end":74899,"line_start":63,"line_end":63,"column_start":23,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3568},"to":{"krate":0,"index":3453}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":75498,"byte_end":75503,"line_start":91,"line_end":91,"column_start":26,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":376},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":75794,"byte_end":75799,"line_start":101,"line_end":101,"column_start":9,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":76286,"byte_end":76291,"line_start":121,"line_end":121,"column_start":36,"column_end":41},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":376},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":76413,"byte_end":76417,"line_start":127,"line_end":127,"column_start":21,"column_end":25},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3568},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":76487,"byte_end":76491,"line_start":133,"line_end":133,"column_start":9,"column_end":13},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":77370,"byte_end":77374,"line_start":172,"line_end":172,"column_start":20,"column_end":24},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":85623,"byte_end":85636,"line_start":401,"line_end":401,"column_start":20,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":87518,"byte_end":87522,"line_start":482,"line_end":482,"column_start":13,"column_end":17},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":87835,"byte_end":87839,"line_start":496,"line_end":496,"column_start":26,"column_end":30},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":432},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":89343,"byte_end":89347,"line_start":548,"line_end":548,"column_start":35,"column_end":39},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":432},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":89401,"byte_end":89405,"line_start":550,"line_end":550,"column_start":31,"column_end":35},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":432},"to":{"krate":2,"index":8092}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":89706,"byte_end":89713,"line_start":562,"line_end":562,"column_start":13,"column_end":20},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":90091,"byte_end":90098,"line_start":577,"line_end":577,"column_start":26,"column_end":33},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":455},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":91752,"byte_end":91759,"line_start":631,"line_end":631,"column_start":35,"column_end":42},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":455},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":91821,"byte_end":91828,"line_start":633,"line_end":633,"column_start":31,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":455},"to":{"krate":2,"index":8092}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":92096,"byte_end":92101,"line_start":648,"line_end":648,"column_start":9,"column_end":14},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":92418,"byte_end":92423,"line_start":663,"line_end":663,"column_start":22,"column_end":27},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":479},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":93882,"byte_end":93887,"line_start":712,"line_end":712,"column_start":42,"column_end":47},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":479},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":93947,"byte_end":93952,"line_start":714,"line_end":714,"column_start":38,"column_end":43},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":479},"to":{"krate":2,"index":8092}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/hamt.rs","byte_start":94022,"byte_end":94026,"line_start":716,"line_end":716,"column_start":48,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3568},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/rrb.rs","byte_start":95080,"byte_end":95084,"line_start":25,"line_end":25,"column_start":16,"column_end":20},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3581},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/rrb.rs","byte_start":95279,"byte_end":95283,"line_start":34,"line_end":34,"column_start":6,"column_end":10},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/rrb.rs","byte_start":99583,"byte_end":99588,"line_start":168,"line_end":168,"column_start":26,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":570},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/rrb.rs","byte_start":99844,"byte_end":99849,"line_start":178,"line_end":178,"column_start":16,"column_end":21},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/rrb.rs","byte_start":101879,"byte_end":101883,"line_start":251,"line_end":251,"column_start":26,"column_end":30},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":595},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/rrb.rs","byte_start":102025,"byte_end":102029,"line_start":259,"line_end":259,"column_start":28,"column_end":32},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":595},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/nodes/rrb.rs","byte_start":102106,"byte_end":102110,"line_start":265,"line_end":265,"column_start":16,"column_end":20},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/sync.rs","byte_start":143207,"byte_end":143211,"line_start":16,"line_end":16,"column_start":13,"column_end":17},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/sync.rs","byte_start":143518,"byte_end":143522,"line_start":29,"line_end":29,"column_start":23,"column_end":27},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":694},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":153405,"byte_end":153411,"line_start":172,"line_end":172,"column_start":12,"column_end":18},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":859},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":156793,"byte_end":156799,"line_start":311,"line_end":311,"column_start":12,"column_end":18},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":859},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":165336,"byte_end":165342,"line_start":620,"line_end":620,"column_start":12,"column_end":18},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":859},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":192202,"byte_end":192207,"line_start":1494,"line_end":1494,"column_start":16,"column_end":21},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1010},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":193894,"byte_end":193907,"line_start":1560,"line_end":1560,"column_start":16,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":195259,"byte_end":195270,"line_start":1617,"line_end":1617,"column_start":16,"column_end":27},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1049},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":195842,"byte_end":195848,"line_start":1644,"line_end":1644,"column_start":22,"column_end":28},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":196145,"byte_end":196151,"line_start":1659,"line_end":1659,"column_start":26,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":196885,"byte_end":196891,"line_start":1692,"line_end":1692,"column_start":33,"column_end":39},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":196928,"byte_end":196934,"line_start":1694,"line_end":1694,"column_start":27,"column_end":33},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":2717}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":197116,"byte_end":197122,"line_start":1704,"line_end":1704,"column_start":20,"column_end":26},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":2706}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":197274,"byte_end":197280,"line_start":1714,"line_end":1714,"column_start":21,"column_end":27},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":9760}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":197499,"byte_end":197505,"line_start":1729,"line_end":1729,"column_start":24,"column_end":30},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":197803,"byte_end":197809,"line_start":1747,"line_end":1747,"column_start":20,"column_end":26},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":197993,"byte_end":197999,"line_start":1759,"line_end":1759,"column_start":20,"column_end":26},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":7592}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":198223,"byte_end":198229,"line_start":1772,"line_end":1772,"column_start":41,"column_end":47},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":7642}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":198547,"byte_end":198553,"line_start":1787,"line_end":1787,"column_start":38,"column_end":44},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":3319}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":198885,"byte_end":198891,"line_start":1802,"line_end":1802,"column_start":41,"column_end":47},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":3323}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":199305,"byte_end":199311,"line_start":1817,"line_end":1817,"column_start":22,"column_end":28},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":199716,"byte_end":199720,"line_start":1838,"line_end":1838,"column_start":29,"column_end":33},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1131},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":200052,"byte_end":200056,"line_start":1853,"line_end":1853,"column_start":40,"column_end":44},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1131},"to":{"krate":2,"index":7677}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":200251,"byte_end":200255,"line_start":1862,"line_end":1862,"column_start":38,"column_end":42},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1131},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":200920,"byte_end":200928,"line_start":1885,"line_end":1885,"column_start":29,"column_end":37},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1154},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":201617,"byte_end":201621,"line_start":1911,"line_end":1911,"column_start":29,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1166},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":201913,"byte_end":201917,"line_start":1927,"line_end":1927,"column_start":40,"column_end":44},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1166},"to":{"krate":2,"index":7677}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":202171,"byte_end":202175,"line_start":1940,"line_end":1940,"column_start":38,"column_end":42},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1166},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":202352,"byte_end":202358,"line_start":1952,"line_end":1952,"column_start":29,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1188},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":202650,"byte_end":202656,"line_start":1968,"line_end":1968,"column_start":40,"column_end":46},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1188},"to":{"krate":2,"index":7677}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":202910,"byte_end":202916,"line_start":1981,"line_end":1981,"column_start":38,"column_end":44},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1188},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":203012,"byte_end":203018,"line_start":1988,"line_end":1988,"column_start":47,"column_end":53},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":7629}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":203565,"byte_end":203571,"line_start":2017,"line_end":2017,"column_start":29,"column_end":35},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":7633}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":203841,"byte_end":203847,"line_start":2032,"line_end":2032,"column_start":36,"column_end":42},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":203976,"byte_end":203982,"line_start":2038,"line_end":2038,"column_start":67,"column_end":73},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":204348,"byte_end":204354,"line_start":2052,"line_end":2052,"column_start":57,"column_end":63},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":204729,"byte_end":204735,"line_start":2068,"line_end":2068,"column_start":44,"column_end":50},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":204959,"byte_end":204965,"line_start":2078,"line_end":2078,"column_start":65,"column_end":71},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":205374,"byte_end":205380,"line_start":2094,"line_end":2094,"column_start":75,"column_end":81},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":205629,"byte_end":205635,"line_start":2104,"line_end":2104,"column_start":75,"column_end":81},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":206052,"byte_end":206058,"line_start":2120,"line_end":2120,"column_start":65,"column_end":71},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":206314,"byte_end":206320,"line_start":2130,"line_end":2130,"column_start":81,"column_end":87},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":206754,"byte_end":206760,"line_start":2146,"line_end":2146,"column_start":87,"column_end":93},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/map.rs","byte_start":206951,"byte_end":206957,"line_start":2153,"line_end":2153,"column_start":9,"column_end":15},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":224408,"byte_end":224413,"line_start":69,"line_end":69,"column_start":19,"column_end":24},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3664},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":224691,"byte_end":224696,"line_start":79,"line_end":79,"column_start":29,"column_end":34},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3664},"to":{"krate":0,"index":57}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":227449,"byte_end":227455,"line_start":181,"line_end":181,"column_start":9,"column_end":15},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":230671,"byte_end":230677,"line_start":313,"line_end":313,"column_start":9,"column_end":15},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":235230,"byte_end":235236,"line_start":469,"line_end":469,"column_start":9,"column_end":15},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":244769,"byte_end":244775,"line_start":825,"line_end":825,"column_start":19,"column_end":25},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1419},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":245039,"byte_end":245045,"line_start":839,"line_end":839,"column_start":28,"column_end":34},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1419},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":245255,"byte_end":245261,"line_start":846,"line_end":846,"column_start":26,"column_end":32},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1419},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":245297,"byte_end":245303,"line_start":848,"line_end":848,"column_start":29,"column_end":35},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1419},"to":{"krate":2,"index":2717}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":245447,"byte_end":245453,"line_start":854,"line_end":854,"column_start":22,"column_end":28},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1419},"to":{"krate":2,"index":2706}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":245581,"byte_end":245587,"line_start":860,"line_end":860,"column_start":30,"column_end":36},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1419},"to":{"krate":2,"index":9760}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":245762,"byte_end":245768,"line_start":871,"line_end":871,"column_start":21,"column_end":27},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1419},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":245861,"byte_end":245867,"line_start":877,"line_end":877,"column_start":30,"column_end":36},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1419},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":246193,"byte_end":246199,"line_start":893,"line_end":893,"column_start":30,"column_end":36},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1419},"to":{"krate":2,"index":3096}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":246539,"byte_end":246545,"line_start":909,"line_end":909,"column_start":30,"column_end":36},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1419},"to":{"krate":2,"index":7592}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":246707,"byte_end":246713,"line_start":918,"line_end":918,"column_start":26,"column_end":32},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1419},"to":{"krate":2,"index":7642}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":246965,"byte_end":246971,"line_start":932,"line_end":932,"column_start":32,"column_end":38},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1419},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":247245,"byte_end":247249,"line_start":945,"line_end":945,"column_start":26,"column_end":30},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1530},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":247635,"byte_end":247639,"line_start":963,"line_end":963,"column_start":37,"column_end":41},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1530},"to":{"krate":2,"index":7677}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":247813,"byte_end":247817,"line_start":972,"line_end":972,"column_start":35,"column_end":39},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1530},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":248177,"byte_end":248187,"line_start":983,"line_end":983,"column_start":26,"column_end":36},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1547},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":248548,"byte_end":248558,"line_start":1001,"line_end":1001,"column_start":37,"column_end":47},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1547},"to":{"krate":2,"index":7677}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":248842,"byte_end":248855,"line_start":1015,"line_end":1015,"column_start":22,"column_end":35},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1561},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":249230,"byte_end":249238,"line_start":1034,"line_end":1034,"column_start":26,"column_end":34},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1569},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":249810,"byte_end":249816,"line_start":1055,"line_end":1055,"column_start":32,"column_end":38},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1419},"to":{"krate":2,"index":7629}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":250297,"byte_end":250303,"line_start":1083,"line_end":1083,"column_start":26,"column_end":32},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1419},"to":{"krate":2,"index":7633}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":250606,"byte_end":250612,"line_start":1099,"line_end":1099,"column_start":49,"column_end":55},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1419},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":250834,"byte_end":250840,"line_start":1109,"line_end":1109,"column_start":31,"column_end":37},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1419},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":250997,"byte_end":251003,"line_start":1118,"line_end":1118,"column_start":39,"column_end":45},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1419},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":251133,"byte_end":251139,"line_start":1124,"line_end":1124,"column_start":47,"column_end":53},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1419},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":251295,"byte_end":251301,"line_start":1130,"line_end":1130,"column_start":68,"column_end":74},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1419},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":251487,"byte_end":251493,"line_start":1136,"line_end":1136,"column_start":76,"column_end":82},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1419},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":251665,"byte_end":251671,"line_start":1142,"line_end":1142,"column_start":57,"column_end":63},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1419},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":251849,"byte_end":251855,"line_start":1148,"line_end":1148,"column_start":65,"column_end":71},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1419},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":252047,"byte_end":252053,"line_start":1154,"line_end":1154,"column_start":74,"column_end":80},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1419},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ord/set.rs","byte_start":252233,"byte_end":252239,"line_start":1160,"line_end":1160,"column_start":82,"column_end":88},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1419},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":258985,"byte_end":258992,"line_start":122,"line_end":122,"column_start":12,"column_end":19},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":259509,"byte_end":259516,"line_start":144,"line_end":144,"column_start":12,"column_end":19},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":260047,"byte_end":260054,"line_start":169,"line_end":169,"column_start":15,"column_end":22},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":265383,"byte_end":265390,"line_start":364,"line_end":364,"column_start":15,"column_end":22},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":270593,"byte_end":270600,"line_start":561,"line_end":561,"column_start":15,"column_end":22},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":294845,"byte_end":294850,"line_start":1351,"line_end":1351,"column_start":19,"column_end":24},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":296637,"byte_end":296650,"line_start":1420,"line_end":1420,"column_start":19,"column_end":32},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":298484,"byte_end":298495,"line_start":1489,"line_end":1489,"column_start":19,"column_end":30},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":299423,"byte_end":299430,"line_start":1527,"line_end":1527,"column_start":25,"column_end":32},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1732},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":299809,"byte_end":299816,"line_start":1547,"line_end":1547,"column_start":29,"column_end":36},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1732},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":300507,"byte_end":300514,"line_start":1585,"line_end":1585,"column_start":22,"column_end":29},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1732},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":300613,"byte_end":300620,"line_start":1593,"line_end":1593,"column_start":30,"column_end":37},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1732},"to":{"krate":2,"index":2717}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":300985,"byte_end":300992,"line_start":1607,"line_end":1607,"column_start":23,"column_end":30},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1732},"to":{"krate":2,"index":2706}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":301312,"byte_end":301319,"line_start":1621,"line_end":1621,"column_start":24,"column_end":31},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1732},"to":{"krate":2,"index":9760}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":301563,"byte_end":301570,"line_start":1637,"line_end":1637,"column_start":27,"column_end":34},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1732},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":301905,"byte_end":301912,"line_start":1654,"line_end":1654,"column_start":23,"column_end":30},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1732},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":302383,"byte_end":302390,"line_start":1680,"line_end":1680,"column_start":23,"column_end":30},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1732},"to":{"krate":2,"index":7592}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":302656,"byte_end":302663,"line_start":1694,"line_end":1694,"column_start":44,"column_end":51},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1732},"to":{"krate":2,"index":7642}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":303013,"byte_end":303020,"line_start":1710,"line_end":1710,"column_start":41,"column_end":48},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1732},"to":{"krate":2,"index":3319}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":303421,"byte_end":303428,"line_start":1726,"line_end":1726,"column_start":44,"column_end":51},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1732},"to":{"krate":2,"index":3323}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":303947,"byte_end":303954,"line_start":1743,"line_end":1743,"column_start":25,"column_end":32},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1732},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":305142,"byte_end":305146,"line_start":1799,"line_end":1799,"column_start":29,"column_end":33},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2016},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":305421,"byte_end":305425,"line_start":1811,"line_end":1811,"column_start":38,"column_end":42},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2016},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":305473,"byte_end":305477,"line_start":1813,"line_end":1813,"column_start":34,"column_end":38},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2016},"to":{"krate":2,"index":8092}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":305672,"byte_end":305679,"line_start":1824,"line_end":1824,"column_start":29,"column_end":36},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2037},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":305994,"byte_end":306001,"line_start":1840,"line_end":1840,"column_start":38,"column_end":45},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2037},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":306084,"byte_end":306091,"line_start":1847,"line_end":1847,"column_start":34,"column_end":41},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2037},"to":{"krate":2,"index":8092}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":306281,"byte_end":306294,"line_start":1859,"line_end":1859,"column_start":22,"column_end":35},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2058},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":306564,"byte_end":306577,"line_start":1874,"line_end":1874,"column_start":31,"column_end":44},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2058},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":306638,"byte_end":306651,"line_start":1876,"line_end":1876,"column_start":27,"column_end":40},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2058},"to":{"krate":2,"index":8092}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":306815,"byte_end":306819,"line_start":1883,"line_end":1883,"column_start":29,"column_end":33},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2071},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":307080,"byte_end":307084,"line_start":1895,"line_end":1895,"column_start":38,"column_end":42},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2071},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":307132,"byte_end":307136,"line_start":1897,"line_end":1897,"column_start":34,"column_end":38},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2071},"to":{"krate":2,"index":8092}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":307284,"byte_end":307290,"line_start":1904,"line_end":1904,"column_start":29,"column_end":35},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2092},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":307551,"byte_end":307557,"line_start":1916,"line_end":1916,"column_start":38,"column_end":44},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2092},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":307605,"byte_end":307611,"line_start":1918,"line_end":1918,"column_start":34,"column_end":40},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2092},"to":{"krate":2,"index":8092}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":307914,"byte_end":307921,"line_start":1934,"line_end":1934,"column_start":32,"column_end":39},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1732},"to":{"krate":2,"index":7633}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":308290,"byte_end":308297,"line_start":1953,"line_end":1953,"column_start":40,"column_end":47},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1732},"to":{"krate":2,"index":7629}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":308643,"byte_end":308650,"line_start":1971,"line_end":1971,"column_start":43,"column_end":50},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1732},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":308809,"byte_end":308816,"line_start":1978,"line_end":1978,"column_start":80,"column_end":87},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1732},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":309240,"byte_end":309247,"line_start":1994,"line_end":1994,"column_start":42,"column_end":49},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1732},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":309455,"byte_end":309462,"line_start":2005,"line_end":2005,"column_start":37,"column_end":44},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1732},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":309673,"byte_end":309680,"line_start":2016,"line_end":2016,"column_start":45,"column_end":52},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1732},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":309906,"byte_end":309913,"line_start":2027,"line_end":2027,"column_start":52,"column_end":59},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1732},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":310154,"byte_end":310161,"line_start":2038,"line_end":2038,"column_start":60,"column_end":67},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1732},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":310431,"byte_end":310438,"line_start":2049,"line_end":2049,"column_start":53,"column_end":60},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1732},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/map.rs","byte_start":310681,"byte_end":310688,"line_start":2060,"line_end":2060,"column_start":61,"column_end":68},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1732},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":326482,"byte_end":326487,"line_start":103,"line_end":103,"column_start":19,"column_end":24},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3742},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":326726,"byte_end":326731,"line_start":112,"line_end":112,"column_start":23,"column_end":28},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3742},"to":{"krate":0,"index":368}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":326922,"byte_end":326929,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327394,"byte_end":327401,"line_start":147,"line_end":147,"column_start":9,"column_end":16},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":327852,"byte_end":327859,"line_start":169,"line_end":169,"column_start":12,"column_end":19},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":332035,"byte_end":332042,"line_start":328,"line_end":328,"column_start":12,"column_end":19},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":333652,"byte_end":333659,"line_start":391,"line_end":391,"column_start":12,"column_end":19},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":339990,"byte_end":339997,"line_start":632,"line_end":632,"column_start":22,"column_end":29},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":340324,"byte_end":340331,"line_start":650,"line_end":650,"column_start":26,"column_end":33},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":340490,"byte_end":340497,"line_start":660,"line_end":660,"column_start":19,"column_end":26},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":340589,"byte_end":340596,"line_start":667,"line_end":667,"column_start":27,"column_end":34},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":2717}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":340938,"byte_end":340945,"line_start":680,"line_end":680,"column_start":20,"column_end":27},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":2706}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":341249,"byte_end":341256,"line_start":693,"line_end":693,"column_start":21,"column_end":28},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":9760}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":341491,"byte_end":341498,"line_start":708,"line_end":708,"column_start":24,"column_end":31},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":341813,"byte_end":341820,"line_start":724,"line_end":724,"column_start":20,"column_end":27},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":342017,"byte_end":342024,"line_start":736,"line_end":736,"column_start":20,"column_end":27},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":3096}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":342691,"byte_end":342698,"line_start":772,"line_end":772,"column_start":20,"column_end":27},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":7592}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":342932,"byte_end":342939,"line_start":785,"line_end":785,"column_start":29,"column_end":36},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":7642}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":343242,"byte_end":343249,"line_start":801,"line_end":801,"column_start":22,"column_end":29},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":344074,"byte_end":344078,"line_start":840,"line_end":840,"column_start":26,"column_end":30},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":2413},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":344348,"byte_end":344352,"line_start":855,"line_end":855,"column_start":35,"column_end":39},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2413},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":344394,"byte_end":344398,"line_start":857,"line_end":857,"column_start":31,"column_end":35},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2413},"to":{"krate":2,"index":8092}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":344578,"byte_end":344591,"line_start":867,"line_end":867,"column_start":22,"column_end":35},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":2430},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":344863,"byte_end":344876,"line_start":882,"line_end":882,"column_start":31,"column_end":44},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2430},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":344937,"byte_end":344950,"line_start":884,"line_end":884,"column_start":27,"column_end":40},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2430},"to":{"krate":2,"index":8092}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":345046,"byte_end":345053,"line_start":888,"line_end":888,"column_start":37,"column_end":44},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":7629}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":345612,"byte_end":345619,"line_start":918,"line_end":918,"column_start":29,"column_end":36},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":7633}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":345978,"byte_end":345985,"line_start":935,"line_end":935,"column_start":62,"column_end":69},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":346283,"byte_end":346290,"line_start":947,"line_end":947,"column_start":34,"column_end":41},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":346476,"byte_end":346483,"line_start":957,"line_end":957,"column_start":29,"column_end":36},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":346668,"byte_end":346675,"line_start":967,"line_end":967,"column_start":37,"column_end":44},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":346874,"byte_end":346881,"line_start":977,"line_end":977,"column_start":46,"column_end":53},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":347110,"byte_end":347117,"line_start":987,"line_end":987,"column_start":54,"column_end":61},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":347339,"byte_end":347346,"line_start":997,"line_end":997,"column_start":42,"column_end":49},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":347548,"byte_end":347555,"line_start":1007,"line_end":1007,"column_start":32,"column_end":39},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/hash/set.rs","byte_start":347758,"byte_end":347765,"line_start":1017,"line_end":1017,"column_start":40,"column_end":47},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":441522,"byte_end":441527,"line_start":93,"line_end":93,"column_start":13,"column_end":18},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":446395,"byte_end":446400,"line_start":235,"line_end":235,"column_start":30,"column_end":35},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2696},"to":{"krate":2,"index":7633}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":446597,"byte_end":446602,"line_start":247,"line_end":247,"column_start":23,"column_end":28},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2696},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":447011,"byte_end":447020,"line_start":267,"line_end":267,"column_start":19,"column_end":28},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2727},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":447370,"byte_end":447379,"line_start":282,"line_end":282,"column_start":25,"column_end":34},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":2727},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":447451,"byte_end":447460,"line_start":285,"line_end":285,"column_start":25,"column_end":34},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2727},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":447596,"byte_end":447605,"line_start":292,"line_end":292,"column_start":9,"column_end":18},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":453585,"byte_end":453593,"line_start":470,"line_end":470,"column_start":13,"column_end":21},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2755},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":462893,"byte_end":462901,"line_start":740,"line_end":740,"column_start":30,"column_end":38},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2755},"to":{"krate":2,"index":7633}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":463121,"byte_end":463129,"line_start":752,"line_end":752,"column_start":36,"column_end":44},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":2755},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/focus.rs","byte_start":463435,"byte_end":463447,"line_start":769,"line_end":769,"column_start":13,"column_end":25},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/pool.rs","byte_start":469324,"byte_end":469331,"line_start":17,"line_end":17,"column_start":9,"column_end":16},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2842},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/pool.rs","byte_start":470495,"byte_end":470502,"line_start":59,"line_end":59,"column_start":21,"column_end":28},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":2842},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/pool.rs","byte_start":470653,"byte_end":470660,"line_start":66,"line_end":66,"column_start":19,"column_end":26},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":2842},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":471247,"byte_end":471253,"line_start":11,"line_end":11,"column_start":45,"column_end":51},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2966},"to":{"krate":27,"index":4551}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":471513,"byte_end":471519,"line_start":25,"line_end":25,"column_start":48,"column_end":54},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2966},"to":{"krate":27,"index":4562}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":471965,"byte_end":471972,"line_start":49,"line_end":49,"column_start":34,"column_end":41},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2907},"to":{"krate":27,"index":4573}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":472241,"byte_end":472248,"line_start":63,"line_end":63,"column_start":41,"column_end":48},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2907},"to":{"krate":27,"index":4781}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":472908,"byte_end":472918,"line_start":96,"line_end":96,"column_start":34,"column_end":44},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2925},"to":{"krate":27,"index":4573}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":473191,"byte_end":473201,"line_start":110,"line_end":110,"column_start":41,"column_end":51},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2925},"to":{"krate":27,"index":4781}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":473757,"byte_end":473771,"line_start":140,"line_end":140,"column_start":26,"column_end":40},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2943},"to":{"krate":27,"index":404}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/rayon.rs","byte_start":474310,"byte_end":474327,"line_start":167,"line_end":167,"column_start":26,"column_end":43},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2954},"to":{"krate":27,"index":404}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":356325,"byte_end":356328,"line_start":166,"line_end":166,"column_start":19,"column_end":22},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2983},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":356703,"byte_end":356709,"line_start":180,"line_end":180,"column_start":16,"column_end":22},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":2966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":375618,"byte_end":375624,"line_start":792,"line_end":792,"column_start":16,"column_end":22},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":2966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":401088,"byte_end":401091,"line_start":1524,"line_end":1524,"column_start":16,"column_end":19},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":406958,"byte_end":406964,"line_start":1684,"line_end":1684,"column_start":28,"column_end":34},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2966},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":407051,"byte_end":407057,"line_start":1690,"line_end":1690,"column_start":26,"column_end":32},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2966},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":407551,"byte_end":407557,"line_start":1705,"line_end":1705,"column_start":34,"column_end":40},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2966},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":408109,"byte_end":408115,"line_start":1720,"line_end":1720,"column_start":42,"column_end":48},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2966},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":409861,"byte_end":409867,"line_start":1772,"line_end":1772,"column_start":28,"column_end":34},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2966},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":409918,"byte_end":409924,"line_start":1774,"line_end":1774,"column_start":44,"column_end":50},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2966},"to":{"krate":2,"index":2717}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":410076,"byte_end":410082,"line_start":1780,"line_end":1780,"column_start":30,"column_end":36},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2966},"to":{"krate":2,"index":2706}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":410212,"byte_end":410218,"line_start":1786,"line_end":1786,"column_start":32,"column_end":38},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2966},"to":{"krate":2,"index":9760}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":410363,"byte_end":410369,"line_start":1794,"line_end":1794,"column_start":24,"column_end":30},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2966},"to":{"krate":2,"index":7592}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":410529,"byte_end":410535,"line_start":1803,"line_end":1803,"column_start":24,"column_end":30},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2966},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":411043,"byte_end":411049,"line_start":1828,"line_end":1828,"column_start":30,"column_end":36},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2966},"to":{"krate":2,"index":7642}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":411349,"byte_end":411355,"line_start":1842,"line_end":1842,"column_start":33,"column_end":39},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2966},"to":{"krate":2,"index":3319}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":411811,"byte_end":411817,"line_start":1859,"line_end":1859,"column_start":36,"column_end":42},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":2966},"to":{"krate":2,"index":3323}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":412391,"byte_end":412397,"line_start":1882,"line_end":1882,"column_start":33,"column_end":39},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":2966},"to":{"krate":2,"index":7633}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":412580,"byte_end":412586,"line_start":1890,"line_end":1890,"column_start":36,"column_end":42},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":2966},"to":{"krate":2,"index":7629}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":412922,"byte_end":412928,"line_start":1906,"line_end":1906,"column_start":49,"column_end":55},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":2966},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":413136,"byte_end":413142,"line_start":1916,"line_end":1916,"column_start":38,"column_end":44},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":2966},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":413264,"byte_end":413270,"line_start":1922,"line_end":1922,"column_start":33,"column_end":39},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":2966},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":413549,"byte_end":413555,"line_start":1933,"line_end":1933,"column_start":41,"column_end":47},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":2966},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":414084,"byte_end":414088,"line_start":1957,"line_end":1957,"column_start":20,"column_end":24},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":414465,"byte_end":414469,"line_start":1975,"line_end":1975,"column_start":33,"column_end":37},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3154},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":415138,"byte_end":415142,"line_start":1998,"line_end":1998,"column_start":44,"column_end":48},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3154},"to":{"krate":2,"index":7677}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":415605,"byte_end":415609,"line_start":2013,"line_end":2013,"column_start":42,"column_end":46},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3154},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":415658,"byte_end":415662,"line_start":2015,"line_end":2015,"column_start":38,"column_end":42},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3154},"to":{"krate":2,"index":8092}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":415967,"byte_end":415974,"line_start":2028,"line_end":2028,"column_start":13,"column_end":20},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":416426,"byte_end":416433,"line_start":2051,"line_end":2051,"column_start":26,"column_end":33},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3181},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":417131,"byte_end":417138,"line_start":2077,"line_end":2077,"column_start":37,"column_end":44},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3181},"to":{"krate":2,"index":7677}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":417645,"byte_end":417652,"line_start":2095,"line_end":2095,"column_start":42,"column_end":49},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3181},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":417701,"byte_end":417708,"line_start":2097,"line_end":2097,"column_start":38,"column_end":45},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3181},"to":{"krate":2,"index":8092}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":417854,"byte_end":417867,"line_start":2104,"line_end":2104,"column_start":16,"column_end":29},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":417974,"byte_end":417987,"line_start":2110,"line_end":2110,"column_start":29,"column_end":42},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3208},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":418345,"byte_end":418358,"line_start":2126,"line_end":2126,"column_start":40,"column_end":53},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3208},"to":{"krate":2,"index":7677}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":418589,"byte_end":418602,"line_start":2135,"line_end":2135,"column_start":38,"column_end":51},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3208},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":418643,"byte_end":418656,"line_start":2137,"line_end":2137,"column_start":34,"column_end":47},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3208},"to":{"krate":2,"index":8092}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":418940,"byte_end":418946,"line_start":2150,"line_end":2150,"column_start":20,"column_end":26},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":419160,"byte_end":419166,"line_start":2160,"line_end":2160,"column_start":33,"column_end":39},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3226},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":419708,"byte_end":419714,"line_start":2178,"line_end":2178,"column_start":44,"column_end":50},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3226},"to":{"krate":2,"index":7677}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":420271,"byte_end":420277,"line_start":2195,"line_end":2195,"column_start":38,"column_end":44},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3226},"to":{"krate":2,"index":8092}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":420594,"byte_end":420603,"line_start":2208,"line_end":2208,"column_start":20,"column_end":29},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":420851,"byte_end":420860,"line_start":2219,"line_end":2219,"column_start":33,"column_end":42},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3248},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":421409,"byte_end":421418,"line_start":2237,"line_end":2237,"column_start":44,"column_end":53},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3248},"to":{"krate":2,"index":7677}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/vector/mod.rs","byte_start":421978,"byte_end":421987,"line_start":2254,"line_end":2254,"column_start":38,"column_end":47},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3248},"to":{"krate":2,"index":8092}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":477867,"byte_end":477877,"line_start":28,"line_end":28,"column_start":17,"column_end":27},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":478182,"byte_end":478192,"line_start":42,"line_end":42,"column_start":34,"column_end":44},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3339},"to":{"krate":38,"index":1645}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":479081,"byte_end":479091,"line_start":80,"line_end":80,"column_start":20,"column_end":30},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":479471,"byte_end":479481,"line_start":96,"line_end":96,"column_start":37,"column_end":47},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3359},"to":{"krate":38,"index":1645}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":480205,"byte_end":480211,"line_start":125,"line_end":125,"column_start":67,"column_end":73},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":1419},"to":{"krate":38,"index":1559}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":480422,"byte_end":480428,"line_start":134,"line_end":134,"column_start":48,"column_end":54},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":1419},"to":{"krate":38,"index":2100}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":480811,"byte_end":480817,"line_start":150,"line_end":150,"column_start":9,"column_end":15},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":859},"to":{"krate":38,"index":1559}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":481080,"byte_end":481086,"line_start":160,"line_end":160,"column_start":70,"column_end":76},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":859},"to":{"krate":38,"index":2100}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":481431,"byte_end":481438,"line_start":175,"line_end":175,"column_start":41,"column_end":48},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":1732},"to":{"krate":38,"index":1559}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":481781,"byte_end":481788,"line_start":189,"line_end":189,"column_start":29,"column_end":36},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":1732},"to":{"krate":38,"index":2100}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":482308,"byte_end":482315,"line_start":210,"line_end":210,"column_start":9,"column_end":16},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":2282},"to":{"krate":38,"index":1559}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":482561,"byte_end":482568,"line_start":220,"line_end":220,"column_start":80,"column_end":87},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":2282},"to":{"krate":38,"index":2100}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":482928,"byte_end":482934,"line_start":235,"line_end":235,"column_start":61,"column_end":67},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":2966},"to":{"krate":38,"index":1559}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/ser.rs","byte_start":483160,"byte_end":483166,"line_start":244,"line_end":244,"column_start":42,"column_end":48},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":2966},"to":{"krate":38,"index":2100}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":484992,"byte_end":484999,"line_start":14,"line_end":14,"column_start":31,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":2997},"to":{"krate":0,"index":3452}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":485031,"byte_end":485036,"line_start":15,"line_end":15,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2640},"to":{"krate":0,"index":3453}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":485065,"byte_end":485070,"line_start":17,"line_end":17,"column_start":25,"column_end":30},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":650},"to":{"krate":0,"index":3452}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":485099,"byte_end":485104,"line_start":18,"line_end":18,"column_start":23,"column_end":28},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":650},"to":{"krate":0,"index":3453}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":485179,"byte_end":485183,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":3458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":485389,"byte_end":485393,"line_start":34,"line_end":34,"column_start":19,"column_end":23},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":3458},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":485527,"byte_end":485529,"line_start":45,"line_end":45,"column_start":9,"column_end":11},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":3771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":486466,"byte_end":486468,"line_start":88,"line_end":88,"column_start":19,"column_end":21},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":3771},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":486580,"byte_end":486582,"line_start":95,"line_end":95,"column_start":19,"column_end":21},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":3771},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":486724,"byte_end":486726,"line_start":103,"line_end":103,"column_start":23,"column_end":25},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":3771},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":486869,"byte_end":486871,"line_start":113,"line_end":113,"column_start":16,"column_end":18},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":3771},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":486919,"byte_end":486921,"line_start":115,"line_end":115,"column_start":29,"column_end":31},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":3771},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":487165,"byte_end":487168,"line_start":130,"line_end":130,"column_start":9,"column_end":12},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":3778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":488114,"byte_end":488117,"line_start":173,"line_end":173,"column_start":19,"column_end":22},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":3778},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":488231,"byte_end":488234,"line_start":180,"line_end":180,"column_start":19,"column_end":22},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":3778},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":488376,"byte_end":488379,"line_start":188,"line_end":188,"column_start":23,"column_end":26},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":3778},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":488522,"byte_end":488525,"line_start":198,"line_end":198,"column_start":16,"column_end":19},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":3778},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/home/simeon/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.0.0/./src/fakepool.rs","byte_start":488573,"byte_end":488576,"line_start":200,"line_end":200,"column_start":29,"column_end":32},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":3778},"to":{"krate":2,"index":9553}}]}